androidx.recyclerview.widget.RecyclerView: void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int)
androidx.recyclerview.widget.ItemTouchHelper$Callback$2: ItemTouchHelper$Callback$2()
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: java.util.ArrayList mViews
androidx.recyclerview.widget.ListAdapter: void submitList(java.util.List,java.lang.Runnable)
androidx.recyclerview.widget.SortedList: void endBatchedUpdates()
androidx.annotation.RequiresFeature: java.lang.String name()
androidx.recyclerview.widget.RecyclerView: int getChildPosition(android.view.View)
androidx.recyclerview.widget.MessageThreadUtil$MessageQueue
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$4: android.content.Context val$context
com.atakmap.android.harrissaspr.LocateMarker: void placeSprAlert(java.lang.String,java.lang.String,byte[])
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: int[] mSpanOffsets
androidx.recyclerview.widget.RecyclerView$LayoutParams: RecyclerView$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.recyclerview.widget.ItemTouchHelper: void select(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$8: android.widget.Switch val$hhmpGpsSwitch
com.atakmap.android.harrissaspr.converters.SprSAparser: java.lang.String CotDateTime()
androidx.recyclerview.R$dimen: int item_touch_helper_max_drag_scroll_per_frame
androidx.recyclerview.widget.RecyclerView: void swapAdapter(androidx.recyclerview.widget.RecyclerView$Adapter,boolean)
androidx.recyclerview.widget.RecyclerView$4: void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.recyclerview.widget.DefaultItemAnimator$5: DefaultItemAnimator$5(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.View,android.view.ViewPropertyAnimator)
androidx.recyclerview.widget.AdapterHelper: boolean hasAnyUpdateTypes(int)
androidx.recyclerview.widget.DefaultItemAnimator$7: androidx.recyclerview.widget.DefaultItemAnimator this$0
androidx.recyclerview.widget.LayoutState: int INVALID_LAYOUT
androidx.recyclerview.widget.FastScroller: int[] getVerticalRange()
androidx.recyclerview.widget.RecyclerView$ViewHolder: int mWasImportantForAccessibilityBeforeHidden
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
androidx.recyclerview.widget.RecyclerView: void resetScroll()
androidx.recyclerview.widget.LinearLayoutManager: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)
com.atakmap.android.harrissaspr.plugin.R$dimen: int item_touch_helper_swipe_escape_velocity
androidx.recyclerview.widget.SnapHelper: void destroyCallbacks()
androidx.recyclerview.widget.OrientationHelper$2: int getTransformedEndWithDecoration(android.view.View)
androidx.recyclerview.widget.SnapHelper$1: androidx.recyclerview.widget.SnapHelper this$0
androidx.recyclerview.widget.ItemTouchHelper: java.util.List mPendingCleanup
androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean viewNeedsUpdate()
androidx.recyclerview.widget.RecyclerView$ItemAnimator: long getRemoveDuration()
androidx.recyclerview.widget.LinearLayoutManager: boolean isLayoutRTL()
androidx.recyclerview.widget.RecyclerView: int getChildDrawingOrder(int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setMeasuredDimension(android.graphics.Rect,int,int)
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: void recycle(androidx.recyclerview.widget.ViewInfoStore$InfoRecord)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$11: HarrisSaSprDropDownReceiver$11(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver,android.content.Context,android.widget.Spinner,java.lang.String[])
androidx.recyclerview.widget.ItemTouchHelper$Callback: boolean isItemViewSwipeEnabled()
com.atakmap.android.harrissaspr.plugin.R$drawable: int css
com.atakmap.android.harrissaspr.plugin.R$drawable: int new_dark_button_bg
androidx.annotation.DrawableRes
androidx.recyclerview.widget.ChildHelper: void removeViewAt(int)
androidx.recyclerview.widget.ItemTouchHelper$Callback: long DRAG_SCROLL_ACCELERATION_LIMIT_TIME_MS
androidx.recyclerview.widget.AsyncListUtil: androidx.recyclerview.widget.ThreadUtil$MainThreadCallback mMainThreadProxy
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRecyclable()
com.atakmap.android.harrissaspr.driver.UsbSerialPort: boolean getRI()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: java.lang.String toString()
androidx.recyclerview.widget.RecyclerView$Adapter: void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.RecyclerView: void requestDisallowInterceptTouchEvent(boolean)
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
com.atakmap.android.harrissaspr.plugin.R$drawable: int fixed_fighter
androidx.recyclerview.widget.AsyncListUtil: androidx.recyclerview.widget.AsyncListUtil$ViewCallback mViewCallback
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: androidx.core.util.Pools$Pool sPool
com.atakmap.android.harrissaspr.plugin.R$layout
androidx.recyclerview.widget.RecyclerView$Recycler: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
androidx.recyclerview.widget.OrientationHelper$2: int getDecoratedStart(android.view.View)
androidx.recyclerview.widget.RecyclerView$Recycler: void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: java.lang.String harris_db
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: java.lang.Boolean access$202(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver,java.lang.Boolean)
androidx.recyclerview.widget.RecyclerView: void offsetPositionRecordsForRemove(int,int,boolean)
androidx.recyclerview.widget.AsyncListUtil: java.lang.String TAG
androidx.recyclerview.widget.SimpleItemAnimator: void onAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.OrientationHelper: int getEnd()
androidx.recyclerview.widget.DividerItemDecoration: android.graphics.drawable.Drawable mDivider
androidx.recyclerview.widget.StaggeredGridLayoutManager: int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: java.lang.String TAG
androidx.recyclerview.widget.BatchingListUpdateCallback: void onMoved(int,int)
androidx.recyclerview.widget.DefaultItemAnimator$8: androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo val$changeInfo
androidx.recyclerview.widget.AdapterHelper$UpdateOp: java.lang.String toString()
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getTopDecorationHeight(android.view.View)
androidx.recyclerview.widget.GridLayoutManager: void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void layoutDecoratedWithMargins(android.view.View,int,int,int,int)
androidx.recyclerview.widget.AdapterHelper: AdapterHelper(androidx.recyclerview.widget.AdapterHelper$Callback)
androidx.recyclerview.widget.RecyclerView$ViewHolder: int FLAG_RETURNED_FROM_SCRAP
androidx.recyclerview.widget.OpReorderer: androidx.recyclerview.widget.OpReorderer$Callback mCallback
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.SnapHelper: boolean snapFromFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int)
com.atakmap.android.harrissaspr.plugin.R$styleable: int RecyclerView_android_clipToPadding
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: void onItemRangeRemoved(int,int)
androidx.recyclerview.widget.MessageThreadUtil$2: androidx.recyclerview.widget.MessageThreadUtil$MessageQueue mQueue
com.atakmap.android.harrissaspr.plugin.R$dimen: int fastscroll_minimum_range
androidx.recyclerview.widget.DefaultItemAnimator$6: void onAnimationStart(android.animation.Animator)
com.atakmap.android.harrissaspr.plugin.PluginLifecycle: void onPause()
androidx.recyclerview.widget.RecyclerView$State: android.util.SparseArray mData
androidx.recyclerview.widget.RecyclerView: boolean IGNORE_DETACHED_FOCUSED_CHILD
androidx.annotation.VisibleForTesting
androidx.recyclerview.widget.RecyclerView$Recycler: boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void scrollToPosition(int)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$8: com.atakmap.android.maps.MapView val$mapView
androidx.recyclerview.widget.DiffUtil$Callback: DiffUtil$Callback()
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation: float mStartDx
androidx.recyclerview.widget.MessageThreadUtil$1: androidx.recyclerview.widget.MessageThreadUtil$MessageQueue mQueue
androidx.recyclerview.widget.ItemTouchHelper$Callback: androidx.recyclerview.widget.RecyclerView$ViewHolder chooseDropTarget(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,int)
androidx.recyclerview.widget.ItemTouchHelper$5: int onGetChildDrawingOrder(int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean isAutoMeasureEnabled()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int VERTICAL
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_armor
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$6$2: com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$6 this$1
androidx.recyclerview.widget.ItemTouchUIUtilImpl: void onSelected(android.view.View)
androidx.recyclerview.R$styleable: int RecyclerView_android_descendantFocusability
androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildClosestToStart()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void createOrientationHelpers()
androidx.recyclerview.widget.PagerSnapHelper$1: float calculateSpeedPerPixel(android.util.DisplayMetrics)
androidx.annotation.RequiresPermission$Read
androidx.annotation.InspectableProperty: int attributeId()
androidx.recyclerview.widget.RecyclerView: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int findLastCompletelyVisibleItemPosition()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void updateLayoutState(int,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper
com.atakmap.android.harrissaspr.HhmpUdpService: byte[] access$202(com.atakmap.android.harrissaspr.HhmpUdpService,byte[])
androidx.recyclerview.widget.FastScroller: int[] mHorizontalRange
androidx.recyclerview.widget.SimpleItemAnimator: boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.SortedList
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: RecyclerViewAccessibilityDelegate(androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.RecyclerView$Adapter: void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.ThreadUtil$BackgroundCallback: void loadTile(int,int)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanSize
androidx.recyclerview.widget.PagerSnapHelper: androidx.recyclerview.widget.OrientationHelper mHorizontalHelper
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: int USB_RT_ACM
com.atakmap.android.harrissaspr.plugin.R$drawable: int fixed_sof
androidx.recyclerview.widget.PagerSnapHelper: boolean isReverseLayout(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.atakmap.android.harrissaspr.plugin.R$color
androidx.recyclerview.widget.GapWorker: void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long)
androidx.recyclerview.widget.LinearLayoutManager: void ensureLayoutState()
androidx.recyclerview.widget.FastScroller: int mVerticalThumbWidth
androidx.recyclerview.widget.RecyclerView: boolean hasNestedScrollingParent()
com.atakmap.android.harrissaspr.HhmpUdpService$1
com.atakmap.android.harrissaspr.driver.UsbId
androidx.recyclerview.widget.StaggeredGridLayoutManager: int GAP_HANDLING_LAZY
androidx.recyclerview.widget.PagerSnapHelper: androidx.recyclerview.widget.OrientationHelper getOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.recyclerview.widget.AsyncListUtil$DataCallback: int getMaxCachedTiles()
androidx.recyclerview.widget.DefaultItemAnimator$5: android.view.View val$view
com.atakmap.android.harrissaspr.plugin.R$id: int tv
androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getMinEnd(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int mOrientation
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getSpanCount()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.AdapterHelper: void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getWidth()
androidx.recyclerview.widget.DiffUtil$PostponedUpdate: int currentPos
androidx.recyclerview.widget.AsyncListUtil: androidx.recyclerview.widget.ThreadUtil$BackgroundCallback mBackgroundProxy
androidx.recyclerview.widget.ItemTouchHelper$3: androidx.recyclerview.widget.RecyclerView$ViewHolder val$prevSelected
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1: androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int)
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_HANDLE_ADAPTER_UPDATES_TAG
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: int flags
androidx.recyclerview.widget.StaggeredGridLayoutManager: int mSizePerSpan
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: int MAX_READ_SIZE
com.atakmap.android.harrissaspr.converters.MILSTDconverter: java.lang.String milstd_conv_id(int,int)
androidx.annotation.FloatRange: boolean fromInclusive()
androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor
androidx.recyclerview.widget.LinearLayoutManager: int fixLayoutStartGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)
androidx.annotation.FloatRange: boolean toInclusive()
com.atakmap.android.harrissaspr.plugin.R$drawable: int vehicle_truck
com.atakmap.android.harrissaspr.driver.UsbId: int RF7800S
androidx.recyclerview.widget.ThreadUtil$MainThreadCallback: void addTile(int,androidx.recyclerview.widget.TileList$Tile)
androidx.recyclerview.widget.ViewInfoStore: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
androidx.recyclerview.widget.LinearLayoutManager: int VERTICAL
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: com.atakmap.android.harrissaspr.util.SerialInputOutputManager$Listener mListener
androidx.recyclerview.widget.RecyclerView$6: void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
androidx.recyclerview.widget.RecyclerView$LayoutParams: RecyclerView$LayoutParams(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
com.atakmap.android.harrissaspr.converters.HarrisSAparser: java.lang.Double Longtitude()
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int)
androidx.annotation.StringDef: boolean open()
androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)
androidx.recyclerview.widget.AsyncListUtil: void onRangeChanged()
androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)
androidx.recyclerview.widget.GapWorker: void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long)
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo: androidx.recyclerview.widget.RecyclerView$ViewHolder holder
com.atakmap.android.harrissaspr.converters.SprSAparser: java.lang.String Speed()
androidx.recyclerview.widget.ChildHelper: android.view.View findHiddenNonRemovedView(int)
androidx.recyclerview.widget.RecyclerView$1
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView$Recycler
androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])
androidx.recyclerview.widget.GridLayoutManager: void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: int SEND_BREAK
androidx.recyclerview.widget.AsyncListUtil$ViewCallback: void onItemLoaded(int)
androidx.recyclerview.widget.RecyclerView: int mLastTouchX
androidx.recyclerview.R$attr: int layoutManager
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean hasFlexibleChildInBothOrientations()
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: void addFlags(int)
androidx.recyclerview.widget.LayoutState: int ITEM_DIRECTION_HEAD
androidx.recyclerview.widget.DefaultItemAnimator$5: androidx.recyclerview.widget.DefaultItemAnimator this$0
androidx.recyclerview.widget.LinearLayoutManager: boolean DEBUG
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getMinimumHeight()
androidx.recyclerview.widget.RecyclerView$RecycledViewPool
androidx.recyclerview.widget.AsyncListDiffer$1: java.util.List val$newList
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isTmpDetached()
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1: java.lang.Object[] newArray(int)
androidx.recyclerview.widget.AsyncListUtil$2: void updateRange(int,int,int,int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: float MAX_SCROLL_FACTOR
com.atakmap.android.harrissaspr.plugin.R$string: int HHMP_GPS_ENABLED
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int findLastPartiallyVisibleItemPosition()
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: void notifyItemMoved(int,int)
androidx.recyclerview.widget.AsyncListUtil$2: androidx.recyclerview.widget.TileList$Tile acquireTile()
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$5: android.content.Context val$context
androidx.recyclerview.widget.GridLayoutManager: int[] calculateItemBorders(int[],int,int)
androidx.recyclerview.widget.DefaultItemAnimator$3
com.atakmap.android.harrissaspr.HhmpUdpService: void SAUDPengine()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingEnd()
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_anti_armor
androidx.recyclerview.widget.SimpleItemAnimator: boolean mSupportsChangeAnimations
androidx.recyclerview.widget.ItemTouchHelper$Callback: long getAnimationDuration(androidx.recyclerview.widget.RecyclerView,int,float,float)
androidx.recyclerview.widget.SortedList: void replaceAllRemove()
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1: androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel)
androidx.recyclerview.widget.AdapterHelper: int applyPendingUpdatesToPosition(int)
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: com.atakmap.android.harrissaspr.driver.UsbSerialDriver getDriver()
androidx.recyclerview.widget.RecyclerView: boolean isAccessibilityEnabled()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView)
androidx.annotation.StringDef
androidx.annotation.NavigationRes
androidx.recyclerview.widget.ItemTouchHelper: void getSelectedDxDy(float[])
androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll()
com.atakmap.android.harrissaspr.SprSerialService$1: void run()
androidx.recyclerview.widget.RecyclerView$State: int STEP_START
androidx.recyclerview.R$attr: int recyclerViewStyle
androidx.recyclerview.widget.LinearSmoothScroller: void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
androidx.recyclerview.widget.SortedList$BatchedCallback: boolean areItemsTheSame(java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.OrientationHelper$2: int getStartAfterPadding()
androidx.recyclerview.widget.FastScroller: int mHorizontalThumbCenterX
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPosition(android.view.View)
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getSpanGroupIndex(int,int)
com.atakmap.android.harrissaspr.plugin.PluginLifecycle: java.lang.String TAG
com.atakmap.android.harrissaspr.converters.HarrisSAparser: java.lang.String Speed()
androidx.recyclerview.widget.RecyclerView$State: boolean mInPreLayout
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$4: android.content.Intent val$startSprServiceIntent
androidx.recyclerview.widget.SimpleItemAnimator: void onChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int)
com.atakmap.android.harrissaspr.plugin.R$drawable: int btn_delete
com.atakmap.android.harrissaspr.util.MonotonicClock: long millis()
androidx.recyclerview.R$styleable: int RecyclerView_android_orientation
androidx.recyclerview.widget.RecyclerView: void dispatchContentChangedIfNecessary()
androidx.recyclerview.widget.RecyclerView: android.view.accessibility.AccessibilityManager mAccessibilityManager
androidx.recyclerview.widget.RecyclerView: boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
androidx.recyclerview.widget.FastScroller
androidx.recyclerview.widget.RecyclerView$LayoutManager: void endAnimation(android.view.View)
com.atakmap.android.harrissaspr.util.SerialInputOutputManager$State: com.atakmap.android.harrissaspr.util.SerialInputOutputManager$State RUNNING
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1: StaggeredGridLayoutManager$SavedState$1()
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.graphics.PointF computeScrollVectorForPosition(int)
com.atakmap.android.harrissaspr.plugin.R$string: int inputCombatID
androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()
com.atakmap.android.harrissaspr.LocateMarker
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void factorInCreateTime(int,long)
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo: DefaultItemAnimator$ChangeInfo(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
com.atakmap.android.harrissaspr.converters.SprSAparser: java.lang.String RMCstring()
androidx.annotation.RestrictTo$Scope
androidx.recyclerview.widget.RecyclerView$LayoutManager: int mPrefetchMaxCountObserved
androidx.recyclerview.widget.ItemTouchHelper: androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener mItemTouchHelperGestureListener
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: java.lang.String harris_spr_settings
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: RecyclerView$LayoutManager$Properties()
androidx.recyclerview.widget.ViewBoundsCheck: int CVE_PVS_POS
androidx.recyclerview.widget.ChildHelper: boolean unhideViewInternal(android.view.View)
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: LinearLayoutManager$LayoutChunkResult()
androidx.recyclerview.widget.DiffUtil$ItemCallback: boolean areItemsTheSame(java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.FastScroller$AnimatorListener: FastScroller$AnimatorListener(androidx.recyclerview.widget.FastScroller)
com.atakmap.android.harrissaspr.plugin.R$dimen: int header
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int getStartLine(int)
androidx.recyclerview.widget.ItemTouchHelper: int swipeIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.atakmap.android.harrissaspr.util.SerialInputOutputManager
androidx.recyclerview.widget.SimpleItemAnimator: boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.recyclerview.widget.RecyclerView: int getBaseline()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onItemsChanged(androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.ItemTouchHelper: androidx.recyclerview.widget.RecyclerView mRecyclerView
com.atakmap.android.harrissaspr.plugin.BuildConfig: java.lang.String FLAVOR
com.atakmap.android.harrissaspr.plugin.R$id: R$id()
com.atakmap.android.harrissaspr.plugin.R$drawable: int sea_antisubmarine
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: void onItemRangeChanged(int,int,java.lang.Object)
androidx.recyclerview.widget.RecyclerView$ViewFlinger: void fling(int,int)
com.atakmap.android.harrissaspr.plugin.R$string: int domain_promt
androidx.recyclerview.widget.AsyncListUtil$2: void addTile(androidx.recyclerview.widget.TileList$Tile)
androidx.recyclerview.widget.FastScroller: int HIDE_DURATION_MS
androidx.annotation.RestrictTo: androidx.annotation.RestrictTo$Scope[] value()
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: RecyclerView$RecycledViewPool()
androidx.recyclerview.widget.ItemTouchHelper$Callback: int convertToAbsoluteDirection(int,int)
androidx.recyclerview.widget.RecyclerView: int mLayoutOrScrollCounter
androidx.recyclerview.R$id: int item_touch_helper_previous_elevation
androidx.recyclerview.widget.FastScroller: boolean mNeedVerticalScrollbar
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem
androidx.recyclerview.widget.AsyncListDiffer$1: AsyncListDiffer$1(androidx.recyclerview.widget.AsyncListDiffer,java.util.List,java.util.List,int,java.lang.Runnable)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.ItemTouchHelper$Callback: int interpolateOutOfBoundsScroll(androidx.recyclerview.widget.RecyclerView,int,int,int,long)
androidx.recyclerview.widget.DiffUtil$Range: int newListEnd
androidx.recyclerview.widget.RecyclerView: void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.recyclerview.widget.MessageThreadUtil$2$1
androidx.recyclerview.widget.MessageThreadUtil$1: int REMOVE_TILE
androidx.recyclerview.widget.SortedList: int findSameItem(java.lang.Object,java.lang.Object[],int,int)
androidx.recyclerview.widget.RecyclerView: int mInitialTouchY
com.atakmap.android.harrissaspr.util.SerialInputOutputManager$Listener: void onRunError(java.lang.Exception)
com.atakmap.android.harrissaspr.IconsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1: LinearLayoutManager$SavedState$1()
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem: int what
androidx.annotation.DimenRes
androidx.recyclerview.widget.RecyclerView$ItemAnimator: java.util.ArrayList mFinishedListeners
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter
androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean shouldReMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mLayoutDirection
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int findFirstKeyLessThan(android.util.SparseIntArray,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int)
androidx.recyclerview.widget.SortedList: void addAllInternal(java.lang.Object[])
androidx.recyclerview.widget.ItemTouchHelper: int checkHorizontalSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
androidx.recyclerview.widget.FastScroller: void show()
androidx.recyclerview.widget.ViewBoundsCheck: int FLAG_CVE_GT_PVS
androidx.recyclerview.widget.AsyncListDiffer: int mMaxScheduledGeneration
com.atakmap.android.harrissaspr.plugin.PluginLifecycle: PluginLifecycle(android.content.Context)
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope[] values()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1: androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: void assignPositionFromScrapList()
androidx.recyclerview.widget.ViewInfoStore: void process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback)
androidx.recyclerview.widget.AsyncListUtil
androidx.recyclerview.widget.AdapterHelper: void reset()
com.atakmap.android.harrissaspr.HarrisSaSprMapComponent: android.content.Context pluginContext
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
androidx.recyclerview.widget.DefaultItemAnimator$6
com.atakmap.android.harrissaspr.plugin.R$drawable: int sea_cargo
com.atakmap.android.harrissaspr.plugin.BuildConfig: java.lang.String BUILD_TYPE
androidx.recyclerview.widget.AsyncListUtil: android.util.SparseIntArray mMissingPositions
androidx.recyclerview.widget.RecyclerView: int mLastTouchY
androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth
com.atakmap.android.harrissaspr.plugin.R$drawable: int comabat_composite
androidx.recyclerview.widget.RecyclerView: boolean fling(int,int)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$2: android.widget.Switch val$hhmpGpsSwitch
androidx.recyclerview.widget.ItemTouchHelper: int DOWN
com.atakmap.android.harrissaspr.SprSerialService$1: SprSerialService$1(com.atakmap.android.harrissaspr.SprSerialService)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isBound()
androidx.recyclerview.widget.LinearLayoutManager: int fixLayoutEndGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mIsAttachedToWindow
androidx.recyclerview.widget.AdapterHelper: void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isInvalid()
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo: androidx.recyclerview.widget.RecyclerView$ViewHolder oldHolder
androidx.recyclerview.widget.RecyclerView$State: int STEP_LAYOUT
androidx.recyclerview.widget.ItemTouchHelper: int END
androidx.recyclerview.widget.RecyclerView: void ensureBottomGlow()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.recyclerview.widget.GridLayoutManager
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mMeasurementCacheEnabled
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isAttachedToWindow()
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findLastPartiallyOrCompletelyInvisibleChild()
com.atakmap.android.harrissaspr.converters.SprSAparser: java.lang.String RMCstring
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.LayoutState mLayoutState
androidx.recyclerview.widget.ChildHelper$Callback: void addView(android.view.View,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.recyclerview.widget.AdapterHelper: int POSITION_TYPE_NEW_OR_LAID_OUT
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnScrollListener mScrollListener
androidx.recyclerview.widget.ViewInfoStore: boolean DEBUG
com.atakmap.android.harrissaspr.driver.UsbSerialProber: com.atakmap.android.harrissaspr.driver.UsbSerialProber getDefaultProber()
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem: int arg1
androidx.recyclerview.widget.GridLayoutManager: int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int)
com.atakmap.android.harrissaspr.converters.SprSAparser: java.lang.String RoleId()
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo: int fromY
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: android.hardware.usb.UsbEndpoint mControlEndpoint
androidx.recyclerview.widget.RecyclerView: boolean mIgnoreMotionEventTillDown
androidx.recyclerview.widget.OrientationHelper$1: int getTransformedStartWithDecoration(android.view.View)
androidx.recyclerview.widget.AdapterHelper$UpdateOp: int MOVE
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem: androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem next
androidx.recyclerview.R$styleable: int[] RecyclerView
androidx.annotation.RequiresPermission: java.lang.String value()
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem: androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,int,int,int,int,java.lang.Object)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: long getMoveDuration()
androidx.recyclerview.widget.RecyclerView$Recycler: void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.AdapterHelper$UpdateOp: int hashCode()
androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener: void onLongPress(android.view.MotionEvent)
androidx.recyclerview.widget.AdapterHelper$Callback: void markViewHoldersUpdated(int,int,java.lang.Object)
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType NONE
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean)
androidx.recyclerview.widget.OpReorderer: void swapMoveAdd(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp)
com.atakmap.android.harrissaspr.plugin.BuildConfig: BuildConfig()
androidx.recyclerview.widget.DiffUtil$DiffResult: int FLAG_NOT_CHANGED
androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List mPayloads
androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action mRecyclingAction
androidx.recyclerview.widget.RecyclerView: void saveOldPositions()
androidx.recyclerview.widget.RecyclerView$LayoutManager$1: int getChildEnd(android.view.View)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findFirstPartiallyOrCompletelyInvisibleChild()
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo: int toX
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$5: com.atakmap.android.harrissaspr.driver.UsbSerialProber val$prober
androidx.recyclerview.widget.FastScroller: FastScroller(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int)
androidx.recyclerview.widget.GridLayoutManager: android.graphics.Rect mDecorInsets
androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout
androidx.recyclerview.widget.DefaultItemAnimator$8: android.view.View val$newView
androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView mOwnerRecyclerView
androidx.recyclerview.widget.FastScroller: int mScrollbarMinimumRange
androidx.recyclerview.widget.FastScroller: int[] EMPTY_STATE_SET
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void onOffset(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.recyclerview.widget.FastScroller: boolean isDragging()
androidx.annotation.IntDef: boolean open()
com.atakmap.android.harrissaspr.driver.UsbSerialPort: int PARITY_NONE
androidx.recyclerview.widget.SortedList: void beginBatchedUpdates()
com.atakmap.android.harrissaspr.SprSerialService: android.content.BroadcastReceiver broadcastReceiver
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.recyclerview.widget.AsyncListUtil: int mItemCount
com.atakmap.android.harrissaspr.plugin.R$attr: int fastScrollVerticalThumbDrawable
androidx.recyclerview.widget.StaggeredGridLayoutManager$1: androidx.recyclerview.widget.StaggeredGridLayoutManager this$0
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ViewBoundsCheck$Callback mVerticalBoundCheckCallback
androidx.recyclerview.widget.ListAdapter$1: androidx.recyclerview.widget.ListAdapter this$0
androidx.recyclerview.widget.FastScroller$1: void run()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem(android.os.Parcel)
com.atakmap.android.harrissaspr.plugin.R$drawable: int vehicle_armor_gun
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation: ItemTouchHelper$RecoverAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,float,float,float,float)
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: void stop()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
com.atakmap.android.harrissaspr.plugin.R$drawable: int sea_convoy
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: void setRTS(boolean)
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: boolean mCacheSpanGroupIndices
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow
com.atakmap.android.harrissaspr.plugin.PluginNativeLoader: java.lang.String TAG
androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()
androidx.recyclerview.widget.DefaultItemAnimator$8: DefaultItemAnimator$8(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View)
androidx.recyclerview.widget.LinearSnapHelper: LinearSnapHelper()
com.atakmap.android.harrissaspr.IconsAdapter: IconsAdapter(android.content.Context,int[],java.lang.String[])
androidx.recyclerview.widget.FastScroller: android.graphics.drawable.Drawable getHorizontalTrackDrawable()
androidx.recyclerview.widget.ThreadUtil: androidx.recyclerview.widget.ThreadUtil$MainThreadCallback getMainThreadProxy(androidx.recyclerview.widget.ThreadUtil$MainThreadCallback)
androidx.recyclerview.widget.OrientationHelper: int getDecoratedMeasurement(android.view.View)
androidx.recyclerview.widget.DefaultItemAnimator: DefaultItemAnimator()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
androidx.recyclerview.widget.AsyncListUtil: int[] mTmpRange
androidx.recyclerview.widget.ItemTouchHelper: float mSelectedStartY
androidx.recyclerview.widget.ViewInfoStore$InfoRecord
androidx.recyclerview.widget.RecyclerView$State: int getTargetScrollPosition()
androidx.annotation.InspectableProperty$EnumEntry: int value()
com.atakmap.android.harrissaspr.plugin.R$string: int useRadioGPS
androidx.recyclerview.widget.AsyncListUtil$2: AsyncListUtil$2(androidx.recyclerview.widget.AsyncListUtil)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: boolean mHasUnwantedGapAfter
com.atakmap.android.harrissaspr.plugin.R$drawable: int vehicle_c2v_acv
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1
androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener: boolean mShouldReactToLongPress
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onRestoreInstanceState(android.os.Parcelable)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$11: void onNothingSelected(android.widget.AdapterView)
androidx.recyclerview.widget.PagerSnapHelper$1: void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
androidx.recyclerview.widget.LinearSmoothScroller: int TARGET_SEEK_SCROLL_DISTANCE_PX
androidx.recyclerview.widget.LinearLayoutManager: void validateChildOrder()
androidx.recyclerview.widget.RecyclerView$LayoutManager$2: int getParentEnd()
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span)
com.atakmap.android.harrissaspr.SprSerialService: java.lang.String INTENT_ACTION_GRANT_USB
androidx.recyclerview.widget.ItemTouchUIUtil: void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean)
androidx.recyclerview.widget.AsyncDifferConfig: java.util.concurrent.Executor getBackgroundThreadExecutor()
com.atakmap.android.harrissaspr.converters.HarrisSAparser: java.lang.String Course()
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void clearReturnedFromScrapFlag()
androidx.recyclerview.widget.RecyclerView$ViewHolder: int FLAG_INVALID
androidx.recyclerview.widget.SimpleItemAnimator: boolean DEBUG
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: boolean hasJumpTarget()
androidx.recyclerview.widget.ChildHelper$Callback
androidx.recyclerview.widget.ItemTouchHelper$Callback: int RELATIVE_DIR_FLAGS
com.atakmap.android.harrissaspr.plugin.R$drawable: int comabat_aviation
androidx.recyclerview.widget.ItemTouchHelper$2: void onRequestDisallowInterceptTouchEvent(boolean)
androidx.recyclerview.widget.ItemTouchHelper$4: int val$swipeDir
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: RecyclerView$ItemAnimator$ItemHolderInfo()
androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.recyclerview.widget.OrientationHelper$1: int getDecoratedMeasurement(android.view.View)
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation: void onAnimationStart(android.animation.Animator)
androidx.annotation.RequiresPermission$Write: androidx.annotation.RequiresPermission value()
androidx.recyclerview.widget.SortedList: int DELETION
com.atakmap.android.harrissaspr.plugin.R$drawable: int comabat_recon_airborne
androidx.recyclerview.widget.OrientationHelper$1: int getDecoratedStart(android.view.View)
androidx.recyclerview.widget.DiffUtil$DiffResult: void findMatchingItems()
androidx.recyclerview.widget.DiffUtil$DiffResult: int mNewListSize
androidx.recyclerview.widget.MessageThreadUtil$1: void removeTile(int,int)
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: boolean getRTS()
androidx.recyclerview.widget.SortedList: int mNewDataStart
androidx.recyclerview.widget.RecyclerView: android.view.View findNextViewToFocus()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingBottom()
androidx.recyclerview.widget.FastScroller: java.lang.Runnable mHideRunnable
androidx.recyclerview.widget.SortedList: java.lang.Object removeItemAt(int)
androidx.recyclerview.widget.RecyclerView: void onScrollStateChanged(int)
androidx.recyclerview.widget.RecyclerView$State: boolean mTrackOldChangeHolders
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$SmoothScroller mSmoothScroller
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.ViewBoundsCheck: int FLAG_CVE_EQ_PVS
androidx.recyclerview.widget.AdapterHelper$Callback
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollVertically()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mAutoMeasure
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: boolean mFullSpan
com.atakmap.android.harrissaspr.plugin.R$string: int COMBAT_ID
androidx.recyclerview.widget.AsyncListDiffer: java.util.List mReadOnlyList
androidx.recyclerview.widget.AdapterHelper: java.util.ArrayList mPostponedList
androidx.recyclerview.widget.TileList: androidx.recyclerview.widget.TileList$Tile removeAtPos(int)
androidx.recyclerview.widget.RecyclerView: void offsetPositionRecordsForMove(int,int)
androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback
androidx.recyclerview.widget.SortedList: int LOOKUP
androidx.recyclerview.widget.LinearLayoutManager: android.os.Parcelable onSaveInstanceState()
androidx.recyclerview.widget.RecyclerView$LayoutManager$2: int getChildStart(android.view.View)
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
androidx.recyclerview.widget.MessageThreadUtil$2: void recycleTile(androidx.recyclerview.widget.TileList$Tile)
androidx.recyclerview.widget.ItemTouchHelper$3
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope SUBCLASSES
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$12
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: java.lang.String BROADCAST_ACTION
androidx.recyclerview.widget.RecyclerView: void requestChildOnScreen(android.view.View,android.view.View)
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: long runningAverage(long,long)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int)
com.atakmap.android.harrissaspr.plugin.R$drawable: int cs_iw
androidx.annotation.InspectableProperty$EnumEntry
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void onItemRangeRemoved(int,int)
androidx.recyclerview.R$id
androidx.recyclerview.widget.RecyclerView$6: androidx.recyclerview.widget.RecyclerView this$0
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup: int getSpanIndex(int,int)
androidx.recyclerview.widget.OrientationHelper$1
androidx.recyclerview.widget.FastScroller: int scrollTo(float,float,int[],int,int,int)
androidx.recyclerview.widget.AsyncListDiffer: void submitList(java.util.List)
androidx.recyclerview.widget.LinearLayoutManager: void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)
androidx.recyclerview.widget.LinearSmoothScroller: boolean DEBUG
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: void openInt(android.hardware.usb.UsbDeviceConnection)
androidx.recyclerview.widget.RecyclerView$LayoutManager$2: int getChildEnd(android.view.View)
androidx.recyclerview.widget.OpReorderer: void reorderOps(java.util.List)
androidx.recyclerview.widget.RecyclerView$Recycler: android.view.View getViewForPosition(int,boolean)
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int left
com.atakmap.android.harrissaspr.plugin.R$drawable: int fixed_interceptor
com.atakmap.android.harrissaspr.plugin.R$dimen: int spinner_item
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.recyclerview.widget.SnapHelper: int[] calculateScrollDistance(int,int)
androidx.recyclerview.widget.RecyclerView: void draw(android.graphics.Canvas)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void clear()
androidx.recyclerview.widget.RecyclerView$Recycler: void updateViewCacheSize()
androidx.recyclerview.widget.TileList$Tile: androidx.recyclerview.widget.TileList$Tile mNext
androidx.recyclerview.widget.ViewInfoStore: void onDetach()
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int getSpanIndex()
com.atakmap.android.harrissaspr.plugin.R$style: int AppTheme
androidx.recyclerview.widget.LinearSnapHelper: float computeDistancePerChild(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper)
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl: int mCount
androidx.recyclerview.widget.RecyclerView: void findMinMaxChildLayoutPositions(int[])
com.atakmap.android.harrissaspr.plugin.R$drawable: int cs_sigint
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup: GridLayoutManager$DefaultSpanSizeLookup()
com.atakmap.android.harrissaspr.util.MonotonicClock: long NS_PER_MS
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
androidx.recyclerview.widget.DiffUtil$DiffResult: int FLAG_OFFSET
androidx.recyclerview.widget.DefaultItemAnimator: void animateMoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_inf_air_assault
com.atakmap.android.harrissaspr.driver.UsbSerialPort: void setDTR(boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager
androidx.recyclerview.widget.ChildHelper$Callback: void onLeftHiddenState(android.view.View)
androidx.recyclerview.widget.AsyncListUtil$2: int mLastRequiredTileStart
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int getEndLine()
androidx.recyclerview.widget.ItemTouchHelper: void startDrag(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void update(int,int,int,android.view.animation.Interpolator)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void requestLayout()
androidx.recyclerview.widget.DiffUtil$DiffResult: int convertOldPositionToNew(int)
androidx.recyclerview.widget.ItemTouchHelper$Callback: boolean hasSwipeFlag(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.RecyclerView$Recycler: void offsetPositionRecordsForInsert(int,int)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$2
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setMeasuredDimension(android.graphics.Rect,int,int)
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback: void setDefaultDragDirs(int)
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: int mChildEnd
androidx.recyclerview.widget.AsyncListDiffer: java.util.concurrent.Executor sMainThreadExecutor
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation: void start()
androidx.recyclerview.widget.ListAdapter
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemChanged(int)
androidx.recyclerview.widget.AsyncListUtil$DataCallback: void recycleData(java.lang.Object[],int)
androidx.recyclerview.widget.RecyclerView: int TOUCH_SLOP_PAGING
androidx.recyclerview.widget.DiffUtil$Snake: int x
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: android.view.View getFocusableViewAfter(int,int)
androidx.recyclerview.widget.SortedList: androidx.recyclerview.widget.SortedList$Callback mCallback
androidx.recyclerview.widget.StaggeredGridLayoutManager: int[] findLastCompletelyVisibleItemPositions(int[])
com.atakmap.android.harrissaspr.plugin.R$drawable: int sea_patrol
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo postInfo
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean)
androidx.recyclerview.widget.SortedList$BatchedCallback: void onChanged(int,int)
androidx.annotation.InspectableProperty$FlagEntry
com.atakmap.android.harrissaspr.plugin.R$string: int HHMP_BFT_ENABLED
androidx.recyclerview.widget.ListAdapter: ListAdapter(androidx.recyclerview.widget.DiffUtil$ItemCallback)
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: int read(byte[],int)
com.atakmap.android.harrissaspr.plugin.R$xml: int device_filter
androidx.recyclerview.widget.DiffUtil$1: int compare(java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.AsyncListUtil$2
androidx.recyclerview.widget.MessageThreadUtil$2$1: androidx.recyclerview.widget.MessageThreadUtil$2 this$1
androidx.recyclerview.widget.RecyclerView$6: RecyclerView$6(androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: int getTargetPosition()
androidx.annotation.Size: long min()
androidx.recyclerview.widget.ScrollbarHelper: int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver mObserver
androidx.recyclerview.widget.GapWorker: java.util.Comparator sTaskComparator
androidx.recyclerview.widget.RecyclerView$ViewFlinger: int mLastFlingY
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.FastScroller: int mRecyclerViewWidth
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int mCachedEnd
com.atakmap.android.harrissaspr.plugin.R$drawable: int rotor_recon
com.atakmap.android.harrissaspr.driver.UsbSerialPort: int PARITY_EVEN
com.atakmap.android.harrissaspr.plugin.PluginLifecycle: java.util.Collection overlays
androidx.recyclerview.widget.SnapHelper: androidx.recyclerview.widget.RecyclerView$OnScrollListener mScrollListener
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onAttachedToWindow(androidx.recyclerview.widget.RecyclerView)
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_aa_armored_air_assault
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[] mSpans
com.atakmap.android.harrissaspr.plugin.R$drawable: int sensor_radar
androidx.recyclerview.widget.RecyclerView$SavedState$1: androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel)
androidx.recyclerview.widget.RecyclerView: int mDispatchScrollCounter
androidx.recyclerview.widget.AdapterHelper: void consumePostponedUpdates()
androidx.recyclerview.widget.DefaultItemAnimator: void dispatchFinishedWhenDone()
androidx.recyclerview.widget.RecyclerView: void offsetPositionRecordsForInsert(int,int)
androidx.recyclerview.widget.ChildHelper: int getUnfilteredChildCount()
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: void invalidateSpanInfo()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int)
androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener
com.atakmap.android.harrissaspr.driver.UsbSerialPort: int PARITY_MARK
com.atakmap.android.harrissaspr.HhmpUdpService: android.os.IBinder onBind(android.content.Intent)
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1
androidx.recyclerview.R$dimen: int fastscroll_default_thickness
com.atakmap.android.harrissaspr.util.SerialInputOutputManager$State: com.atakmap.android.harrissaspr.util.SerialInputOutputManager$State valueOf(java.lang.String)
androidx.recyclerview.R$styleable: int RecyclerView_layoutManager
androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutState(int,int,boolean,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.AdapterHelper$UpdateOp: int itemCount
androidx.recyclerview.widget.SnapHelper$2: androidx.recyclerview.widget.SnapHelper this$0
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: int DEFAULT_MAX_SCRAP
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAndRecycleView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler)
com.atakmap.android.harrissaspr.driver.ProbeTable: com.atakmap.android.harrissaspr.driver.ProbeTable addDriver(java.lang.Class)
androidx.recyclerview.widget.DefaultItemAnimator$5
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isAdapterPositionUnknown()
androidx.recyclerview.widget.ChildHelper: boolean DEBUG
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope[] $VALUES
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: void open(android.hardware.usb.UsbDeviceConnection)
com.atakmap.android.harrissaspr.driver.SerialTimeoutException
com.atakmap.android.harrissaspr.plugin.R$styleable: int RecyclerView_spanCount
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int findOneVisibleChild(int,int,boolean)
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: int mBoundFlags
com.atakmap.android.harrissaspr.plugin.R$drawable: int sea_minehunter
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: android.hardware.usb.UsbRequest mUsbRequest
androidx.recyclerview.widget.RecyclerView$5: int indexOfChild(android.view.View)
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: android.hardware.usb.UsbInterface mDataInterface
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$6: android.content.Context val$context
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()
androidx.recyclerview.widget.SnapHelper: boolean onFling(int,int)
androidx.recyclerview.widget.SortedList: void throwIfInMutationOperation()
androidx.annotation.InspectableProperty$FlagEntry: int target()
com.atakmap.android.harrissaspr.IconsAdapter: long getItemId(int)
androidx.recyclerview.widget.RecyclerView$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.recyclerview.widget.MessageThreadUtil$2: int RECYCLE_TILE
com.atakmap.android.harrissaspr.SprSerialService$1
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: android.hardware.usb.UsbDeviceConnection mConnection
androidx.recyclerview.widget.ChildHelper$Bucket: boolean get(int)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void addFlags(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object)
com.atakmap.android.harrissaspr.plugin.PluginLifecycle: void onFinish()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void recycleFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int)
androidx.recyclerview.widget.DefaultItemAnimator: void animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo)
androidx.recyclerview.widget.RecyclerView$6: void dispatchUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
androidx.recyclerview.widget.ItemTouchHelper: float mSelectedStartX
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyDataSetChanged()
androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()
com.atakmap.android.harrissaspr.driver.ProbeTable: ProbeTable()
androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView mRecyclerView
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$8: android.widget.TableLayout val$tblLayoutHHMP
androidx.recyclerview.widget.ChildHelper$Bucket: void insert(int,boolean)
androidx.recyclerview.widget.RecyclerView
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: void setReadBufferSize(int)
androidx.recyclerview.widget.DividerItemDecoration: DividerItemDecoration(android.content.Context,int)
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation: float mFraction
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setLayoutStateDirection(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle)
androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()
androidx.recyclerview.widget.OrientationHelper$2: void offsetChildren(int)
androidx.recyclerview.widget.DiffUtil$Snake: boolean removal
androidx.recyclerview.widget.AdapterHelper: int updatePositionWithPostponed(int,int)
androidx.recyclerview.widget.OrientationHelper$1: int getDecoratedMeasurementInOther(android.view.View)
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope LIBRARY_GROUP
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean doesTransientStatePreventRecycling()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int findLastReferenceChildPosition(int)
androidx.recyclerview.widget.LinearSmoothScroller: float getSpeedPerPixel()
androidx.recyclerview.widget.SortedList$BatchedCallback: SortedList$BatchedCallback(androidx.recyclerview.widget.SortedList$Callback)
com.atakmap.android.harrissaspr.driver.UsbSerialPort$ControlLine: com.atakmap.android.harrissaspr.driver.UsbSerialPort$ControlLine RI
androidx.recyclerview.widget.ItemTouchHelper: int mSelectedFlags
com.atakmap.android.harrissaspr.plugin.R$drawable: int sof_support
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int)
androidx.recyclerview.widget.FastScroller: android.graphics.drawable.Drawable getVerticalTrackDrawable()
androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void scrollToPosition(int)
androidx.recyclerview.widget.MessageThreadUtil$2$1: MessageThreadUtil$2$1(androidx.recyclerview.widget.MessageThreadUtil$2)
com.atakmap.android.harrissaspr.HarrisSaSprMapComponent
androidx.recyclerview.widget.SortedList$BatchedCallback: int compare(java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.DefaultItemAnimator$6: int val$deltaX
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: java.lang.String access$900(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver)
com.atakmap.android.harrissaspr.plugin.R$drawable: int sof_rotary
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.RecyclerView: void considerReleasingGlowsOnScroll(int,int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View)
androidx.recyclerview.widget.FastScroller: int mRecyclerViewHeight
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
androidx.recyclerview.widget.AdapterHelper: boolean onItemRangeInserted(int,int)
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable mLayoutState
androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll(boolean)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void setRemoveDuration(long)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: void clear()
androidx.recyclerview.widget.RecyclerView$State: java.lang.String toString()
com.atakmap.android.harrissaspr.IconsAdapter: android.view.LayoutInflater inflter
androidx.recyclerview.widget.RecyclerView: boolean mEnableFastScroller
androidx.recyclerview.widget.ItemTouchHelper: int mActionState
androidx.recyclerview.widget.MessageThreadUtil$1: int ADD_TILE
androidx.recyclerview.widget.RecyclerView$ItemAnimator: int FLAG_APPEARED_IN_PRE_LAYOUT
com.atakmap.android.harrissaspr.plugin.R$drawable: int cs_mi
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: int compare(int,int)
androidx.recyclerview.widget.RecyclerView$ViewFlinger: androidx.recyclerview.widget.RecyclerView this$0
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver: java.util.List mPorts
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore$ProcessCallback mViewInfoProcessCallback
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findFirstVisibleChildClosestToStart(boolean,boolean)
com.atakmap.android.harrissaspr.plugin.BuildConfig: int VERSION_CODE
androidx.recyclerview.widget.RecyclerView$LayoutManager: int mWidth
com.atakmap.android.harrissaspr.plugin.R$drawable: int vehicle_apc
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo: int fromX
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean hasMore(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.RecyclerView: void onChildAttachedToWindow(android.view.View)
androidx.recyclerview.widget.RecyclerView$Adapter: void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.LinearLayoutManager: void setStackFromEnd(boolean)
androidx.recyclerview.widget.OrientationHelper$1: int getStartAfterPadding()
com.atakmap.android.harrissaspr.SprSerialService: com.atakmap.android.harrissaspr.util.SerialInputOutputManager usbIoManager
androidx.recyclerview.widget.RecyclerView$State: int getRemainingScrollHorizontal()
androidx.recyclerview.widget.ItemTouchHelper: androidx.recyclerview.widget.RecyclerView$OnItemTouchListener mOnItemTouchListener
androidx.recyclerview.widget.OrientationHelper: void onLayoutComplete()
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int UNDEFINED_DURATION
androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: boolean getRI()
androidx.annotation.AnimatorRes
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl: int[] mPrefetchArray
androidx.recyclerview.widget.RecyclerView$ViewHolder: java.lang.ref.WeakReference mNestedRecyclerView
androidx.recyclerview.widget.MessageThreadUtil$1: MessageThreadUtil$1(androidx.recyclerview.widget.MessageThreadUtil,androidx.recyclerview.widget.ThreadUtil$MainThreadCallback)
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation: float mX
androidx.recyclerview.widget.RecyclerView: int NO_POSITION
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getMinStart(int)
androidx.recyclerview.widget.SnapHelper: androidx.recyclerview.widget.RecyclerView mRecyclerView
com.atakmap.android.harrissaspr.plugin.R$id: int swGPSSPR
androidx.recyclerview.widget.ItemTouchHelper$3: int val$swipeDir
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper mScrollingChildHelper
com.atakmap.android.harrissaspr.plugin.R$id: int edttxtSelfCombatIDHHMP
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$7: void onClick(android.view.View)
androidx.recyclerview.widget.GridLayoutManager: void updateMeasurements()
com.atakmap.android.harrissaspr.plugin.R$drawable: int fixed_uav
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isScrap()
androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()
com.atakmap.android.harrissaspr.plugin.R$string: int btnSave
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isItemPrefetchEnabled()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onSmoothScrollerStopped(androidx.recyclerview.widget.RecyclerView$SmoothScroller)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: int[] iconsCOMBAT
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: boolean isSpanGroupIndexCacheEnabled()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isMeasurementCacheEnabled()
androidx.recyclerview.widget.ViewBoundsCheck: int FLAG_CVS_GT_PVE
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void validate()
androidx.annotation.IntegerRes
androidx.recyclerview.widget.DefaultItemAnimator$3: void run()
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo: androidx.recyclerview.widget.RecyclerView$ViewHolder newHolder
androidx.recyclerview.R$styleable: int RecyclerView_android_clipToPadding
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: java.lang.String PARAM_STATUS
com.atakmap.android.harrissaspr.plugin.R$drawable: int vehicle_mcv
androidx.recyclerview.widget.OrientationHelper$2: int getTransformedStartWithDecoration(android.view.View)
androidx.recyclerview.widget.ChildHelper$Bucket: androidx.recyclerview.widget.ChildHelper$Bucket mNext
androidx.recyclerview.widget.DiffUtil$ItemCallback
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: int getWriteBufferSize()
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
com.atakmap.android.harrissaspr.converters.HarrisSAparser: java.lang.String CALC_chksum()
androidx.recyclerview.widget.ListAdapter: androidx.recyclerview.widget.AsyncListDiffer$ListListener mListener
androidx.recyclerview.widget.AsyncListUtil$2: androidx.recyclerview.widget.TileList$Tile mRecycledRoot
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: int INVALID_SPAN_ID
androidx.recyclerview.widget.DefaultItemAnimator$7: void onAnimationStart(android.animation.Animator)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$7: android.content.Context val$context
com.atakmap.android.harrissaspr.plugin.R$style: int ATAKPluginTheme
androidx.recyclerview.widget.GridLayoutManager: boolean supportsPredictiveItemAnimations()
androidx.recyclerview.widget.SortedListAdapterCallback
com.atakmap.android.harrissaspr.driver.UsbSerialPort: android.hardware.usb.UsbEndpoint getReadEndpoint()
com.atakmap.android.harrissaspr.SprSerialService: boolean connected
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)
androidx.annotation.MenuRes
androidx.recyclerview.widget.GapWorker: java.util.ArrayList mTasks
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: int DIRECTION_TOP
androidx.recyclerview.widget.AdapterHelper: AdapterHelper(androidx.recyclerview.widget.AdapterHelper$Callback,boolean)
androidx.recyclerview.widget.SortedList$BatchedCallback: boolean areContentsTheSame(java.lang.Object,java.lang.Object)
com.atakmap.android.harrissaspr.LocateMarker: void placeSprMarker(java.lang.Boolean,java.lang.String,java.lang.String,byte[],java.lang.String)
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.recyclerview.widget.AdapterHelper: void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
androidx.recyclerview.widget.RecyclerView: boolean hasUpdatedView()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean hasFocus()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void invalidateSpanAssignments()
androidx.recyclerview.widget.RecyclerView$ViewHolder: long mItemId
androidx.recyclerview.widget.RecyclerView$4: RecyclerView$4(androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.OrientationHelper: android.graphics.Rect mTmpRect
com.atakmap.android.harrissaspr.plugin.R$drawable: int cs_ci
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int)
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver: android.hardware.usb.UsbDevice mDevice
com.atakmap.android.harrissaspr.HhmpUdpService
androidx.recyclerview.widget.RecyclerView$Recycler: android.view.View getViewForPosition(int)
androidx.recyclerview.widget.LinearLayoutManager: boolean mStackFromEnd
com.atakmap.android.harrissaspr.driver.UsbSerialPort: com.atakmap.android.harrissaspr.driver.UsbSerialDriver getDriver()
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mDx
androidx.recyclerview.widget.AdapterHelper: boolean canFindInPreLayout(int)
androidx.recyclerview.widget.DiffUtil$Range: DiffUtil$Range()
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: int FLAG_PRE_AND_POST
androidx.recyclerview.widget.RecyclerView: void stopNestedScroll(int)
androidx.recyclerview.widget.ViewInfoStore: void onViewDetached(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.DiffUtil$DiffResult: int FLAG_MOVED_NOT_CHANGED
androidx.recyclerview.widget.RecyclerView$5: void onLeftHiddenState(android.view.View)
com.atakmap.android.harrissaspr.plugin.R$drawable: int cs_eod
androidx.recyclerview.widget.DefaultItemAnimator$4
androidx.recyclerview.widget.RecyclerView: void requestLayout()
androidx.recyclerview.widget.AdapterHelper: void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
androidx.recyclerview.widget.GridLayoutManager: int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.R$attr: int reverseLayout
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getGapStrategy()
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: void disposeImpl()
androidx.recyclerview.widget.LayoutState: int LAYOUT_START
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mNoRecycleSpace
androidx.recyclerview.widget.RecyclerView$LayoutManager: void requestSimpleAnimationsInNextLayout()
androidx.recyclerview.widget.RecyclerView$State: boolean hasTargetScrollPosition()
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: int getReadBufferSize()
androidx.recyclerview.widget.ViewInfoStore: void addToDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$6$1: android.widget.Spinner val$spnUnit
androidx.recyclerview.widget.ItemTouchHelper: int ACTION_STATE_IDLE
com.atakmap.android.harrissaspr.plugin.R$drawable: int css_supply
androidx.recyclerview.widget.DiffUtil$DiffResult
androidx.recyclerview.widget.RecyclerView$ViewHolder: int getOldPosition()
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mExtraFillSpace
com.atakmap.android.harrissaspr.plugin.R$styleable: int RecyclerView_android_descendantFocusability
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getHeight()
androidx.recyclerview.widget.ItemTouchHelper$5: androidx.recyclerview.widget.ItemTouchHelper this$0
androidx.recyclerview.widget.GridLayoutManager: int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl: GapWorker$LayoutPrefetchRegistryImpl()
androidx.recyclerview.widget.LayoutState: int ITEM_DIRECTION_TAIL
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: android.hardware.usb.UsbEndpoint mReadEndpoint
androidx.recyclerview.widget.RecyclerView$Recycler: int mRequestedCacheMax
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation: boolean mEnded
androidx.recyclerview.widget.RecyclerView$LayoutParams: RecyclerView$LayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mPendingInvalidate
androidx.annotation.InspectableProperty: androidx.annotation.InspectableProperty$ValueType valueType()
androidx.recyclerview.widget.OrientationHelper$1: void offsetChild(android.view.View,int)
androidx.recyclerview.widget.ItemTouchHelper: int ACTIVE_POINTER_ID_NONE
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup mLazySpanLookup
androidx.recyclerview.widget.ListAdapter: java.util.List getCurrentList()
androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$Snake diffPartial(androidx.recyclerview.widget.DiffUtil$Callback,int,int,int,int,int[],int[],int)
androidx.recyclerview.widget.LinearSnapHelper: int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View)
androidx.recyclerview.widget.ViewInfoStore: void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.ItemTouchHelper$4: androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation val$anim
androidx.recyclerview.widget.RecyclerView: void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration)
androidx.recyclerview.widget.AdapterHelper$Callback: void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
androidx.recyclerview.widget.SnapHelper$1: void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int)
androidx.recyclerview.widget.SimpleItemAnimator: void onRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.DiffUtil$Range: DiffUtil$Range(int,int,int,int)
androidx.recyclerview.widget.MessageThreadUtil$1: void addTile(int,androidx.recyclerview.widget.TileList$Tile)
androidx.recyclerview.widget.RecyclerView$Recycler: void recycleView(android.view.View)
androidx.recyclerview.widget.ViewBoundsCheck: androidx.recyclerview.widget.ViewBoundsCheck$Callback mCallback
androidx.recyclerview.R$attr: int spanCount
androidx.recyclerview.widget.RecyclerView$LayoutManager: void addView(android.view.View)
com.atakmap.android.harrissaspr.plugin.R$drawable: int sof_ranger
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void prependToSpan(android.view.View)
androidx.recyclerview.widget.RecyclerView: boolean isComputingLayout()
androidx.recyclerview.widget.ItemTouchHelper: long mDragScrollStartTimeInMs
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart()
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: CdcAcmSerialDriver$CdcAcmSerialPort(com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver,android.hardware.usb.UsbDevice,int)
androidx.recyclerview.widget.ItemTouchHelper$1: void run()
androidx.recyclerview.widget.ItemTouchHelper: int mOverdrawChildPosition
androidx.recyclerview.widget.RecyclerView$6: void offsetPositionsForRemovingLaidOutOrNewView(int,int)
com.atakmap.android.harrissaspr.SprSerialService: android.os.IBinder onBind(android.content.Intent)
androidx.recyclerview.widget.ListUpdateCallback: void onChanged(int,int,java.lang.Object)
androidx.recyclerview.widget.MessageThreadUtil
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int getDuration()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedLeft(android.view.View)
androidx.recyclerview.widget.AdapterHelper: void recycleUpdateOpsAndClearList(java.util.List)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$10
com.atakmap.android.harrissaspr.plugin.R$drawable: int weapon_hmg
com.atakmap.android.harrissaspr.driver.UsbSerialPort: void purgeHwBuffers(boolean,boolean)
androidx.recyclerview.widget.AdapterHelper: androidx.recyclerview.widget.AdapterHelper$Callback mCallback
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties
androidx.recyclerview.widget.GapWorker: long mFrameIntervalNs
androidx.annotation.Size: long multiple()
androidx.recyclerview.widget.RecyclerView$State: boolean mRunPredictiveAnimations
androidx.recyclerview.widget.RecyclerView$SavedState$1: androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: HarrisSaSprDropDownReceiver(com.atakmap.android.maps.MapView,android.content.Context)
androidx.recyclerview.widget.RecyclerView$OnFlingListener: boolean onFling(int,int)
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: void setParameters(int,int,int,int)
androidx.recyclerview.widget.GridLayoutManager: int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.atakmap.android.harrissaspr.plugin.R$drawable: int weapon_howitzer
androidx.recyclerview.widget.DiffUtil: DiffUtil()
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$3: HarrisSaSprDropDownReceiver$3(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver,android.widget.EditText,android.widget.Switch,android.content.Context)
androidx.recyclerview.widget.AsyncListUtil$2: void refresh(int)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int ITEM_DIRECTION_TAIL
androidx.recyclerview.widget.RecyclerView$ViewHolder: int FLAG_APPEARED_IN_PRE_LAYOUT
androidx.recyclerview.widget.AsyncListUtil$DataCallback: AsyncListUtil$DataCallback()
androidx.recyclerview.widget.RecyclerView: void repositionShadowingViews()
com.atakmap.android.harrissaspr.plugin.R$styleable: int RecyclerView_stackFromEnd
com.atakmap.android.harrissaspr.plugin.R$drawable: int sensor
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_armor_wheeled
androidx.recyclerview.widget.RecyclerView$ViewFlinger: RecyclerView$ViewFlinger(androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.ViewInfoStore: void clear()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: void setFullSpan(boolean)
androidx.recyclerview.widget.RecyclerView: int getChildLayoutPosition(android.view.View)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$2: void onCheckedChanged(android.widget.CompoundButton,boolean)
androidx.recyclerview.R: R()
androidx.recyclerview.widget.RecyclerView$ViewFlinger: void postOnAnimation()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: int invalidateAfter(int)
androidx.recyclerview.widget.TileList: int size()
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem: androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,java.lang.Object)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean mStarted
androidx.recyclerview.widget.RecyclerView: boolean isLayoutFrozen()
androidx.recyclerview.widget.ItemTouchHelper: void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
com.atakmap.android.harrissaspr.plugin.R$xml: R$xml()
androidx.recyclerview.widget.LinearLayoutManager: int findFirstCompletelyVisibleItemPosition()
androidx.recyclerview.widget.FastScroller: boolean isPointInsideHorizontalThumb(float,float)
androidx.recyclerview.widget.RecyclerView: void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findFirstReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.FastScroller: int ANIMATION_STATE_OUT
androidx.recyclerview.widget.RecyclerView$LayoutManager$1: int getParentEnd()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.annotation.RequiresApi
androidx.recyclerview.widget.DividerItemDecoration: void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.ViewInfoStore: void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.SortedList: java.lang.Object get(int)
androidx.recyclerview.R$styleable: int RecyclerView_spanCount
androidx.recyclerview.widget.MessageThreadUtil$2: java.util.concurrent.atomic.AtomicBoolean mBackgroundRunning
androidx.recyclerview.widget.ItemTouchHelper$2: ItemTouchHelper$2(androidx.recyclerview.widget.ItemTouchHelper)
com.atakmap.android.harrissaspr.HhmpUdpService: java.net.DatagramPacket access$300(com.atakmap.android.harrissaspr.HhmpUdpService)
com.atakmap.android.harrissaspr.HhmpUdpService: java.net.DatagramPacket DpReceive
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanGroupIndex(int,int)
androidx.recyclerview.widget.AsyncListUtil$2: int mFirstRequiredTileStart
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: int[] mSpanLookup
androidx.recyclerview.widget.RecyclerView: void stopScrollersInternal()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void postOnAnimation(java.lang.Runnable)
androidx.recyclerview.widget.LinearSmoothScroller: int SNAP_TO_ANY
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$9
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem: androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,int)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: java.lang.Boolean access$000(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver)
androidx.recyclerview.widget.RecyclerView$State: java.lang.Object get(int)
androidx.recyclerview.widget.DiffUtil$DiffResult: int[] mOldItemStatuses
androidx.recyclerview.widget.ThreadUtil$BackgroundCallback: void recycleTile(androidx.recyclerview.widget.TileList$Tile)
androidx.recyclerview.widget.RecyclerView: void initAutofill()
androidx.recyclerview.widget.ViewBoundsCheck$Callback: int getParentEnd()
androidx.recyclerview.widget.RecyclerView: java.lang.String getFullClassName(android.content.Context,java.lang.String)
androidx.recyclerview.widget.FastScroller: int DRAG_Y
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)
androidx.recyclerview.widget.ItemTouchHelper: int UP
androidx.recyclerview.widget.DefaultItemAnimator: java.util.ArrayList mAdditionsList
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation: boolean mIsPendingCleanup
androidx.annotation.AttrRes
com.atakmap.android.harrissaspr.HarrisSaSprMapComponent: void onCreate(android.content.Context,android.content.Intent,com.atakmap.android.maps.MapView)
androidx.recyclerview.widget.AdapterListUpdateCallback: void onChanged(int,int,java.lang.Object)
androidx.recyclerview.widget.PagerSnapHelper: int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int)
androidx.recyclerview.widget.RecyclerView$2: void run()
androidx.recyclerview.widget.AsyncListDiffer$ListListener: void onCurrentListChanged(java.util.List,java.util.List)
androidx.recyclerview.widget.ItemTouchUIUtilImpl: void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onRestoreInstanceState(android.os.Parcelable)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$7: android.widget.TableLayout val$tblLayoutSPR
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: StaggeredGridLayoutManager$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation: void update()
androidx.recyclerview.widget.TileList: androidx.recyclerview.widget.TileList$Tile addOrReplace(androidx.recyclerview.widget.TileList$Tile)
androidx.recyclerview.widget.ItemTouchHelper$3: ItemTouchHelper$3(androidx.recyclerview.widget.ItemTouchHelper,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,float,float,float,float,int,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.AdapterHelper: androidx.recyclerview.widget.AdapterHelper addUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp[])
androidx.recyclerview.widget.RecyclerView: int INVALID_POINTER
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope LIBRARY
androidx.recyclerview.widget.RecyclerView: android.os.Parcelable onSaveInstanceState()
androidx.recyclerview.widget.RecyclerView$5: RecyclerView$5(androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.RecyclerView$ViewHolder: int FLAG_ADAPTER_FULLUPDATE
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
androidx.recyclerview.widget.ViewBoundsCheck$ViewBounds
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: ViewBoundsCheck$BoundFlags()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams)
androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPendingAccessibilityState
androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$RecycledViewPool mRecyclerPool
androidx.annotation.AnyRes
androidx.recyclerview.widget.AsyncListUtil$1: AsyncListUtil$1(androidx.recyclerview.widget.AsyncListUtil)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long)
androidx.recyclerview.widget.ChildHelper$Callback: android.view.View getChildAt(int)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: long mMoveDuration
androidx.recyclerview.widget.RecyclerView$ViewHolder: void clearTmpDetachFlag()
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: java.util.List mScrapList
androidx.recyclerview.widget.FastScroller: int mMargin
androidx.recyclerview.widget.LinearLayoutManager: int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.atakmap.android.harrissaspr.plugin.R$drawable: int fixed_csar
com.atakmap.android.harrissaspr.plugin.R$drawable: int sea_non_mil
com.atakmap.android.harrissaspr.plugin.PluginTemplateTool: android.content.Context context
androidx.recyclerview.widget.AsyncListUtil: void refresh()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void detachViewAt(int)
androidx.recyclerview.widget.MessageThreadUtil$MessageQueue: void removeMessages(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int mIndex
androidx.recyclerview.widget.RecyclerView: long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.atakmap.android.harrissaspr.plugin.R$drawable: int sea_cruiser
androidx.recyclerview.widget.AdapterHelper$UpdateOp: boolean equals(java.lang.Object)
androidx.recyclerview.widget.AsyncListUtil: int[] mTmpRangeExtended
androidx.recyclerview.widget.SimpleItemAnimator: void onRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.ItemTouchHelper$Callback$1
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope LIBRARY_GROUP_PREFIX
com.atakmap.android.harrissaspr.plugin.R$id: int tbSPR
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void onChanged()
com.atakmap.android.harrissaspr.driver.SerialTimeoutException: SerialTimeoutException(java.lang.String)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void layoutDecorated(android.view.View,int,int,int,int)
androidx.recyclerview.widget.ItemTouchHelper: int ACTION_STATE_SWIPE
com.atakmap.android.harrissaspr.plugin.R$drawable: int cs_sig_tel_switch
androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView
androidx.recyclerview.widget.RecyclerView: void stopNestedScroll()
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: void init(android.content.Context)
androidx.recyclerview.widget.ChildHelper$Bucket: void clear(int)
com.atakmap.android.harrissaspr.LocateMarker: LocateMarker()
androidx.recyclerview.widget.RecyclerView$ItemAnimator: long mAddDuration
androidx.recyclerview.widget.RecyclerView$Recycler: void markItemDecorInsetsDirty()
androidx.recyclerview.widget.LinearLayoutManager$SavedState: void invalidateAnchor()
androidx.recyclerview.widget.GridLayoutManager: void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.recyclerview.widget.DefaultItemAnimator: java.util.ArrayList mPendingChanges
androidx.recyclerview.widget.StaggeredGridLayoutManager: void offsetChildrenVertical(int)
androidx.annotation.InspectableProperty: androidx.annotation.InspectableProperty$EnumEntry[] enumMapping()
androidx.recyclerview.widget.LinearSmoothScroller: int mInterimTargetDx
androidx.recyclerview.widget.ViewBoundsCheck: int FLAG_CVE_GT_PVE
com.atakmap.android.harrissaspr.plugin.R$drawable: int sea_battleship
androidx.annotation.FractionRes
androidx.recyclerview.widget.RecyclerView$ItemAnimator: long mRemoveDuration
androidx.recyclerview.widget.AdapterListUpdateCallback
androidx.recyclerview.widget.RecyclerView: void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
com.atakmap.android.harrissaspr.plugin.R$drawable: int vehicle_armor_infanrty
androidx.recyclerview.widget.GapWorker: long mPostTimeNs
androidx.recyclerview.widget.LinearLayoutManager: int[] mReusableIntPair
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$4: android.widget.Switch val$sprSwitch
androidx.recyclerview.widget.FastScroller: android.graphics.drawable.StateListDrawable mHorizontalThumbDrawable
androidx.recyclerview.widget.RecyclerView$State: int mItemCount
androidx.recyclerview.widget.LinearLayoutManager: int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.RecyclerView: long FOREVER_NS
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.atakmap.android.harrissaspr.plugin.R$attr: int spanCount
com.atakmap.android.harrissaspr.plugin.R$drawable: int rotor_uav
androidx.recyclerview.widget.RecyclerView: boolean mPostedAnimatorRunner
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup
androidx.recyclerview.widget.AsyncListUtil$ViewCallback: void getItemRangeInto(int[])
androidx.recyclerview.widget.ListAdapter: androidx.recyclerview.widget.AsyncListDiffer mDiffer
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mJumpToPosition
androidx.annotation.InspectableProperty: java.lang.String name()
com.atakmap.android.harrissaspr.plugin.R$array: int gnd_vech_list
com.atakmap.android.harrissaspr.driver.UsbId: int VENDOR_L3Harris
androidx.recyclerview.widget.DiffUtil$Callback
androidx.recyclerview.widget.RecyclerView$2: androidx.recyclerview.widget.RecyclerView this$0
androidx.recyclerview.widget.GridLayoutManager: int getSpaceForSpanRange(int,int)
com.atakmap.android.harrissaspr.plugin.R$styleable: int RecyclerView_reverseLayout
androidx.recyclerview.widget.ItemTouchHelper: void startGestureDetection()
androidx.recyclerview.widget.GridLayoutManager: void measureChild(android.view.View,int,boolean)
androidx.recyclerview.widget.RecyclerView$ViewFlinger: int mLastFlingX
androidx.recyclerview.widget.ViewBoundsCheck
androidx.recyclerview.widget.ItemTouchHelper: androidx.core.view.GestureDetectorCompat mGestureDetector
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: byte[] mWriteBuffer
androidx.recyclerview.widget.GapWorker$1: GapWorker$1()
androidx.recyclerview.widget.ThreadUtil$BackgroundCallback: void updateRange(int,int,int,int,int)
com.atakmap.android.harrissaspr.plugin.R$array
com.atakmap.android.harrissaspr.plugin.R$drawable: int cs_sig_radio
androidx.recyclerview.widget.GapWorker$Task: androidx.recyclerview.widget.RecyclerView view
com.atakmap.android.harrissaspr.plugin.R$drawable: int weapon_air_defense
androidx.recyclerview.widget.AsyncListDiffer$1$2: androidx.recyclerview.widget.DiffUtil$DiffResult val$result
androidx.recyclerview.widget.ViewBoundsCheck: int MASK
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getLayoutDirection()
androidx.recyclerview.widget.LayoutState: LayoutState()
androidx.recyclerview.widget.ChildHelper: void addView(android.view.View,int,boolean)
androidx.recyclerview.widget.RecyclerView$Recycler: void offsetPositionRecordsForRemove(int,int,boolean)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int chooseSize(int,int,int)
androidx.recyclerview.widget.ItemTouchHelper$Callback: float getSwipeThreshold(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$4: HarrisSaSprDropDownReceiver$4(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver,com.atakmap.android.harrissaspr.driver.UsbSerialProber,android.hardware.usb.UsbManager,android.widget.Switch,android.content.Context,android.widget.Switch,android.content.Intent)
androidx.recyclerview.widget.ListAdapter: void submitList(java.util.List)
com.atakmap.android.harrissaspr.driver.UsbSerialPort: android.hardware.usb.UsbDevice getDevice()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getBaseline()
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void onItemRangeMoved(int,int,int)
androidx.recyclerview.widget.RecyclerView$RecyclerListener
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: java.lang.String TAG
androidx.recyclerview.widget.LayoutState: int mEndLine
androidx.recyclerview.widget.ItemTouchHelper$Callback: void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState
androidx.recyclerview.widget.LinearLayoutManager: void recycleChildren(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback: int mDefaultSwipeDirs
androidx.annotation.ContentView
androidx.annotation.IntDef: int[] value()
androidx.recyclerview.widget.PagerSnapHelper: androidx.recyclerview.widget.OrientationHelper mVerticalHelper
com.atakmap.android.harrissaspr.SprSerialService: com.atakmap.android.harrissaspr.driver.ProbeTable access$000(com.atakmap.android.harrissaspr.SprSerialService)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$9: android.widget.Spinner val$spnUnit
androidx.recyclerview.widget.LinearLayoutManager$SavedState: boolean mAnchorLayoutFromEnd
com.atakmap.android.harrissaspr.plugin.R$drawable: int fixed
androidx.recyclerview.widget.ListUpdateCallback
androidx.recyclerview.widget.ItemTouchUIUtilImpl: void clearView(android.view.View)
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
com.atakmap.android.harrissaspr.plugin.R$drawable: int comabat_fixed_wing
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
com.atakmap.android.harrissaspr.plugin.R$drawable: int sea_mine_warfare
androidx.recyclerview.widget.ViewBoundsCheck: int CVS_PVE_POS
androidx.recyclerview.widget.RecyclerView$Adapter
androidx.recyclerview.widget.GridLayoutManager: void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int)
androidx.recyclerview.widget.DefaultItemAnimator: void cancelAll(java.util.List)
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl: void collectPrefetchPositionsFromView(androidx.recyclerview.widget.RecyclerView,boolean)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean shouldMeasureTwice()
androidx.recyclerview.widget.RecyclerView: void invalidateGlows()
com.atakmap.android.harrissaspr.converters.SprSAparser: SprSAparser()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void recycle(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState)
androidx.recyclerview.widget.OrientationHelper$2: void offsetChild(android.view.View,int)
com.atakmap.android.harrissaspr.converters.SprSAparser: java.lang.Double Longtitude()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_PREFETCH_TAG
androidx.recyclerview.widget.RecyclerView: int getDeepestFocusedViewWithId(android.view.View)
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_NESTED_PREFETCH_TAG
androidx.recyclerview.widget.LinearLayoutManager: boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
androidx.recyclerview.widget.LinearLayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo: int toY
androidx.recyclerview.widget.LinearLayoutManager: void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: SerialInputOutputManager(com.atakmap.android.harrissaspr.driver.UsbSerialPort)
androidx.recyclerview.widget.SortedList: void addToData(int,java.lang.Object)
androidx.recyclerview.widget.GridLayoutManager: int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.RecyclerView: void markItemDecorInsetsDirty()
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.os.Parcelable onSaveInstanceState()
com.atakmap.android.harrissaspr.SprSerialService: boolean stopped
com.atakmap.android.harrissaspr.plugin.R$attr: int stackFromEnd
androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mCachedViews
androidx.recyclerview.widget.ItemTouchHelper: androidx.recyclerview.widget.RecyclerView$ViewHolder findSwipedView(android.view.MotionEvent)
androidx.recyclerview.widget.DiffUtil$DiffResult: void dispatchAdditions(java.util.List,androidx.recyclerview.widget.ListUpdateCallback,int,int,int)
androidx.recyclerview.widget.RecyclerView$Recycler: int convertPreLayoutPositionToPostLayout(int)
androidx.recyclerview.widget.ItemTouchHelper$Callback: int ABS_HORIZONTAL_DIR_FLAGS
androidx.recyclerview.widget.OpReorderer: void swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.recyclerview.widget.LinearSmoothScroller: android.view.animation.DecelerateInterpolator mDecelerateInterpolator
androidx.recyclerview.widget.RecyclerView$LayoutManager: void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)
androidx.recyclerview.widget.SimpleItemAnimator: void onMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void addChangePayload(java.lang.Object)
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: boolean reverseLayout
androidx.recyclerview.widget.LinearSmoothScroller: void onStop()
androidx.recyclerview.widget.FastScroller: int DRAG_NONE
androidx.recyclerview.widget.RecyclerView$Recycler: void scrapView(android.view.View)
androidx.recyclerview.widget.TileList: void clear()
com.atakmap.android.harrissaspr.plugin.R$dimen
androidx.recyclerview.widget.ItemTouchHelper$Callback: float getSwipeVelocityThreshold(float)
androidx.recyclerview.widget.LinearLayoutManager$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.recyclerview.widget.RecyclerView: void onEnterLayoutOrScroll()
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: void writeAsync(byte[])
androidx.recyclerview.widget.ItemTouchHelper$1: androidx.recyclerview.widget.ItemTouchHelper this$0
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory
androidx.recyclerview.widget.AsyncDifferConfig: java.util.concurrent.Executor mMainThreadExecutor
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_BIND_VIEW_TAG
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: int DIRECTION_LEFT
androidx.recyclerview.widget.RecyclerView$SavedState: RecyclerView$SavedState(android.os.Parcel,java.lang.ClassLoader)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: int mPosition
com.atakmap.android.harrissaspr.plugin.R$dimen: int fastscroll_margin
androidx.recyclerview.widget.LinearLayoutManager: void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
androidx.recyclerview.widget.DiffUtil$1
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: java.util.EnumSet getControlLines()
androidx.annotation.VisibleForTesting: int PACKAGE_PRIVATE
androidx.recyclerview.widget.FastScroller: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)
androidx.recyclerview.widget.DefaultItemAnimator$8
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: int MIN_SIZE
androidx.recyclerview.widget.DiffUtil$Range
androidx.recyclerview.widget.ItemTouchHelper: int RIGHT
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener: RecyclerView$ItemAnimatorRestoreListener(androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.ItemTouchHelper$4
androidx.recyclerview.widget.RecyclerView$6: void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
androidx.recyclerview.widget.MessageThreadUtil$1
androidx.recyclerview.widget.AsyncListDiffer: void submitList(java.util.List,java.lang.Runnable)
androidx.recyclerview.widget.RecyclerView: int[] mMinMaxLayoutPositions
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemRemoved(int)
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: void openSingleInterface()
androidx.recyclerview.widget.MessageThreadUtil$1: androidx.recyclerview.widget.ThreadUtil$MainThreadCallback val$callback
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getMinimumWidth()
androidx.recyclerview.widget.ItemTouchHelper: int PIXELS_PER_SECOND
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemInserted(int)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: int FLAG_MOVED
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1: ItemTouchHelper$RecoverAnimation$1(androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findReferenceChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.RecyclerView: void assertInLayoutOrScroll(java.lang.String)
androidx.recyclerview.widget.MessageThreadUtil$2: int REFRESH
com.atakmap.android.harrissaspr.plugin.R$drawable: int fixed_patrol
androidx.recyclerview.R$attr
com.atakmap.android.harrissaspr.plugin.R$drawable: int ic_launcher
com.atakmap.android.harrissaspr.plugin.R$drawable: int sea_tanker
androidx.recyclerview.widget.SortedList: void replaceAllInsert(java.lang.Object)
com.atakmap.android.harrissaspr.plugin.R$drawable: int sea_carrier
androidx.recyclerview.widget.PagerSnapHelper: android.view.View findCenterView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper)
androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollExtent()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int mHeight
androidx.recyclerview.widget.AdapterHelper$Callback: void offsetPositionsForAdd(int,int)
com.atakmap.android.harrissaspr.HhmpUdpService: void onCreate()
androidx.recyclerview.widget.DefaultItemAnimator: java.util.ArrayList mAddAnimations
androidx.recyclerview.widget.RecyclerView$4: void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.recyclerview.widget.ThreadUtil$MainThreadCallback
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: int mAnchorPosition
androidx.recyclerview.widget.ItemTouchHelper: androidx.recyclerview.widget.RecyclerView$ViewHolder mSelected
androidx.recyclerview.widget.BatchingListUpdateCallback: void onRemoved(int,int)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
androidx.recyclerview.widget.SortedList: int linearEqualitySearch(java.lang.Object,int,int,int)
androidx.recyclerview.widget.ItemTouchHelper: android.view.View findChildView(android.view.MotionEvent)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getChildMeasureSpec(int,int,int,boolean)
androidx.recyclerview.widget.RecyclerView$OnFlingListener
com.atakmap.android.harrissaspr.plugin.R$id: int btnAdd
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_artillery_fixed
androidx.recyclerview.widget.AdapterHelper: java.util.ArrayList mPendingUpdates
androidx.recyclerview.widget.RecyclerView$Recycler: void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: java.lang.String access$1000(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver)
androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollRange()
androidx.recyclerview.widget.RecyclerView$LayoutParams
androidx.recyclerview.widget.DiffUtil$DiffResult: int FLAG_MASK
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: com.atakmap.android.harrissaspr.util.SerialInputOutputManager$Listener getListener()
androidx.recyclerview.widget.SimpleItemAnimator: boolean getSupportsChangeAnimations()
androidx.recyclerview.widget.FastScroller: float mHorizontalDragX
androidx.recyclerview.widget.AdapterHelper: void preProcess()
androidx.recyclerview.widget.ItemTouchHelper$ViewDropHandler
com.atakmap.android.harrissaspr.driver.UsbId: int RF7800V
androidx.recyclerview.widget.RecyclerView$ItemAnimator: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo()
com.atakmap.android.harrissaspr.converters.SprSAparser: java.lang.String RoleID
androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry: void addPosition(int,int)
androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int)
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int bottom
androidx.recyclerview.widget.FastScroller$1: FastScroller$1(androidx.recyclerview.widget.FastScroller)
androidx.recyclerview.widget.RecyclerView$LayoutManager$2: androidx.recyclerview.widget.RecyclerView$LayoutManager this$0
androidx.recyclerview.widget.AsyncDifferConfig$Builder: java.util.concurrent.Executor mBackgroundThreadExecutor
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedMeasuredHeight(android.view.View)
androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation: float mStartDy
androidx.recyclerview.widget.AdapterHelper$UpdateOp: int positionStart
androidx.recyclerview.widget.ItemTouchHelper: void updateDxDy(android.view.MotionEvent,int,int)
androidx.recyclerview.widget.RecyclerView$ViewFlinger: android.widget.OverScroller mOverScroller
androidx.recyclerview.widget.ItemTouchHelper$Callback: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.OrientationHelper: int getDecoratedMeasurementInOther(android.view.View)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean)
androidx.recyclerview.widget.ViewBoundsCheck: int CVS_PVS_POS
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: LinearLayoutManager$LayoutState()
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: java.nio.ByteBuffer mWriteBuffer
androidx.recyclerview.widget.LinearLayoutManager: void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
com.atakmap.android.harrissaspr.plugin.R$drawable: int rotor_utility
androidx.recyclerview.widget.RecyclerView: void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.recyclerview.widget.MessageThreadUtil$1$1: void run()
androidx.recyclerview.widget.RecyclerView: void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable)
androidx.recyclerview.widget.OpReorderer: void swapMoveOp(java.util.List,int,int)
androidx.recyclerview.widget.ViewBoundsCheck$Callback: android.view.View getChildAt(int)
androidx.recyclerview.widget.RecyclerView: boolean isAnimating()
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.RecyclerView: long getChildItemId(android.view.View)
com.atakmap.android.harrissaspr.plugin.R$color: R$color()
com.atakmap.android.harrissaspr.plugin.R$drawable: int subsurf_submarine_nuc
com.atakmap.android.harrissaspr.plugin.R$drawable: int dot_selector
androidx.recyclerview.widget.LinearLayoutManager$SavedState: LinearLayoutManager$SavedState(androidx.recyclerview.widget.LinearLayoutManager$SavedState)
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow
androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ChildHelper mChildHelper
androidx.recyclerview.widget.RecyclerView: boolean mItemsChanged
androidx.recyclerview.widget.SortedList: int size()
androidx.recyclerview.widget.TileList$Tile: TileList$Tile(java.lang.Class,int)
androidx.recyclerview.widget.DefaultItemAnimator$8: androidx.recyclerview.widget.DefaultItemAnimator this$0
com.atakmap.android.harrissaspr.driver.UsbSerialPort$ControlLine
androidx.recyclerview.widget.ItemTouchHelper$Callback: boolean canDropOver(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.ViewBoundsCheck: androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags mBoundFlags
androidx.recyclerview.widget.RecyclerView$LayoutManager: void detachAndScrapView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: android.content.Context pluginContext
androidx.recyclerview.widget.MessageThreadUtil$2: androidx.recyclerview.widget.MessageThreadUtil this$0
androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
com.atakmap.android.harrissaspr.driver.UsbSerialPort$ControlLine: com.atakmap.android.harrissaspr.driver.UsbSerialPort$ControlLine valueOf(java.lang.String)
androidx.recyclerview.widget.PagerSnapHelper$1: PagerSnapHelper$1(androidx.recyclerview.widget.PagerSnapHelper,android.content.Context)
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
androidx.recyclerview.widget.ViewInfoStore
androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mItemDirection
androidx.recyclerview.widget.RecyclerView: void scrollTo(int,int)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
androidx.recyclerview.widget.ViewInfoStore: void addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: SerialInputOutputManager(com.atakmap.android.harrissaspr.driver.UsbSerialPort,com.atakmap.android.harrissaspr.util.SerialInputOutputManager$Listener)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int mPendingScrollPosition
com.atakmap.android.harrissaspr.plugin.R$drawable: int css_transport
androidx.recyclerview.widget.SortedList$Callback: boolean areContentsTheSame(java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewFlinger mViewFlinger
androidx.recyclerview.widget.ItemTouchHelper$Callback: int convertToRelativeDirection(int,int)
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
com.atakmap.android.harrissaspr.plugin.R$drawable: int vehicle_utility
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemDecoration getItemDecorationAt(int)
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl: int mPrefetchDy
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem: void recycle()
androidx.recyclerview.widget.OrientationHelper: OrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.recyclerview.widget.SortedList: int CAPACITY_GROWTH
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo: java.lang.String toString()
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View findViewByPosition(int)
androidx.recyclerview.widget.AsyncListUtil$2: void flushTileCache(int)
com.atakmap.android.harrissaspr.plugin.R$drawable: int sof_psyops
androidx.recyclerview.widget.ItemTouchHelper
androidx.recyclerview.widget.RecyclerView$ItemAnimator: long getChangeDuration()
androidx.recyclerview.widget.DividerItemDecoration: int VERTICAL
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: boolean isOpen()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
androidx.recyclerview.widget.AsyncListDiffer$1$2
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean mIsPreLayout
androidx.recyclerview.widget.LayoutState: boolean hasMore(androidx.recyclerview.widget.RecyclerView$State)
com.atakmap.android.harrissaspr.HhmpUdpService: boolean stop
androidx.recyclerview.widget.AsyncListDiffer$1$1: java.lang.Object getChangePayload(int,int)
androidx.recyclerview.widget.AsyncListUtil$ViewCallback: AsyncListUtil$ViewCallback()
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: void setBounds(int,int,int,int)
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
com.atakmap.android.harrissaspr.util.SerialInputOutputManager$Listener: void onNewData(byte[])
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void jumpTo(int)
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory$EdgeDirection
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$9: java.lang.String[] val$harris_fields
androidx.recyclerview.widget.RecyclerView$Recycler: void viewRangeUpdate(int,int)
androidx.recyclerview.widget.MessageThreadUtil$2: void sendMessageAtFrontOfQueue(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem)
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.atakmap.android.harrissaspr.plugin.R$drawable: int fixed_vstol
androidx.recyclerview.widget.MessageThreadUtil$1: int UPDATE_ITEM_COUNT
androidx.annotation.LayoutRes
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void reset()
androidx.recyclerview.widget.RecyclerView: void onAttachedToWindow()
androidx.recyclerview.widget.AsyncListUtil$2: int mItemCount
androidx.recyclerview.widget.TileList$Tile: int mStartPosition
com.atakmap.android.harrissaspr.IconsAdapter: int[] icons
androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()
com.atakmap.android.harrissaspr.SprSerialService: SprSerialService()
com.atakmap.android.harrissaspr.plugin.R$string: int SAVE_BTN
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo
androidx.recyclerview.widget.StaggeredGridLayoutManager: void prepareLayoutStateForDelta(int,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void stopIgnoring()
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span
androidx.recyclerview.widget.ChildHelper: android.view.View getChildAt(int)
androidx.recyclerview.widget.ItemTouchUIUtilImpl: androidx.recyclerview.widget.ItemTouchUIUtil INSTANCE
androidx.recyclerview.widget.ItemTouchHelper$Callback: int makeFlag(int,int)
androidx.recyclerview.widget.ChildHelper$Callback: void detachViewFromParent(int)
androidx.recyclerview.widget.LinearSmoothScroller: float TARGET_SEEK_EXTRA_SCROLL_RATIO
androidx.recyclerview.widget.AsyncDifferConfig$Builder: java.lang.Object sExecutorLock
androidx.recyclerview.widget.StaggeredGridLayoutManager: int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void detachView(android.view.View)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.annotation.StyleRes
androidx.recyclerview.widget.RecyclerView$5: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int LAYOUT_START
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void setChangeDuration(long)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void resetInternal()
androidx.recyclerview.widget.GridLayoutManager: android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState)
androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutStateToFillEnd(int,int)
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void assignFromView(android.view.View,int)
com.atakmap.android.harrissaspr.plugin.R$string: int marker_promt
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: androidx.core.view.AccessibilityDelegateCompat getAndRemoveOriginalDelegateForItem(android.view.View)
com.atakmap.android.harrissaspr.HhmpUdpService: byte[] rcv_buf
androidx.recyclerview.widget.MessageThreadUtil$1: androidx.recyclerview.widget.MessageThreadUtil this$0
androidx.recyclerview.widget.SortedList$BatchedCallback: androidx.recyclerview.widget.SortedList$Callback mWrappedCallback
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: int SET_CONTROL_LINE_STATE
androidx.recyclerview.widget.RecyclerView: void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener)
androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mChangedScrap
androidx.annotation.ColorLong
androidx.recyclerview.widget.FastScroller: float mVerticalDragY
androidx.recyclerview.widget.RecyclerView$LayoutManager: void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.AsyncDifferConfig: androidx.recyclerview.widget.DiffUtil$ItemCallback mDiffCallback
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.LinearSmoothScroller: int calculateDtToFit(int,int,int,int,int)
androidx.recyclerview.widget.OrientationHelper: int mLastTotalSpace
androidx.recyclerview.widget.SortedList: void recalculatePositionOfItemAt(int)
androidx.recyclerview.widget.GridLayoutManager: void setSpanSizeLookup(androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup)
com.atakmap.android.harrissaspr.HhmpUdpService$1: HhmpUdpService$1(com.atakmap.android.harrissaspr.HhmpUdpService)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: java.lang.Boolean access$302(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver,java.lang.Boolean)
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)
androidx.recyclerview.widget.AdapterListUpdateCallback: void onMoved(int,int)
androidx.recyclerview.widget.LinearSmoothScroller: boolean mHasCalculatedMillisPerPixel
androidx.recyclerview.widget.ViewBoundsCheck: int FLAG_CVE_LT_PVS
com.atakmap.android.harrissaspr.plugin.R$drawable: int sea_hospital
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: void onItemRangeInserted(int,int)
com.atakmap.android.harrissaspr.plugin.R$dimen: R$dimen()
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void setDy(int)
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_armor_wheeled_amphibious
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int)
androidx.recyclerview.widget.FastScroller: int mVerticalThumbHeight
androidx.recyclerview.widget.ListAdapter: int getItemCount()
com.atakmap.android.harrissaspr.driver.UsbSerialPort: int DATABITS_7
androidx.recyclerview.widget.GridLayoutManager: java.lang.String TAG
androidx.recyclerview.widget.AdapterListUpdateCallback: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter
androidx.recyclerview.widget.GridLayoutManager: void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.recyclerview.widget.OrientationHelper: int getTotalSpaceChange()
androidx.recyclerview.widget.DefaultItemAnimator$7: android.view.View val$view
androidx.recyclerview.widget.ThreadUtil
androidx.recyclerview.widget.ItemTouchHelper: int DIRECTION_FLAG_COUNT
com.atakmap.android.harrissaspr.plugin.PluginTemplateTool: transapps.maps.plugin.tool.Tool getTool()
androidx.recyclerview.widget.SortedListAdapterCallback: void onMoved(int,int)
androidx.recyclerview.widget.LinearLayoutManager: boolean mRecycleChildrenOnDetach
androidx.recyclerview.widget.OrientationHelper$1: int getTransformedEndWithDecoration(android.view.View)
androidx.recyclerview.widget.DiffUtil$Snake
com.atakmap.android.harrissaspr.HhmpUdpService: java.net.DatagramPacket access$302(com.atakmap.android.harrissaspr.HhmpUdpService,java.net.DatagramPacket)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: void setDTR(boolean)
androidx.recyclerview.widget.GridLayoutManager: int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int)
androidx.recyclerview.widget.AsyncListUtil$DataCallback: void fillData(java.lang.Object[],int,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeView(android.view.View)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: int getGapForSpan(int)
com.atakmap.android.harrissaspr.util.SerialInputOutputManager$State: com.atakmap.android.harrissaspr.util.SerialInputOutputManager$State STOPPED
androidx.recyclerview.widget.ViewInfoStore: void addToPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
androidx.annotation.LongDef: long[] value()
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: boolean mValid
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedBottom(android.view.View)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mRequestedSimpleAnimations
androidx.recyclerview.widget.RecyclerView: void dispatchSaveInstanceState(android.util.SparseArray)
androidx.recyclerview.widget.ItemTouchHelper: int checkVerticalSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void repositionToWrapContentIfNecessary()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: androidx.recyclerview.widget.StaggeredGridLayoutManager$Span mSpan
com.atakmap.android.harrissaspr.plugin.R$string: int SPR_radio_not_found
androidx.recyclerview.widget.DiffUtil$DiffResult: int NO_POSITION
androidx.recyclerview.widget.PagerSnapHelper: int MAX_SCROLL_ON_FLING_DURATION
androidx.recyclerview.widget.RecyclerView: int DEFAULT_ORIENTATION
androidx.recyclerview.widget.DefaultItemAnimator: java.util.ArrayList mPendingAdditions
androidx.recyclerview.widget.SortedList: void merge(java.lang.Object[],int)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$5
com.atakmap.android.harrissaspr.driver.UsbSerialPort$ControlLine: UsbSerialPort$ControlLine(java.lang.String,int)
com.atakmap.android.harrissaspr.SprSerialService: com.atakmap.android.harrissaspr.driver.ProbeTable customTable
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: java.lang.Boolean access$102(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver,java.lang.Boolean)
androidx.recyclerview.widget.ItemTouchHelper: float mDx
com.atakmap.android.harrissaspr.plugin.R$string: int RadioIDempty
androidx.recyclerview.widget.FastScroller: boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)
androidx.recyclerview.widget.AsyncListUtil$2: int getTileStart(int)
androidx.annotation.ArrayRes
androidx.recyclerview.widget.AsyncListDiffer$1: java.util.List val$oldList
androidx.recyclerview.widget.RecyclerView$SavedState
androidx.recyclerview.widget.RecyclerView$Adapter: void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.RecyclerView$5: android.view.View getChildAt(int)
androidx.recyclerview.widget.OrientationHelper: void offsetChild(android.view.View,int)
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation: float mY
androidx.recyclerview.widget.TileList: android.util.SparseArray mTiles
androidx.recyclerview.widget.RecyclerView$ViewHolder: int FLAG_IGNORE
androidx.recyclerview.widget.StaggeredGridLayoutManager$1: StaggeredGridLayoutManager$1(androidx.recyclerview.widget.StaggeredGridLayoutManager)
androidx.recyclerview.widget.RecyclerView: void dispatchLayout()
androidx.recyclerview.widget.LinearLayoutManager: int HORIZONTAL
androidx.recyclerview.widget.SortedList: int mOldDataSize
androidx.recyclerview.widget.GapWorker: void flushTasksWithDeadline(long)
androidx.recyclerview.widget.MessageThreadUtil$2: void maybeExecuteBackgroundRunnable()
androidx.recyclerview.widget.FastScroller: boolean isPointInsideVerticalThumb(float,float)
androidx.annotation.Nullable
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getOrientation()
androidx.recyclerview.widget.GridLayoutManager: boolean isUsingSpansToEstimateScrollbarDimensions()
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: void resetInternal()
com.atakmap.android.harrissaspr.plugin.R$drawable: int fixed_transport
androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)
androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()
androidx.recyclerview.widget.ItemTouchHelper: int mActivePointerId
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,android.view.View,android.view.View)
androidx.annotation.VisibleForTesting: int PRIVATE
androidx.recyclerview.widget.RecyclerView$SmoothScroller: int getChildCount()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void stopSmoothScroller()
androidx.recyclerview.widget.FastScroller: boolean isLayoutRTL()
androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPositionOffset
androidx.recyclerview.widget.LayoutState: java.lang.String toString()
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mFinished
androidx.recyclerview.widget.RecyclerView$ViewHolder: int getAdapterPosition()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void offsetChildrenVertical(int)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: androidx.core.view.AccessibilityDelegateCompat getItemDelegate()
androidx.recyclerview.widget.MessageThreadUtil: MessageThreadUtil()
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
androidx.recyclerview.widget.ItemTouchHelper$4: androidx.recyclerview.widget.ItemTouchHelper this$0
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void attach()
androidx.recyclerview.widget.SortedListAdapterCallback: void onChanged(int,int,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: void clearOnChildAttachStateChangeListeners()
androidx.recyclerview.widget.ChildHelper: boolean isHidden(android.view.View)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect)
androidx.recyclerview.widget.SortedList: void updateItemAt(int,java.lang.Object)
androidx.recyclerview.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)
androidx.recyclerview.widget.RecyclerView$4: void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
com.atakmap.android.harrissaspr.plugin.R$styleable: int RecyclerView_layoutManager
com.atakmap.android.harrissaspr.plugin.R$xml
androidx.recyclerview.widget.GridLayoutManager: boolean mPendingSpanCountChange
androidx.recyclerview.widget.DiffUtil$DiffResult: int convertNewPositionToOld(int)
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: java.util.EnumSet getControlLines()
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getLeftDecorationWidth(android.view.View)
androidx.recyclerview.widget.SnapHelper: androidx.recyclerview.widget.RecyclerView$SmoothScroller createScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.recyclerview.widget.OpReorderer
androidx.annotation.Dimension: int PX
androidx.recyclerview.widget.RecyclerView$State: RecyclerView$State()
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean needsUpdate()
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: void close()
androidx.recyclerview.widget.RecyclerView: int HORIZONTAL
com.atakmap.android.harrissaspr.plugin.R$styleable: int RecyclerView_fastScrollHorizontalTrackDrawable
androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayoutManager
androidx.recyclerview.widget.RecyclerView: boolean drawChild(android.graphics.Canvas,android.view.View,long)
androidx.recyclerview.widget.SortedList: int INVALID_POSITION
androidx.recyclerview.widget.LayoutState: boolean mStopInFocusable
androidx.annotation.Size: long value()
androidx.recyclerview.widget.ItemTouchHelper: void setupCallbacks()
androidx.recyclerview.widget.RecyclerView$State: boolean mRunSimpleAnimations
androidx.recyclerview.widget.ItemTouchHelper: void endRecoverAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
androidx.recyclerview.widget.LinearSmoothScroller: android.graphics.PointF mTargetVector
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean preferLastSpan(int)
androidx.annotation.IntDef: boolean flag()
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int findFirstVisibleItemPosition()
androidx.recyclerview.widget.ItemTouchHelper: float mSwipeEscapeVelocity
androidx.recyclerview.widget.DiffUtil$Snake: boolean reverse
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: int mPortNumber
com.atakmap.android.harrissaspr.plugin.R$drawable: int ic_menu_minus
androidx.annotation.IntRange
androidx.recyclerview.widget.AsyncListUtil$2: int mGeneration
com.atakmap.android.harrissaspr.plugin.R$array: int gnd_unt_ss_list
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: int spr_count
com.atakmap.android.harrissaspr.HhmpUdpService: byte[] access$200(com.atakmap.android.harrissaspr.HhmpUdpService)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setReverseLayout(boolean)
com.atakmap.android.harrissaspr.plugin.PluginNativeLoader: void init(android.content.Context)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void recycleFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,int,int,boolean)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: android.hardware.usb.UsbEndpoint getReadEndpoint()
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemRangeChanged(int,int)
androidx.recyclerview.widget.ViewInfoStore$ProcessCallback: void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void measureChildWithMargins(android.view.View,int,int)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: int[] iconsCSS
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)
androidx.recyclerview.R$dimen: int fastscroll_minimum_range
com.atakmap.android.harrissaspr.plugin.R$styleable: int RecyclerView_fastScrollVerticalTrackDrawable
androidx.recyclerview.widget.DefaultItemAnimator$5: void onAnimationCancel(android.animation.Animator)
com.atakmap.android.harrissaspr.plugin.R$dimen: int gps_id
androidx.recyclerview.widget.RecyclerView: void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
com.atakmap.android.harrissaspr.plugin.R$drawable: int cs_signal
androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean mRunning
androidx.recyclerview.widget.FastScroller: boolean mNeedHorizontalScrollbar
androidx.recyclerview.widget.RecyclerView: boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION
com.atakmap.android.harrissaspr.SprSerialService: java.lang.String INTENT_CLASS_MAIN_ACTIVITY
androidx.recyclerview.widget.RecyclerView$LayoutManager: void addView(android.view.View,int)
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: void setThreadPriority(int)
androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List FULLUPDATE_PAYLOADS
androidx.recyclerview.widget.DefaultItemAnimator$7: void onAnimationEnd(android.animation.Animator)
androidx.recyclerview.widget.RecyclerView: void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean isRunning(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener)
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_aa_airborne
androidx.recyclerview.widget.FastScroller: int mDragState
androidx.recyclerview.widget.RecyclerView$LayoutManager$1: android.view.View getChildAt(int)
androidx.recyclerview.widget.ItemTouchHelper: int ANIMATION_TYPE_SWIPE_CANCEL
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int)
com.atakmap.android.harrissaspr.plugin.R$string: int SPR_BFT_DISABLED
androidx.recyclerview.widget.MessageThreadUtil$MessageQueue: void sendMessageAtFrontOfQueue(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem)
androidx.recyclerview.widget.AdapterHelper$UpdateOp: java.lang.String cmdToString()
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver: java.lang.String TAG
androidx.recyclerview.widget.AsyncDifferConfig: java.util.concurrent.Executor getMainThreadExecutor()
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$2: android.content.Intent val$startHhmpServiceIntent
com.atakmap.android.harrissaspr.converters.HarrisSAparser: java.lang.String RMC_chksum()
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$6$2: HarrisSaSprDropDownReceiver$6$2(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$6,android.widget.TableLayout,android.widget.TableRow)
androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener: ItemTouchHelper$ItemTouchHelperGestureListener(androidx.recyclerview.widget.ItemTouchHelper)
androidx.recyclerview.widget.ViewBoundsCheck$Callback: int getChildStart(android.view.View)
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: android.hardware.usb.UsbEndpoint getWriteEndpoint()
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: int access$600(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver)
androidx.recyclerview.widget.RecyclerView: boolean hasNestedScrollingParent(int)
androidx.recyclerview.widget.LinearLayoutManager: int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.DefaultItemAnimator$4: android.view.ViewPropertyAnimator val$animation
com.atakmap.android.harrissaspr.plugin.R$drawable: int comabat_rotary_wing
androidx.recyclerview.widget.DefaultItemAnimator$8: android.view.ViewPropertyAnimator val$newViewAnimation
com.atakmap.android.harrissaspr.plugin.R$styleable: int[] RecyclerView
androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener: void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: int[] mSpanReferenceLines
com.atakmap.android.harrissaspr.plugin.R$string: int CHOOSE_DOMAIN
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: java.util.EnumSet getSupportedControlLines()
com.atakmap.android.harrissaspr.plugin.R$drawable: int sea_rescue
androidx.recyclerview.widget.AdapterHelper$Callback: void offsetPositionsForRemovingInvisible(int,int)
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.LinearLayoutManager: void logChildren()
androidx.recyclerview.widget.SnapHelper: android.widget.Scroller mGravityScroller
androidx.recyclerview.widget.AdapterHelper: int findPositionOffset(int)
androidx.recyclerview.widget.DefaultItemAnimator$6: void onAnimationEnd(android.animation.Animator)
androidx.recyclerview.widget.LinearLayoutManager: int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$6
androidx.recyclerview.widget.OrientationHelper$1: OrientationHelper$1(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener
com.atakmap.android.harrissaspr.driver.UsbSerialPort: void open(android.hardware.usb.UsbDeviceConnection)
androidx.recyclerview.widget.OrientationHelper: void offsetChildren(int)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean mInfinite
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem: MessageThreadUtil$SyncQueueItem()
androidx.recyclerview.widget.RecyclerView$State: int mFocusedItemPosition
androidx.recyclerview.widget.RecyclerView: int mTouchSlop
androidx.recyclerview.widget.LinearSmoothScroller: int getVerticalSnapPreference()
androidx.recyclerview.widget.DefaultItemAnimator: java.util.ArrayList mPendingMoves
androidx.recyclerview.widget.AsyncDifferConfig$Builder: androidx.recyclerview.widget.DiffUtil$ItemCallback mDiffCallback
androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()
androidx.recyclerview.widget.AdapterHelper: void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: void notifyItemRangeChanged(int,int)
androidx.recyclerview.widget.RecyclerView: void dispatchChildAttached(android.view.View)
com.atakmap.android.harrissaspr.plugin.R: R()
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState)
com.atakmap.android.harrissaspr.plugin.R$drawable: int new_dark_button_selected
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_ON_LAYOUT_TAG
androidx.recyclerview.widget.RecyclerView$1: androidx.recyclerview.widget.RecyclerView this$0
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void cacheReferenceLineAndClear(boolean,int)
androidx.recyclerview.widget.ItemTouchUIUtil: void clearView(android.view.View)
androidx.recyclerview.widget.SortedListAdapterCallback: void onChanged(int,int)
androidx.recyclerview.widget.ItemTouchUIUtil: void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean)
com.atakmap.android.harrissaspr.driver.UsbSerialPort$ControlLine: com.atakmap.android.harrissaspr.driver.UsbSerialPort$ControlLine DSR
com.atakmap.android.harrissaspr.plugin.R$drawable: int fixed_c2
com.atakmap.android.harrissaspr.plugin.R$drawable: int sof_ground
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: boolean getDTR()
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$3: android.widget.Switch val$hhmpGpsSwitch
androidx.recyclerview.widget.RecyclerView$Adapter: int getItemCount()
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: int FLAG_APPEAR_PRE_AND_POST
com.atakmap.android.harrissaspr.plugin.R$drawable: int cs_biological
androidx.recyclerview.widget.ViewInfoStore: ViewInfoStore()
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: int FLAG_APPEAR_AND_DISAPPEAR
androidx.recyclerview.widget.ListAdapter: java.lang.Object getItem(int)
androidx.annotation.InspectableProperty$FlagEntry: int mask()
androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollOffset()
androidx.recyclerview.widget.OrientationHelper$2: int getDecoratedMeasurement(android.view.View)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
com.atakmap.android.harrissaspr.driver.UsbSerialPort: void close()
com.atakmap.android.harrissaspr.plugin.R$style: int FullDropdownStyle
androidx.recyclerview.widget.LinearLayoutManager: boolean isAutoMeasureEnabled()
androidx.recyclerview.widget.DefaultItemAnimator: boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.AsyncListDiffer$1$1
androidx.recyclerview.widget.StaggeredGridLayoutManager: int convertFocusDirectionToLayoutDirection(int)
androidx.recyclerview.widget.AsyncDifferConfig$Builder
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: void onItemRangeMoved(int,int,int)
androidx.recyclerview.widget.AsyncListDiffer: java.util.List mList
com.atakmap.android.harrissaspr.plugin.R$drawable: int sea_landing_ship
androidx.recyclerview.widget.RecyclerView$State: int mPreviousLayoutItemCount
androidx.recyclerview.widget.RecyclerView$5: void removeViewAt(int)
androidx.recyclerview.widget.ItemTouchHelper: androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation findAnimation(android.view.MotionEvent)
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: android.util.SparseIntArray mSpanGroupIndexCache
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: boolean getCTS()
com.atakmap.android.harrissaspr.driver.UsbSerialPort$ControlLine: com.atakmap.android.harrissaspr.driver.UsbSerialPort$ControlLine CD
com.atakmap.android.harrissaspr.plugin.R$drawable: int subsurf_
androidx.recyclerview.widget.ViewInfoStore$ProcessCallback
androidx.recyclerview.widget.LinearLayoutManager$SavedState: int mAnchorPosition
androidx.recyclerview.R$styleable: int RecyclerView_fastScrollHorizontalThumbDrawable
androidx.recyclerview.widget.RecyclerView: boolean didChildRangeChange(int,int)
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_inf_troops
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: com.atakmap.android.harrissaspr.util.SerialInputOutputManager$State getState()
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl: void setPrefetchVector(int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void updateAllRemainingSpans(int,int)
com.atakmap.android.harrissaspr.plugin.R$string: R$string()
androidx.recyclerview.widget.RecyclerView: int mScrollState
androidx.recyclerview.widget.SnapHelper: androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mItemPrefetchEnabled
androidx.recyclerview.widget.DiffUtil$DiffResult: void findRemoval(int,int,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getSelectionModeForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.ItemTouchHelper$2: boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: int[] iconsSOF
androidx.recyclerview.widget.GridLayoutManager: void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mLastScrollDelta
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd
androidx.recyclerview.widget.AsyncDifferConfig$Builder: java.util.concurrent.Executor mMainThreadExecutor
androidx.recyclerview.widget.DefaultItemAnimator$7: DefaultItemAnimator$7(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View)
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation: float mTargetX
androidx.recyclerview.widget.LinearLayoutManager: int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
androidx.annotation.LongDef: boolean open()
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: int mSpanLookupSize
androidx.recyclerview.widget.RecyclerView: void smoothScrollToPosition(int)
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemMoved(int,int)
androidx.annotation.Size
androidx.recyclerview.widget.RecyclerView: void onMeasure(int,int)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: int FLAG_INVALIDATED
androidx.recyclerview.R$styleable: int RecyclerView_fastScrollHorizontalTrackDrawable
androidx.recyclerview.widget.AdapterHelper$UpdateOp: int POOL_SIZE
androidx.recyclerview.widget.SnapHelper$1: SnapHelper$1(androidx.recyclerview.widget.SnapHelper)
com.atakmap.android.harrissaspr.plugin.R$style: int ATAKSpinner
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemRangeInserted(int,int)
androidx.recyclerview.widget.MessageThreadUtil$1$1: MessageThreadUtil$1$1(androidx.recyclerview.widget.MessageThreadUtil$1)
com.atakmap.android.harrissaspr.plugin.BuildConfig: java.lang.String APPLICATION_ID
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: void notifyChanged()
com.atakmap.android.harrissaspr.util.MonotonicClock: MonotonicClock()
androidx.recyclerview.widget.RecyclerView$Recycler: void recycleCachedViewAt(int)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: int[] iconsWEAPON
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.recyclerview.widget.ViewInfoStore: void removeFromDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.ItemTouchHelper: void startSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.ViewBoundsCheck: int FLAG_CVE_LT_PVE
androidx.recyclerview.widget.LinearLayoutManager$SavedState: LinearLayoutManager$SavedState()
androidx.recyclerview.widget.FastScroller: int STATE_VISIBLE
androidx.recyclerview.widget.LinearSnapHelper: androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.atakmap.android.harrissaspr.driver.UsbSerialPort: int DATABITS_8
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View hasGapsToFix()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void attachView(android.view.View)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: java.lang.String SPR_BYTE
androidx.recyclerview.widget.GridLayoutManager: void cachePreLayoutSpanMapping()
androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
androidx.recyclerview.widget.LinearLayoutManager: boolean supportsPredictiveItemAnimations()
androidx.recyclerview.widget.RecyclerView$ViewHolder: int FLAG_UPDATE
androidx.recyclerview.widget.RecyclerView$ViewHolder
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int right
androidx.recyclerview.widget.RecyclerView$LayoutManager$1: androidx.recyclerview.widget.RecyclerView$LayoutManager this$0
com.atakmap.android.harrissaspr.converters.SprSAparser: java.lang.String Echelon
com.atakmap.android.harrissaspr.converters.MILSTDconverter
androidx.recyclerview.widget.RecyclerView: int mMinFlingVelocity
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback
com.atakmap.android.harrissaspr.plugin.PluginTemplateTool
androidx.recyclerview.widget.AdapterHelper: androidx.core.util.Pools$Pool mUpdateOpPool
com.atakmap.android.harrissaspr.plugin.R$drawable: int dot_unselected
androidx.recyclerview.widget.LinearSmoothScroller: int mInterimTargetDy
androidx.recyclerview.widget.StaggeredGridLayoutManager: int mGapStrategy
com.atakmap.android.harrissaspr.driver.UsbSerialProber
androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: int getPortNumber()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: void sendAccessibilityEvent(android.view.View,int)
com.atakmap.android.harrissaspr.plugin.R$drawable: int dot_selected
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: void closeInt()
androidx.recyclerview.widget.RecyclerView$Adapter: boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findOneVisibleChild(int,int,boolean,boolean)
androidx.recyclerview.widget.RecyclerView$ItemAnimator
androidx.recyclerview.widget.FastScroller$2: FastScroller$2(androidx.recyclerview.widget.FastScroller)
androidx.recyclerview.widget.ListAdapter: ListAdapter(androidx.recyclerview.widget.AsyncDifferConfig)
com.atakmap.android.harrissaspr.plugin.R$drawable: int sof_fixed
androidx.recyclerview.widget.DefaultItemAnimator$1
com.atakmap.android.harrissaspr.plugin.R$string: int app_desc
com.atakmap.android.harrissaspr.converters.SprSAparser
androidx.recyclerview.widget.LinearLayoutManager: void recycleByLayoutState(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean DEBUG
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,int,boolean)
androidx.recyclerview.widget.OrientationHelper$2: int getMode()
androidx.recyclerview.widget.SortedList: void removeItemAtIndex(int,boolean)
androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void popEnd()
com.atakmap.android.harrissaspr.plugin.R
androidx.recyclerview.widget.RecyclerView$Recycler: void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedScroll(int,int,int,int,int[],int)
androidx.recyclerview.widget.RecyclerView$ViewFlinger: android.view.animation.Interpolator mInterpolator
androidx.recyclerview.widget.RecyclerView: boolean mLayoutWasDefered
com.atakmap.android.harrissaspr.plugin.R$drawable: int css_med
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: int FLAG_DISAPPEARED
androidx.recyclerview.widget.ItemTouchHelper$Callback: int mCachedMaxScrollSpeed
androidx.recyclerview.widget.RecyclerView$Adapter: void setHasStableIds(boolean)
com.atakmap.android.harrissaspr.plugin.R$drawable: int css_maintenance
androidx.recyclerview.widget.SortedList: boolean remove(java.lang.Object)
androidx.recyclerview.R$attr: R$attr()
androidx.annotation.GuardedBy
androidx.recyclerview.widget.RecyclerView$ViewFlinger: boolean mReSchedulePostAnimationCallback
com.atakmap.android.harrissaspr.plugin.R$array: int sfc_list
androidx.recyclerview.widget.DefaultItemAnimator: java.util.ArrayList mChangeAnimations
com.atakmap.android.harrissaspr.plugin.R$drawable: int cs
androidx.recyclerview.widget.RecyclerView$State: boolean willRunSimpleAnimations()
androidx.recyclerview.widget.RecyclerView$5: void removeAllViews()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.ChildHelper$Bucket: void ensureNext()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object)
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)
androidx.recyclerview.widget.LinearSmoothScroller: int getHorizontalSnapPreference()
com.atakmap.android.harrissaspr.converters.HarrisSAparser: HarrisSAparser()
androidx.recyclerview.widget.ItemTouchHelper$Callback: void onSwiped(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: java.lang.String TAG
androidx.recyclerview.widget.RecyclerView$LayoutManager: void detachViewInternal(int,android.view.View)
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: void notifyItemRangeRemoved(int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: androidx.recyclerview.widget.StaggeredGridLayoutManager this$0
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback: int mDefaultDragDirs
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void setDuration(int)
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo: DefaultItemAnimator$MoveInfo(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
com.atakmap.android.harrissaspr.driver.UsbSerialProber: com.atakmap.android.harrissaspr.driver.UsbSerialDriver probeDevice(android.hardware.usb.UsbDevice)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void flagRemovedAndOffsetPosition(int,int,boolean)
androidx.recyclerview.widget.RecyclerView: void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.AsyncListUtil: void updateRange()
com.atakmap.android.harrissaspr.plugin.R$drawable: int subsurf_diver
androidx.recyclerview.widget.RecyclerView$LayoutManager$1: RecyclerView$LayoutManager$1(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.annotation.CallSuper
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: boolean shouldIgnore()
androidx.recyclerview.widget.ViewInfoStore$ProcessCallback: void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.recyclerview.widget.FastScroller: void updateScrollPosition(int,int)
androidx.recyclerview.widget.GridLayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.annotation.IntDef
androidx.recyclerview.widget.AdapterHelper$UpdateOp
androidx.annotation.LongDef
androidx.recyclerview.widget.DiffUtil$ItemCallback: DiffUtil$ItemCallback()
androidx.recyclerview.widget.StaggeredGridLayoutManager: java.util.BitSet mRemainingSpans
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mDy
androidx.recyclerview.widget.RecyclerView$State: boolean mIsMeasuring
androidx.recyclerview.widget.LinearLayoutManager: int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean)
androidx.annotation.GuardedBy: java.lang.String value()
androidx.recyclerview.widget.ViewBoundsCheck: android.view.View findOneViewWithinBoundFlags(int,int,int,int)
androidx.recyclerview.widget.RecyclerView: void removeAndRecycleViews()
androidx.recyclerview.widget.DefaultItemAnimator$6: androidx.recyclerview.widget.RecyclerView$ViewHolder val$holder
androidx.annotation.ColorRes
com.atakmap.android.harrissaspr.SprSerialService: com.atakmap.android.harrissaspr.driver.UsbSerialPort port
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState
androidx.recyclerview.widget.LinearSmoothScroller: LinearSmoothScroller(android.content.Context)
androidx.recyclerview.widget.ScrollbarHelper: int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: void invalidateAnchorPositionInfo()
androidx.recyclerview.widget.ItemTouchHelper$Callback: int DEFAULT_DRAG_ANIMATION_DURATION
com.atakmap.android.harrissaspr.plugin.R$drawable: int css_recovery
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView)
com.atakmap.android.harrissaspr.plugin.R$drawable: int sea_hovercraft
androidx.recyclerview.widget.DefaultItemAnimator$4: DefaultItemAnimator$4(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.ViewPropertyAnimator,android.view.View)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: void ensureSize(int)
androidx.recyclerview.widget.RecyclerView$SavedState$1
androidx.recyclerview.widget.ThreadUtil$BackgroundCallback: void refresh(int)
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int)
androidx.recyclerview.widget.RecyclerView$5: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: LinearLayoutManager$AnchorInfo()
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View getFocusedChild()
androidx.recyclerview.widget.FastScroller: void destroyCallbacks()
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void setMoveDuration(long)
com.atakmap.android.harrissaspr.plugin.R$drawable: int cs_law_enforcement
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: void setWriteBufferSize(int)
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.recyclerview.widget.AsyncListUtil: androidx.recyclerview.widget.ThreadUtil$MainThreadCallback mMainThreadCallback
androidx.annotation.Dimension
com.atakmap.android.harrissaspr.plugin.R$drawable: int blimp
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void dispatchAnimationsFinished()
androidx.recyclerview.widget.RecyclerView$ViewFlinger: float distanceInfluenceForSnapDuration(float)
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType COLOR
androidx.recyclerview.widget.LayoutState: boolean mInfinite
androidx.recyclerview.widget.ChildHelper: java.lang.String TAG
com.atakmap.android.harrissaspr.driver.UsbSerialPort: void write(byte[],int)
androidx.recyclerview.widget.FastScroller: int mVerticalTrackWidth
androidx.recyclerview.widget.RecyclerView$4
androidx.recyclerview.widget.RecyclerView: boolean mIsAttached
com.atakmap.android.harrissaspr.util.SerialInputOutputManager$State: com.atakmap.android.harrissaspr.util.SerialInputOutputManager$State[] $VALUES
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mConsecutiveUpdates
androidx.recyclerview.widget.DefaultItemAnimator$3: java.util.ArrayList val$additions
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.OrientationHelper mSecondaryOrientation
androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver: java.lang.String access$000(com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver)
androidx.annotation.IdRes
androidx.recyclerview.widget.RecyclerView: float mScaledVerticalScrollFactor
com.atakmap.android.harrissaspr.plugin.R$drawable: int subsurf_submarine
androidx.recyclerview.widget.AsyncListDiffer$1$1: AsyncListDiffer$1$1(androidx.recyclerview.widget.AsyncListDiffer$1)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: java.lang.String INTENT_ACTION_GRANT_USB
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$1: com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver this$0
androidx.annotation.BoolRes
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void onAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.RecyclerView$ViewFlinger: boolean mEatRunOnAnimationRequest
androidx.recyclerview.widget.ItemTouchHelper: android.view.VelocityTracker mVelocityTracker
androidx.recyclerview.widget.AsyncDifferConfig: java.util.concurrent.Executor mBackgroundThreadExecutor
androidx.recyclerview.widget.ItemTouchHelper$Callback: int getAbsoluteMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.GapWorker: void remove(androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int SCROLLING_OFFSET_NaN
androidx.annotation.InspectableProperty
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener: void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.annotation.InspectableProperty: androidx.annotation.InspectableProperty$FlagEntry[] flagMapping()
androidx.recyclerview.widget.DefaultItemAnimator$3: DefaultItemAnimator$3(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList)
androidx.recyclerview.widget.ChildHelper: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)
com.atakmap.android.harrissaspr.SprSerialService: java.lang.String NOTIFICATION_CHANNEL
androidx.recyclerview.widget.OrientationHelper$2: OrientationHelper$2(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.recyclerview.widget.ChildHelper: int indexOfChild(android.view.View)
androidx.recyclerview.widget.RecyclerView$6: void markViewHoldersUpdated(int,int,java.lang.Object)
androidx.recyclerview.widget.AsyncListUtil: androidx.recyclerview.widget.TileList mTileList
androidx.recyclerview.widget.RecyclerView$State: long mFocusedItemId
androidx.recyclerview.widget.SortedList: int mOldDataStart
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: void start()
androidx.recyclerview.widget.DefaultItemAnimator$5: android.view.ViewPropertyAnimator val$animation
androidx.recyclerview.widget.RecyclerView: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
com.atakmap.android.harrissaspr.converters.SprSAparser: java.lang.Boolean saPass(byte[])
androidx.recyclerview.widget.ItemTouchHelper: void obtainVelocityTracker()
androidx.recyclerview.widget.ChildHelper: void detachViewFromParent(int)
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2
androidx.annotation.RequiresPermission: boolean conditional()
androidx.recyclerview.widget.LinearLayoutManager: int mInitialPrefetchItemCount
com.atakmap.android.harrissaspr.plugin.R$drawable: int sea_landing_craft
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_ON_DATA_SET_CHANGE_LAYOUT_TAG
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_engineer
androidx.recyclerview.widget.ItemTouchHelper: boolean hasRunningRecoverAnim()
com.atakmap.android.harrissaspr.plugin.R$dimen: int tab_text_size
androidx.recyclerview.widget.StaggeredGridLayoutManager: void appendViewToAllSpans(android.view.View)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: java.util.List mFullSpanItems
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$3: android.content.Context val$context
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: android.hardware.usb.UsbEndpoint mWriteEndpoint
androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState()
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int INVALID_SPAN_ID
com.atakmap.android.harrissaspr.plugin.R$color: int light_gray
com.atakmap.android.harrissaspr.plugin.R$string: int HHMP_BFT_DISABLED
androidx.recyclerview.R$attr: int stackFromEnd
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
androidx.recyclerview.widget.RecyclerView$OnScrollListener: RecyclerView$OnScrollListener()
com.atakmap.android.harrissaspr.driver.UsbSerialPort$ControlLine: com.atakmap.android.harrissaspr.driver.UsbSerialPort$ControlLine DTR
androidx.annotation.RequiresPermission: java.lang.String[] allOf()
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType INT_FLAG
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$5: android.hardware.usb.UsbManager val$manager
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_air_defense
androidx.recyclerview.widget.ItemTouchHelper: float[] mTmpPosition
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getLastChildPosition()
androidx.recyclerview.widget.GridLayoutManager: void setStackFromEnd(boolean)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View)
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo: DefaultItemAnimator$ChangeInfo(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.SortedList: void clear()
androidx.recyclerview.widget.OrientationHelper: int getModeInOther()
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver: java.util.List getPorts()
androidx.recyclerview.widget.SortedList: int INSERTION
androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener: androidx.recyclerview.widget.ItemTouchHelper this$0
androidx.recyclerview.widget.MessageThreadUtil$1$1: androidx.recyclerview.widget.MessageThreadUtil$1 this$1
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onStop()
androidx.recyclerview.widget.DefaultItemAnimator$6: android.view.View val$view
com.atakmap.android.harrissaspr.converters.HarrisSAparser
androidx.recyclerview.widget.AdapterHelper$UpdateOp: int REMOVE
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingStart()
androidx.annotation.LongDef: boolean flag()
androidx.recyclerview.widget.RecyclerView: java.lang.Runnable mItemAnimatorRunner
androidx.recyclerview.widget.PagerSnapHelper: boolean isForwardFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int)
com.atakmap.android.harrissaspr.plugin.R$style: int unpaddedButton
com.atakmap.android.harrissaspr.driver.UsbSerialPort: boolean getRTS()
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver
com.atakmap.android.harrissaspr.driver.UsbSerialProber: java.util.List findAllDrivers(android.hardware.usb.UsbManager)
androidx.recyclerview.widget.OpReorderer$Callback: androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object)
androidx.annotation.FloatRange
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: java.util.ArrayList mScrapHeap
androidx.recyclerview.widget.RecyclerView$1: RecyclerView$1(androidx.recyclerview.widget.RecyclerView)
androidx.annotation.XmlRes
androidx.recyclerview.widget.ItemTouchHelper: boolean DEBUG
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: boolean mRts
androidx.recyclerview.widget.AsyncListDiffer: AsyncListDiffer(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.DiffUtil$ItemCallback)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
com.atakmap.android.harrissaspr.plugin.R$color: int light_blue
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem: int arg3
androidx.recyclerview.widget.DefaultItemAnimator$8: void onAnimationStart(android.animation.Animator)
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension: RecyclerView$ViewCacheExtension()
com.atakmap.android.harrissaspr.plugin.PluginLifecycle: void onStop()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int updateSpecWithExtra(int,int,int)
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: boolean mDtr
androidx.recyclerview.widget.LinearLayoutManager: boolean getRecycleChildrenOnDetach()
androidx.recyclerview.widget.LinearSnapHelper: int estimateNextPositionDiffForFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper,int,int)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void runPendingAnimations()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemChanged(int,java.lang.Object)
androidx.recyclerview.widget.RecyclerView$State: void assertLayoutStep(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setOrientation(int)
com.atakmap.android.harrissaspr.SprSerialService: android.os.Handler mainLooper
androidx.recyclerview.widget.SnapHelper$1
androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$2: com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver this$0
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: int spanCount
com.atakmap.android.harrissaspr.plugin.PluginLifecycle: void onDestroy()
androidx.recyclerview.widget.RecyclerView: void stopScroll()
androidx.recyclerview.widget.ItemTouchHelper$Callback: android.view.animation.Interpolator sDragScrollInterpolator
androidx.recyclerview.widget.SortedList$Callback: SortedList$Callback()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
com.atakmap.android.harrissaspr.plugin.R$attr: int fastScrollHorizontalTrackDrawable
androidx.recyclerview.widget.RecyclerView: void processDataSetCompletelyChanged(boolean)
androidx.recyclerview.widget.RecyclerView$State: boolean willRunPredictiveAnimations()
androidx.recyclerview.widget.RecyclerView$Recycler: void clearScrap()
androidx.recyclerview.widget.RecyclerView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.recyclerview.widget.RecyclerView: void viewRangeUpdate(int,int,java.lang.Object)
com.atakmap.android.harrissaspr.plugin.R$drawable: int sea_combatant
androidx.recyclerview.widget.LinearLayoutManager: void setOrientation(int)
androidx.recyclerview.widget.ItemTouchHelper$Callback$2: float getInterpolation(float)
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: int mChildStart
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.atakmap.android.harrissaspr.plugin.R$drawable: int vehicle_armor_light
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate
androidx.recyclerview.widget.DiffUtil$PostponedUpdate: boolean removal
androidx.recyclerview.widget.ItemTouchHelper$2: androidx.recyclerview.widget.ItemTouchHelper this$0
androidx.recyclerview.widget.LinearSmoothScroller
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action
androidx.recyclerview.widget.RecyclerView: float mScaledHorizontalScrollFactor
androidx.recyclerview.widget.RecyclerView$ViewHolder: int FLAG_BOUNCED_FROM_HIDDEN_LIST
androidx.recyclerview.widget.RecyclerView$5: void detachViewFromParent(int)
androidx.annotation.HalfFloat
androidx.recyclerview.widget.DefaultItemAnimator$4: androidx.recyclerview.widget.RecyclerView$ViewHolder val$holder
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed
androidx.recyclerview.widget.LayoutState: boolean mRecycle
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeViewAt(int)
androidx.recyclerview.widget.RecyclerView: boolean DEBUG
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: void write(byte[],int)
androidx.recyclerview.widget.RecyclerView$ViewHolder: int FLAG_TMP_DETACHED
androidx.recyclerview.widget.AdapterHelper: java.lang.Runnable mOnItemProcessedCallback
androidx.recyclerview.widget.OrientationHelper$2
com.atakmap.android.harrissaspr.plugin.R$drawable: int air
androidx.recyclerview.widget.RecyclerView: android.view.View focusSearch(android.view.View,int)
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1
androidx.recyclerview.widget.SortedList: int sortAndDedup(java.lang.Object[])
androidx.recyclerview.widget.ThreadUtil$BackgroundCallback
androidx.recyclerview.widget.PagerSnapHelper$1: androidx.recyclerview.widget.PagerSnapHelper this$0
androidx.recyclerview.widget.ScrollbarHelper: ScrollbarHelper()
androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowingHolder
com.atakmap.android.harrissaspr.converters.SprSAparser: java.lang.String Course()
androidx.recyclerview.widget.ItemTouchHelper$Callback: void onMoved(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int)
androidx.recyclerview.widget.ListUpdateCallback: void onMoved(int,int)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: java.lang.Boolean sprSw
androidx.recyclerview.widget.RecyclerView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: void setDTR(boolean)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$9: com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver this$0
androidx.recyclerview.widget.LinearLayoutManager: void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int)
androidx.recyclerview.widget.RecyclerView: int INVALID_TYPE
androidx.recyclerview.R$attr: int fastScrollVerticalThumbDrawable
androidx.recyclerview.widget.GridLayoutManager: void clearPreLayoutSpanMappingCache()
androidx.recyclerview.widget.LinearLayoutManager: void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[])
com.atakmap.android.harrissaspr.plugin.R$drawable: int vehicle_civ
androidx.recyclerview.widget.ListUpdateCallback: void onInserted(int,int)
androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: android.view.animation.Interpolator getInterpolator()
androidx.recyclerview.widget.OrientationHelper$2: int getTotalSpace()
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$8: HarrisSaSprDropDownReceiver$8(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver,android.content.Intent,android.widget.Switch,android.widget.Switch,android.widget.EditText,android.widget.Switch,android.widget.TableLayout,android.widget.Switch,com.atakmap.android.maps.MapView,android.widget.EditText,android.widget.TableLayout)
com.atakmap.android.harrissaspr.driver.UsbSerialPort: boolean getDSR()
androidx.annotation.VisibleForTesting: int PROTECTED
androidx.recyclerview.widget.ChildHelper$Bucket: void reset()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem: androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem sPool
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType[] $VALUES
androidx.recyclerview.widget.RecyclerView$Recycler: void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.GridLayoutManager: void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem: int arg5
com.atakmap.android.harrissaspr.SprSerialService: java.lang.String INTENT_ACTION_DISCONNECT
androidx.recyclerview.widget.FastScroller$AnimatorUpdater: FastScroller$AnimatorUpdater(androidx.recyclerview.widget.FastScroller)
com.atakmap.android.harrissaspr.plugin.PluginLifecycle: android.content.Context pluginContext
androidx.recyclerview.widget.RecyclerView$SavedState: RecyclerView$SavedState(android.os.Parcelable)
androidx.recyclerview.widget.ChildHelper$Bucket: ChildHelper$Bucket()
androidx.recyclerview.widget.FastScroller: int SHOW_DURATION_MS
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.atakmap.android.harrissaspr.plugin.R$drawable: int sea_assault_vessel
androidx.recyclerview.widget.GridLayoutManager: boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void assignFromViewAndKeepVisibleRect(android.view.View,int)
androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep3()
androidx.recyclerview.widget.PagerSnapHelper$1: int calculateTimeForScrolling(int)
androidx.recyclerview.widget.RecyclerView: void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: int getSpanIndex()
androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)
androidx.annotation.RequiresApi: int value()
androidx.recyclerview.widget.RecyclerView$Orientation
androidx.recyclerview.widget.GapWorker$Task: int position
androidx.recyclerview.widget.ViewBoundsCheck: int FLAG_CVS_EQ_PVE
androidx.recyclerview.widget.LinearLayoutManager: java.lang.String TAG
androidx.recyclerview.widget.LinearSmoothScroller: void onStart()
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener: void onChildViewAttachedToWindow(android.view.View)
androidx.recyclerview.widget.AdapterHelper: void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
androidx.recyclerview.widget.ItemTouchHelper$3: void onAnimationEnd(android.animation.Animator)
androidx.recyclerview.widget.DefaultItemAnimator: java.util.ArrayList mMoveAnimations
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: void offsetForAddition(int,int)
androidx.recyclerview.widget.RecyclerView$Adapter: void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)
com.atakmap.android.harrissaspr.HhmpUdpService: java.net.DatagramSocket access$000(com.atakmap.android.harrissaspr.HhmpUdpService)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: java.lang.Boolean hhmpGps
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: int[] iconsSUBSURFACE
androidx.recyclerview.widget.DefaultItemAnimator: void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo)
androidx.recyclerview.widget.RecyclerView$State: int getRemainingScrollVertical()
com.atakmap.android.harrissaspr.plugin.R$attr
com.atakmap.android.harrissaspr.plugin.R$array: int gnd_unt_cs_list
androidx.recyclerview.widget.TileList$Tile
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_armor_wheeled_airborne
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$4: android.hardware.usb.UsbManager val$manager
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int findOnePartiallyVisibleChild(int,int,boolean)
androidx.recyclerview.widget.AsyncListDiffer: AsyncListDiffer(androidx.recyclerview.widget.ListUpdateCallback,androidx.recyclerview.widget.AsyncDifferConfig)
androidx.recyclerview.widget.OpReorderer: int getLastMoveOutOfOrder(java.util.List)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mRecyclerViewDelegate
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreFling(float,float)
androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult mLayoutChunkResult
androidx.recyclerview.widget.ChildHelper: java.util.List mHiddenViews
androidx.recyclerview.widget.LinearLayoutManager: boolean isSmoothScrollbarEnabled()
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$8
com.atakmap.android.harrissaspr.util.SerialInputOutputManager$State: SerialInputOutputManager$State(java.lang.String,int)
androidx.recyclerview.widget.RecyclerView$State: void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter)
androidx.recyclerview.R$id: int icon
androidx.recyclerview.widget.DefaultItemAnimator$3: androidx.recyclerview.widget.DefaultItemAnimator this$0
com.atakmap.android.harrissaspr.plugin.R$drawable: int vehicle_engineer
androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean mPendingInitialRun
androidx.recyclerview.widget.LinearLayoutManager: boolean shouldMeasureTwice()
androidx.recyclerview.widget.RecyclerView$State: int STEP_ANIMATIONS
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.OrientationHelper mPrimaryOrientation
androidx.recyclerview.widget.OrientationHelper: int getMode()
androidx.recyclerview.widget.MessageThreadUtil$2: void refresh(int)
androidx.recyclerview.widget.ChildHelper$Callback: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams)
androidx.recyclerview.widget.LinearLayoutManager: void prepareForDrop(android.view.View,android.view.View,int,int)
androidx.recyclerview.widget.SnapHelper: int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int)
androidx.recyclerview.widget.RecyclerView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.recyclerview.widget.FastScroller: int[] PRESSED_STATE_SET
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$6$2: android.widget.TableRow val$tr_head
androidx.recyclerview.widget.ItemTouchHelper$5
androidx.recyclerview.widget.FastScroller: void drawVerticalScrollbar(android.graphics.Canvas)
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void onItemRangeChanged(int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: boolean mLastLayoutRTL
androidx.recyclerview.widget.ChildHelper$Bucket
androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$Recycler mScrapContainer
androidx.recyclerview.widget.ItemTouchHelper$4: void run()
com.atakmap.android.harrissaspr.plugin.R$style: int darkButton
androidx.recyclerview.widget.DefaultItemAnimator$8: void onAnimationEnd(android.animation.Animator)
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: int size()
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean getReverseLayout()
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void appendToSpan(android.view.View)
androidx.recyclerview.widget.OrientationHelper: int VERTICAL
androidx.recyclerview.widget.RecyclerView: void ensureRightGlow()
androidx.recyclerview.widget.RecyclerView$ViewFlinger: void stop()
androidx.recyclerview.widget.ItemTouchHelper: int ANIMATION_TYPE_SWIPE_SUCCESS
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo: int fromX
androidx.recyclerview.widget.LinearLayoutManager: void assertNotInLayoutOrScroll(java.lang.String)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void calculateCachedEnd()
androidx.recyclerview.widget.ItemTouchHelper$Callback$1: ItemTouchHelper$Callback$1()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int)
androidx.recyclerview.widget.AsyncListUtil: int mScrollHint
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver
androidx.recyclerview.widget.MessageThreadUtil$2: java.util.concurrent.Executor mExecutor
androidx.recyclerview.widget.RecyclerView$5: void addView(android.view.View,int)
androidx.recyclerview.widget.LinearLayoutManager$SavedState: LinearLayoutManager$SavedState(android.os.Parcel)
androidx.recyclerview.widget.AsyncListUtil$1: void updateItemCount(int,int)
androidx.recyclerview.widget.SortedList: java.lang.Object[] copyArray(java.lang.Object[])
androidx.recyclerview.widget.RecyclerView$Recycler: void invalidateDisplayListInt(android.view.ViewGroup,boolean)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: java.lang.String spr_db
androidx.recyclerview.widget.RecyclerView$Recycler: RecyclerView$Recycler(androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.DiffUtil$DiffResult: java.util.List getSnakes()
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View onInterceptFocusSearch(android.view.View,int)
androidx.annotation.RestrictTo$Scope: RestrictTo$Scope(java.lang.String,int)
androidx.recyclerview.widget.SimpleItemAnimator: boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
com.atakmap.android.harrissaspr.plugin.R$drawable: int weapon_rocket_launcher_single
androidx.recyclerview.widget.ItemTouchUIUtil: void onSelected(android.view.View)
androidx.recyclerview.widget.MessageThreadUtil$MessageQueue: androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem mRoot
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
androidx.recyclerview.widget.AsyncListUtil: boolean isRefreshPending()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1: StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1()
androidx.recyclerview.widget.DiffUtil$Range: int newListStart
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1
androidx.recyclerview.widget.ViewInfoStore: boolean isDisappearing(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: RecyclerView$SmoothScroller$Action(int,int,int,android.view.animation.Interpolator)
androidx.recyclerview.widget.RecyclerView: void addOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener)
androidx.recyclerview.widget.ChildHelper$Callback: void removeAllViews()
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_rocket
androidx.recyclerview.widget.LinearLayoutManager: int getInitialPrefetchItemCount()
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener: boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)
androidx.recyclerview.widget.RecyclerView$Recycler: int getScrapCount()
androidx.recyclerview.widget.ChildHelper: void hide(android.view.View)
androidx.recyclerview.widget.RecyclerView$OnItemTouchListener
androidx.recyclerview.widget.StaggeredGridLayoutManager: void prependViewToAllSpans(android.view.View)
androidx.recyclerview.widget.RecyclerView$ViewFlinger: void smoothScrollBy(int,int,int,android.view.animation.Interpolator)
androidx.recyclerview.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem()
androidx.recyclerview.widget.LinearLayoutManager: int findLastCompletelyVisibleItemPosition()
androidx.recyclerview.widget.LinearLayoutManager: boolean canScrollVertically()
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset
androidx.recyclerview.widget.LinearLayoutManager: void setInitialPrefetchItemCount(int)
com.atakmap.android.harrissaspr.plugin.R$drawable: int vehicle_bus
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRemoved()
com.atakmap.android.harrissaspr.driver.UsbSerialPort: boolean getCD()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void offsetChildrenHorizontal(int)
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_inf_motorized
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_aa_motorized
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: RecyclerView$SmoothScroller$Action(int,int,int)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void setFlags(int,int)
androidx.annotation.BinderThread
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: boolean DEBUG
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: StaggeredGridLayoutManager$SavedState()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForLayoutPosition(int)
androidx.recyclerview.widget.SortedList$Callback
com.atakmap.android.harrissaspr.converters.HarrisSAparser: boolean isValid()
androidx.recyclerview.widget.FastScroller: android.graphics.drawable.StateListDrawable mVerticalThumbDrawable
androidx.recyclerview.widget.ItemTouchHelper: int mSlop
com.atakmap.android.harrissaspr.HarrisSaSprMapComponent: void onDestroyImpl(android.content.Context,com.atakmap.android.maps.MapView)
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: boolean willCreateInTime(int,long,long)
androidx.recyclerview.widget.LinearLayoutManager: int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.MessageThreadUtil$MessageQueue: void sendMessage(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver
com.atakmap.android.harrissaspr.plugin.R$dimen: int item_touch_helper_max_drag_scroll_per_frame
androidx.recyclerview.widget.RecyclerView$State: int getItemCount()
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener: androidx.recyclerview.widget.RecyclerView this$0
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_air_defense_missile
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean checkForGaps()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: int describeContents()
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: void step()
androidx.recyclerview.widget.RecyclerView$State: int mRemainingScrollVertical
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getHeightMode()
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: GridLayoutManager$LayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
androidx.recyclerview.widget.DefaultItemAnimator$2: androidx.recyclerview.widget.DefaultItemAnimator this$0
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsChanged(androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean onAddFocusables(androidx.recyclerview.widget.RecyclerView,java.util.ArrayList,int,int)
androidx.recyclerview.widget.LinearLayoutManager: float MAX_SCROLL_FACTOR
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$12: HarrisSaSprDropDownReceiver$12(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver,android.widget.TableLayout,android.widget.TableRow)
com.atakmap.android.harrissaspr.plugin.R$drawable: int vehicle
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl: int mPrefetchDx
androidx.recyclerview.widget.AsyncListUtil: int mRequestedGeneration
androidx.recyclerview.widget.LinearSmoothScroller: void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
androidx.recyclerview.widget.PagerSnapHelper$1
androidx.recyclerview.widget.RecyclerView: boolean mDispatchItemsChangedEvent
androidx.recyclerview.widget.FastScroller: void hide(int)
androidx.recyclerview.widget.FastScroller: int mHorizontalTrackHeight
androidx.recyclerview.widget.SortedList$BatchedCallback: void dispatchLastEvent()
androidx.recyclerview.widget.RecyclerView$ViewHolder: long getItemId()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$6$2: void onClick(android.view.View)
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$12: android.widget.TableLayout val$t2
androidx.recyclerview.widget.RecyclerView: int getChildAdapterPosition(android.view.View)
com.atakmap.android.harrissaspr.plugin.R$style
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: void setReadTimeout(int)
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: int mThreadPriority
androidx.recyclerview.widget.StaggeredGridLayoutManager: void assertNotInLayoutOrScroll(java.lang.String)
com.atakmap.android.harrissaspr.plugin.PluginNativeLoader
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: void setRTS(boolean)
androidx.recyclerview.widget.ViewBoundsCheck: int EQ
androidx.recyclerview.widget.DiffUtil$DiffResult: boolean mDetectMoves
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_inf_ifv
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedMeasuredWidth(android.view.View)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int[] findFirstCompletelyVisibleItemPositions(int[])
androidx.recyclerview.widget.RecyclerView: int[] mNestedOffsets
androidx.recyclerview.widget.RecyclerView$LayoutManager$1: int getParentStart()
androidx.recyclerview.widget.RecyclerView$ViewHolder: int FLAG_BOUND
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int changeFlags
androidx.recyclerview.widget.ItemTouchHelper: void onChildViewDetachedFromWindow(android.view.View)
com.atakmap.android.harrissaspr.driver.ProbeTable: com.atakmap.android.harrissaspr.driver.ProbeTable addProduct(int,int,java.lang.Class)
com.atakmap.android.harrissaspr.plugin.R$drawable: int sensor_emplaced
androidx.recyclerview.widget.RecyclerView: void invalidateItemDecorations()
androidx.recyclerview.widget.AsyncDifferConfig$Builder: androidx.recyclerview.widget.AsyncDifferConfig$Builder setMainThreadExecutor(java.util.concurrent.Executor)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: int[] iconsCS
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: int read(byte[],int,boolean)
androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup getSpanSizeLookup()
com.atakmap.android.harrissaspr.plugin.R$attr: int fastScrollEnabled
androidx.recyclerview.widget.RecyclerView: void dispatchOnScrollStateChanged(int)
androidx.recyclerview.widget.GapWorker: void add(androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.OrientationHelper: int INVALID_SIZE
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean removeCallbacks(java.lang.Runnable)
androidx.recyclerview.widget.AsyncListUtil: java.lang.Object getItem(int)
androidx.recyclerview.widget.AsyncListUtil: void log(java.lang.String,java.lang.Object[])
androidx.recyclerview.widget.BatchingListUpdateCallback: void dispatchLastEvent()
androidx.recyclerview.widget.AdapterHelper: java.lang.String TAG
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort
androidx.recyclerview.widget.RecyclerView: boolean hasFixedSize()
com.atakmap.android.harrissaspr.plugin.R$drawable: int fixed_bomber
androidx.recyclerview.widget.DiffUtil$PostponedUpdate
androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_IDLE
androidx.recyclerview.widget.RecyclerView$ViewHolder: java.lang.String toString()
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
androidx.recyclerview.widget.FastScroller: void setupCallbacks()
androidx.recyclerview.widget.RecyclerView$State: boolean isMeasuring()
androidx.recyclerview.widget.MessageThreadUtil$2: void loadTile(int,int)
androidx.recyclerview.widget.ItemTouchHelper: void postDispatchSwipe(androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation,int)
androidx.recyclerview.widget.LinearSmoothScroller: float calculateSpeedPerPixel(android.util.DisplayMetrics)
com.atakmap.android.harrissaspr.plugin.R$drawable: int subsurf_uuv
androidx.recyclerview.widget.RecyclerView$SmoothScroller: android.graphics.PointF computeScrollVectorForPosition(int)
androidx.recyclerview.widget.DiffUtil$ItemCallback: boolean areContentsTheSame(java.lang.Object,java.lang.Object)
com.atakmap.android.harrissaspr.plugin.R$drawable: int cs_nbc
com.atakmap.android.harrissaspr.plugin.PluginTemplateTool: void onActivate(android.app.Activity,transapps.mapi.MapView,android.view.ViewGroup,android.os.Bundle,transapps.maps.plugin.tool.Tool$ToolCallback)
androidx.recyclerview.widget.LinearSnapHelper: int distanceToCenter(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View,androidx.recyclerview.widget.OrientationHelper)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: java.lang.Thread SAThread
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat
androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker mGapWorker
com.atakmap.android.harrissaspr.HhmpUdpService: java.net.DatagramSocket access$002(com.atakmap.android.harrissaspr.HhmpUdpService,java.net.DatagramSocket)
com.atakmap.android.harrissaspr.plugin.R$drawable: int rotor_c2
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_inf_airborne
androidx.recyclerview.widget.DiffUtil$Snake: DiffUtil$Snake()
androidx.recyclerview.widget.LinearSmoothScroller: int calculateTimeForScrolling(int)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$12: android.widget.TableRow val$tr_head
com.atakmap.android.harrissaspr.plugin.R$id: int item_touch_helper_previous_elevation
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findLastReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.LinearLayoutManager: void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver: java.util.Map getSupportedDevices()
androidx.recyclerview.widget.BatchingListUpdateCallback: void onChanged(int,int,java.lang.Object)
com.atakmap.android.harrissaspr.HhmpUdpService: void onDestroy()
androidx.recyclerview.R$attr: int fastScrollVerticalTrackDrawable
androidx.recyclerview.widget.AsyncListUtil$2: void removeTile(int)
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation: int mAnimationType
androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List)
androidx.annotation.RequiresFeature: java.lang.String enforcement()
androidx.recyclerview.widget.RecyclerView$State: void remove(int)
androidx.recyclerview.widget.SortedList: void replaceAll(java.util.Collection)
androidx.recyclerview.widget.BatchingListUpdateCallback: int TYPE_ADD
androidx.recyclerview.widget.RecyclerView: int getAdapterPositionFor(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener: void onChildViewDetachedFromWindow(android.view.View)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$9: void onNothingSelected(android.widget.AdapterView)
androidx.recyclerview.R$dimen: int item_touch_helper_swipe_escape_max_velocity
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: int mVisibleAnchorPosition
androidx.recyclerview.widget.RecyclerView$ItemAnimator$AdapterChanges
androidx.recyclerview.widget.OrientationHelper$2: int getDecoratedEnd(android.view.View)
androidx.recyclerview.widget.DefaultItemAnimator$6: DefaultItemAnimator$6(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,android.view.View,int,android.view.ViewPropertyAnimator)
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: StaggeredGridLayoutManager$LayoutParams(int,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void moveView(int,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean getClipToPadding()
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType GRAVITY
androidx.recyclerview.widget.FastScroller: int STATE_DRAGGING
androidx.recyclerview.widget.AdapterHelper: int mExistingUpdateTypes
androidx.recyclerview.widget.RecyclerView: void dispatchPendingImportantForAccessibilityChanges()
androidx.recyclerview.widget.ChildHelper$Bucket: void set(int)
androidx.recyclerview.widget.ChildHelper: boolean removeViewIfHidden(android.view.View)
androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean)
androidx.recyclerview.widget.PagerSnapHelper: androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void popStart()
androidx.recyclerview.widget.RecyclerView$OnScrollListener: void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.recyclerview.widget.AsyncListUtil: int[] mPrevRange
androidx.annotation.Keep
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int getStartLine()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean performAccessibilityAction(int,android.os.Bundle)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
androidx.recyclerview.widget.RecyclerView$Recycler: int mViewCacheMax
androidx.recyclerview.widget.RecyclerView$ItemDecoration: RecyclerView$ItemDecoration()
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: boolean mReverseLayout
com.atakmap.android.harrissaspr.plugin.PluginTemplateTool: transapps.maps.plugin.tool.Group[] getGroups()
androidx.recyclerview.widget.DefaultItemAnimator$5: void onAnimationEnd(android.animation.Animator)
androidx.recyclerview.R$id: R$id()
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_multi_rocket_self
androidx.recyclerview.widget.ChildHelper$Callback: void onEnteredHiddenState(android.view.View)
androidx.recyclerview.widget.DiffUtil$Range: int oldListStart
androidx.recyclerview.widget.LinearLayoutManager: int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
com.atakmap.android.harrissaspr.driver.UsbSerialPort: java.util.EnumSet getControlLines()
androidx.recyclerview.widget.GridLayoutManager: void onItemsChanged(androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeDetachedView(android.view.View)
androidx.recyclerview.widget.RecyclerView: boolean predictiveItemAnimationsEnabled()
com.atakmap.android.harrissaspr.plugin.R$color: int white
com.atakmap.android.harrissaspr.driver.UsbSerialPort
androidx.recyclerview.widget.ItemTouchHelper$Callback: boolean isLongPressDragEnabled()
androidx.recyclerview.widget.RecyclerView$ViewHolder: void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.ChildHelper$Bucket: int countOnesBefore(int)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: java.lang.Thread SerialThread
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: int access$700(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$9: HarrisSaSprDropDownReceiver$9(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver,android.content.Context,android.widget.Spinner,java.lang.String[])
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getMaxStart(int)
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: RecyclerView$SmoothScroller$Action(int,int)
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: boolean hasObservers()
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate mItemDelegate
androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()
androidx.recyclerview.widget.RecyclerView: boolean POST_UPDATES_ON_ANIMATION
androidx.recyclerview.widget.GapWorker: void buildTaskList()
com.atakmap.android.harrissaspr.plugin.R$drawable: int comabat_isf
com.atakmap.android.harrissaspr.plugin.R$color: int darker_gray
androidx.recyclerview.widget.ItemTouchHelper$Callback: int getMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.SnapHelper: void snapToTargetExistingView()
androidx.recyclerview.widget.AsyncListUtil$ViewCallback: int HINT_SCROLL_NONE
androidx.recyclerview.widget.ItemTouchHelper: void onChildViewAttachedToWindow(android.view.View)
androidx.recyclerview.widget.PagerSnapHelper: int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View)
com.atakmap.android.harrissaspr.driver.UsbSerialProber: UsbSerialProber(com.atakmap.android.harrissaspr.driver.ProbeTable)
com.atakmap.android.harrissaspr.plugin.R$drawable: int comabat_recon_marine
androidx.annotation.FontRes
androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback: int onGetChildDrawingOrder(int,int)
androidx.recyclerview.widget.AsyncListDiffer$1: androidx.recyclerview.widget.AsyncListDiffer this$0
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener mOnFlingListener
com.atakmap.android.harrissaspr.plugin.R$drawable: int weapon_rocket_antitank
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
com.atakmap.android.harrissaspr.plugin.R$drawable: int weapon_missile_launcher
com.atakmap.android.harrissaspr.driver.UsbSerialDriver
androidx.recyclerview.widget.SnapHelper: int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View)
androidx.recyclerview.widget.AsyncListDiffer$1$1: int getOldListSize()
androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper
androidx.recyclerview.widget.LinearSnapHelper: android.view.View findCenterView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$8: android.widget.EditText val$HHMP_GPS_ID
androidx.recyclerview.R$dimen: int fastscroll_margin
androidx.recyclerview.widget.RecyclerView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)
androidx.recyclerview.widget.RecyclerView$Adapter: boolean mHasStableIds
androidx.recyclerview.widget.FastScroller: int HIDE_DELAY_AFTER_VISIBLE_MS
androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean isItemRemoved()
androidx.recyclerview.widget.RecyclerView$ViewHolder: void offsetPosition(int,boolean)
com.atakmap.android.harrissaspr.driver.UsbSerialPort: android.hardware.usb.UsbEndpoint getWriteEndpoint()
androidx.recyclerview.widget.DiffUtil$PostponedUpdate: int posInOwnerList
androidx.recyclerview.widget.ChildHelper: void addView(android.view.View,boolean)
androidx.recyclerview.widget.DividerItemDecoration: int HORIZONTAL
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
androidx.recyclerview.widget.DefaultItemAnimator$5: androidx.recyclerview.widget.RecyclerView$ViewHolder val$holder
androidx.recyclerview.widget.ItemTouchHelper$3: androidx.recyclerview.widget.ItemTouchHelper this$0
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: long mCreateRunningAverageNs
androidx.recyclerview.widget.RecyclerView: void dispatchChildDetached(android.view.View)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$6: void onClick(android.view.View)
androidx.recyclerview.widget.SimpleItemAnimator: boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.RecyclerView: void resetFocusInfo()
com.atakmap.android.harrissaspr.plugin.R$layout: R$layout()
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$6$1: com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$6 this$1
androidx.recyclerview.widget.ViewBoundsCheck: int FLAG_CVS_GT_PVS
androidx.recyclerview.widget.OrientationHelper$2: int getEndPadding()
androidx.recyclerview.widget.RecyclerView$ViewHolder: int getPosition()
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$7
androidx.recyclerview.widget.ItemTouchHelper: int ACTION_MODE_IDLE_MASK
com.atakmap.android.harrissaspr.LocateMarker: void placeHhmpSelf(com.atakmap.android.maps.MapView,java.lang.String)
androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPreLayoutPosition
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate
com.atakmap.android.harrissaspr.util.SerialInputOutputManager$State
androidx.recyclerview.widget.BatchingListUpdateCallback: BatchingListUpdateCallback(androidx.recyclerview.widget.ListUpdateCallback)
androidx.recyclerview.widget.RecyclerView: void markKnownViewsInvalid()
androidx.recyclerview.widget.ItemTouchHelper: java.util.List mSwapTargets
androidx.recyclerview.widget.RecyclerView$ItemAnimator: long getAddDuration()
androidx.recyclerview.R$styleable: int RecyclerView_reverseLayout
com.atakmap.android.harrissaspr.converters.HarrisSAparser: java.lang.String RMC_string()
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: void assignCoordinateFromPadding()
androidx.recyclerview.widget.LinearLayoutManager: int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findViewByPosition(int)
com.atakmap.android.harrissaspr.plugin.R$style: int ATAKTheme
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int INVALID_LAYOUT
androidx.recyclerview.widget.RecyclerView$3: RecyclerView$3()
androidx.recyclerview.widget.RecyclerView$OnScrollListener
com.atakmap.android.harrissaspr.plugin.R$dimen: int gps_sw
androidx.recyclerview.widget.ChildHelper: ChildHelper(androidx.recyclerview.widget.ChildHelper$Callback)
androidx.recyclerview.widget.ItemTouchHelper$5: ItemTouchHelper$5(androidx.recyclerview.widget.ItemTouchHelper)
androidx.recyclerview.widget.RecyclerView: void onLayout(boolean,int,int,int,int)
androidx.recyclerview.widget.LinearSmoothScroller: int SNAP_TO_START
androidx.recyclerview.widget.DefaultItemAnimator: boolean isRunning()
androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.recyclerview.widget.RecyclerView$Recycler: boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long)
androidx.recyclerview.widget.RecyclerView: void dispatchRestoreInstanceState(android.util.SparseArray)
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_mortar
androidx.recyclerview.widget.SortedList: int add(java.lang.Object,boolean)
androidx.recyclerview.widget.SnapHelper: float MILLISECONDS_PER_INCH
androidx.recyclerview.widget.FastScroller$AnimatorListener: boolean mCanceled
androidx.recyclerview.widget.LinearLayoutManager$SavedState: boolean hasValidAnchor()
androidx.annotation.Size: long max()
com.atakmap.android.harrissaspr.plugin.R$drawable: int cs_sig_sat
com.atakmap.android.harrissaspr.IconsAdapter: android.content.Context context
androidx.recyclerview.widget.RecyclerView$6: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int)
com.atakmap.android.harrissaspr.plugin.R$string: int btnAdd
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$8: android.widget.Switch val$sprGpsSwitch
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback: void setDefaultSwipeDirs(int)
androidx.recyclerview.widget.OpReorderer: OpReorderer(androidx.recyclerview.widget.OpReorderer$Callback)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable
androidx.recyclerview.widget.FastScroller: android.animation.ValueAnimator mShowHideAnimator
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean)
androidx.recyclerview.widget.ThreadUtil$MainThreadCallback: void updateItemCount(int,int)
androidx.recyclerview.widget.SortedListAdapterCallback: void onRemoved(int,int)
androidx.recyclerview.widget.LayoutState
androidx.recyclerview.widget.ItemTouchHelper$Callback$2
androidx.recyclerview.widget.MessageThreadUtil$1: void sendMessage(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem)
com.atakmap.android.harrissaspr.util.SerialInputOutputManager$State: com.atakmap.android.harrissaspr.util.SerialInputOutputManager$State STOPPING
androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect
androidx.recyclerview.widget.RecyclerView$LayoutManager: void addViewInt(android.view.View,int,boolean)
androidx.recyclerview.widget.RecyclerView$State: int mTargetPosition
androidx.annotation.InspectableProperty$EnumEntry: java.lang.String name()
androidx.recyclerview.widget.RecyclerView$LayoutParams: int getViewLayoutPosition()
androidx.recyclerview.widget.DefaultItemAnimator: java.util.ArrayList mChangesList
androidx.recyclerview.widget.RecyclerView$LayoutManager$2: android.view.View getChildAt(int)
androidx.recyclerview.widget.SnapHelper$2: void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$10: com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver this$0
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult
androidx.recyclerview.widget.RecyclerView$Adapter: boolean hasObservers()
androidx.recyclerview.widget.RecyclerView$SmoothScroller: android.view.View mTargetView
com.atakmap.android.harrissaspr.plugin.R$drawable: int sof_csar
androidx.recyclerview.widget.ItemTouchHelper$Callback: int makeMovementFlags(int,int)
androidx.recyclerview.widget.BatchingListUpdateCallback: int TYPE_CHANGE
androidx.recyclerview.widget.RecyclerView: android.graphics.RectF mTempRectF
androidx.recyclerview.widget.AsyncListDiffer$1: java.lang.Runnable val$commitCallback
androidx.recyclerview.widget.ItemTouchHelper: void moveIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.AsyncListUtil$ViewCallback: void onDataRefresh()
androidx.recyclerview.widget.RecyclerView: int[] NESTED_SCROLLING_ATTRS
androidx.recyclerview.widget.FastScroller$AnimatorListener: void onAnimationEnd(android.animation.Animator)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int[] findLastVisibleItemPositions(int[])
androidx.recyclerview.widget.DefaultItemAnimator$4: android.view.View val$view
androidx.recyclerview.widget.AsyncListUtil$1: void recycleAllTiles()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isFocused()
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener: RecyclerView$SimpleOnItemTouchListener()
androidx.annotation.RequiresApi: int api()
com.atakmap.android.harrissaspr.plugin.R$drawable: int sea_frigate
androidx.recyclerview.widget.RecyclerView: void offsetChildrenVertical(int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setMeasuredDimensionFromChildren(int,int)
androidx.recyclerview.widget.RecyclerView$ViewHolder: int mItemViewType
com.atakmap.android.harrissaspr.plugin.R$string
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingTop()
androidx.recyclerview.widget.SortedList: java.lang.Object[] mOldData
androidx.recyclerview.widget.RecyclerView$4: androidx.recyclerview.widget.RecyclerView this$0
androidx.recyclerview.widget.RecyclerView: void initAdapterManager()
androidx.recyclerview.widget.LayoutState: int mLayoutDirection
androidx.recyclerview.widget.ChildHelper$Bucket: boolean remove(int)
androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutStateToFillStart(int,int)
com.atakmap.android.harrissaspr.converters.SprSAparser: boolean isValid()
androidx.recyclerview.widget.RecyclerView: int UNDEFINED_DURATION
androidx.recyclerview.widget.RecyclerView$OnItemTouchListener: boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)
androidx.recyclerview.widget.RecyclerView$Recycler: void bindViewToPosition(android.view.View,int)
androidx.recyclerview.widget.ChildHelper: void hideViewInternal(android.view.View)
androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable mObservable
com.atakmap.android.harrissaspr.plugin.R$drawable: int subsurf_submarine_conv
androidx.recyclerview.widget.RecyclerView: void onChildDetachedFromWindow(android.view.View)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isViewPartiallyVisible(android.view.View,boolean,boolean)
com.atakmap.android.harrissaspr.HhmpUdpService: int onStartCommand(android.content.Intent,int,int)
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: int mReadTimeout
androidx.recyclerview.widget.SortedList: SortedList(java.lang.Class,androidx.recyclerview.widget.SortedList$Callback,int)
com.atakmap.android.harrissaspr.plugin.PluginTemplateTool: android.graphics.drawable.Drawable getIcon()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void scrollToPositionWithOffset(int,int)
androidx.recyclerview.widget.ItemTouchHelper: float mInitialTouchX
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType[] values()
androidx.recyclerview.widget.DefaultItemAnimator$1: void run()
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver
androidx.recyclerview.widget.DefaultItemAnimator: java.util.ArrayList mMovesList
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: int DIRECTION_BOTTOM
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int getEndLine(int)
androidx.annotation.RawRes
com.atakmap.android.harrissaspr.driver.UsbSerialPort: boolean isOpen()
androidx.recyclerview.widget.ItemTouchHelper$4: ItemTouchHelper$4(androidx.recyclerview.widget.ItemTouchHelper,androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation,int)
androidx.recyclerview.widget.LinearSnapHelper: int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$5: android.widget.Switch val$sprGpsSwitch
com.atakmap.android.harrissaspr.plugin.R$array: int domain_list
androidx.recyclerview.widget.LinearLayoutManager: int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.ItemTouchHelper$ViewDropHandler: void prepareForDrop(android.view.View,android.view.View,int,int)
com.atakmap.android.harrissaspr.plugin.R$styleable: int RecyclerView_fastScrollEnabled
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: void onDropDownVisible(boolean)
androidx.recyclerview.widget.AdapterHelper: boolean hasPendingUpdates()
com.atakmap.android.harrissaspr.driver.ProbeTable: java.util.Map mProbeTable
androidx.recyclerview.widget.RecyclerView$LayoutManager: void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int)
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem: java.lang.Object sPoolLock
androidx.recyclerview.widget.RecyclerView$Adapter: void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)
androidx.recyclerview.widget.DefaultItemAnimator$5: void onAnimationStart(android.animation.Animator)
androidx.recyclerview.widget.DividerItemDecoration: void setDrawable(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView: boolean isAttachedToWindow()
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: boolean mAnchorLayoutFromEnd
androidx.recyclerview.widget.RecyclerView$SavedState$1: java.lang.Object[] newArray(int)
com.atakmap.android.harrissaspr.plugin.R$attr: int layoutManager
androidx.recyclerview.widget.GridLayoutManager: int[] mCachedBorders
androidx.annotation.RequiresPermission: java.lang.String[] anyOf()
androidx.recyclerview.widget.SortedListAdapterCallback: SortedListAdapterCallback(androidx.recyclerview.widget.RecyclerView$Adapter)
androidx.recyclerview.widget.RecyclerView: boolean FORCE_INVALIDATE_DISPLAY_LIST
androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayoutManager
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState mPendingSavedState
androidx.recyclerview.widget.LayoutState: android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.recyclerview.widget.RecyclerView$6: void offsetPositionsForRemovingInvisible(int,int)
com.atakmap.android.harrissaspr.converters.HarrisSAparser: java.lang.String SAheader
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: StaggeredGridLayoutManager$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: void offsetFullSpansForRemoval(int,int)
com.atakmap.android.harrissaspr.driver.UsbSerialPort: boolean getCTS()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setRecyclerView(androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.ListUpdateCallback: void onRemoved(int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: void addFullSpanItem(androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem)
androidx.recyclerview.widget.ItemTouchHelper: java.util.List mRecoverAnimations
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension: android.view.View getViewForPositionAndType(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)
androidx.recyclerview.widget.AdapterHelper$UpdateOp: java.lang.Object payload
androidx.recyclerview.widget.LinearLayoutManager: int INVALID_OFFSET
androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPosition
androidx.recyclerview.widget.AsyncListDiffer$ListListener
com.atakmap.android.harrissaspr.driver.UsbSerialPort: void setRTS(boolean)
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: int mRvStart
androidx.recyclerview.widget.RecyclerView: int[] mScrollOffset
androidx.recyclerview.widget.FastScroller: int SCROLLBAR_FULL_OPAQUE
androidx.recyclerview.widget.LinearLayoutManager$SavedState
androidx.recyclerview.widget.OrientationHelper: int getTransformedEndWithDecoration(android.view.View)
com.atakmap.android.harrissaspr.plugin.R$string: int SPR_BFT_ENABLED
androidx.recyclerview.widget.RecyclerView$LayoutParams: int getViewPosition()
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: android.util.SparseIntArray mSpanIndexCache
androidx.recyclerview.widget.AdapterHelper: int findPositionOffset(int,int)
com.atakmap.android.harrissaspr.driver.UsbSerialPort: int getPortNumber()
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: void log()
androidx.recyclerview.widget.DefaultItemAnimator$6: androidx.recyclerview.widget.DefaultItemAnimator this$0
androidx.recyclerview.widget.AsyncListDiffer: void removeListListener(androidx.recyclerview.widget.AsyncListDiffer$ListListener)
com.atakmap.android.harrissaspr.plugin.R$drawable: int cs_sig_relay
androidx.recyclerview.widget.RecyclerView: void initChildrenHelper()
androidx.recyclerview.widget.RecyclerView: int TOUCH_SLOP_DEFAULT
com.atakmap.android.harrissaspr.SprSerialService: boolean access$300(com.atakmap.android.harrissaspr.SprSerialService)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: RecyclerViewAccessibilityDelegate$ItemDelegate(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void assertNotInLayoutOrScroll(java.lang.String)
androidx.recyclerview.widget.DiffUtil$Callback: int getNewListSize()
androidx.recyclerview.widget.SortedList: void replaceAll(java.lang.Object[],boolean)
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_inf_mountain
androidx.recyclerview.widget.LinearSmoothScroller: int calculateTimeForDeceleration(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean isRunning()
androidx.recyclerview.widget.RecyclerView: void clearOldPositions()
androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_DRAGGING
androidx.recyclerview.widget.ItemTouchHelper: java.util.List findSwapTargets(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.LinearLayoutManager: boolean mLastStackFromEnd
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setAutoMeasureEnabled(boolean)
androidx.recyclerview.widget.TileList: java.lang.Object getItemAt(int)
androidx.recyclerview.widget.AsyncDifferConfig$Builder: androidx.recyclerview.widget.AsyncDifferConfig$Builder setBackgroundThreadExecutor(java.util.concurrent.Executor)
androidx.recyclerview.widget.AdapterHelper: androidx.recyclerview.widget.OpReorderer mOpReorderer
androidx.recyclerview.widget.ChildHelper: void removeAllViewsUnfiltered()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)
androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo mAnchorInfo
androidx.recyclerview.widget.RecyclerView$ItemAnimator: long mChangeDuration
androidx.recyclerview.widget.GridLayoutManager: int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.DefaultItemAnimator$4: androidx.recyclerview.widget.DefaultItemAnimator this$0
androidx.recyclerview.widget.DiffUtil$Callback: boolean areContentsTheSame(int,int)
androidx.recyclerview.widget.ViewInfoStore: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: android.os.Handler mHandler
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean mLastLayoutFromEnd
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: StaggeredGridLayoutManager$AnchorInfo(androidx.recyclerview.widget.StaggeredGridLayoutManager)
com.atakmap.android.harrissaspr.plugin.R$attr: int reverseLayout
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback: ItemTouchHelper$SimpleCallback(int,int)
androidx.recyclerview.widget.OpReorderer$Callback: void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollOffset()
androidx.recyclerview.widget.LinearLayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: void reset()
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$8: android.widget.Switch val$hhmpSwitch
androidx.recyclerview.widget.AsyncListDiffer$1$1: boolean areContentsTheSame(int,int)
androidx.recyclerview.widget.ItemTouchHelper: int LEFT
androidx.recyclerview.widget.RecyclerView$Adapter: long getItemId(int)
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo preInfo
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: void setWriteBufferSize(int)
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: void setBreak(boolean)
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: android.hardware.usb.UsbInterface mControlInterface
androidx.recyclerview.widget.AsyncListUtil$2: void loadTile(int,int)
com.atakmap.android.harrissaspr.plugin.PluginLifecycle: void onStart()
androidx.recyclerview.widget.DiffUtil$DiffResult: void dispatchUpdatesTo(androidx.recyclerview.widget.RecyclerView$Adapter)
androidx.recyclerview.widget.FastScroller$2: androidx.recyclerview.widget.FastScroller this$0
androidx.recyclerview.widget.RecyclerView$LayoutManager: int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.DiffUtil$DiffResult: androidx.recyclerview.widget.DiffUtil$PostponedUpdate removePostponedUpdate(java.util.List,int,boolean)
androidx.recyclerview.widget.LinearSnapHelper: android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.recyclerview.R$styleable: int RecyclerView_fastScrollEnabled
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$2: HarrisSaSprDropDownReceiver$2(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver,android.widget.Switch,android.content.Intent,android.content.Context)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int findLastVisibleItemPosition()
androidx.recyclerview.widget.SortedList$BatchedCallback: java.lang.Object getChangePayload(java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.ItemTouchHelper$Callback
androidx.recyclerview.widget.DefaultItemAnimator: java.util.ArrayList mRemoveAnimations
androidx.recyclerview.widget.StaggeredGridLayoutManager: void fixStartGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: int[] iconsSEA
androidx.recyclerview.widget.SortedList$Callback: boolean areItemsTheSame(java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: GridLayoutManager$LayoutParams(android.content.Context,android.util.AttributeSet)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: int[] iconsAIRMIL
androidx.recyclerview.widget.SnapHelper$1: boolean mScrolled
androidx.recyclerview.widget.RecyclerView$Adapter: boolean hasStableIds()
com.atakmap.android.harrissaspr.plugin.R$drawable: int vehicle_semi
androidx.recyclerview.widget.RecyclerView: void jumpToPositionForSmoothScroller(int)
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver this$0
com.atakmap.android.harrissaspr.plugin.R$drawable: int sea_track
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$8: android.widget.EditText val$SPR_GPS_ID
androidx.recyclerview.widget.LinearLayoutManager: void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult)
androidx.recyclerview.widget.DiffUtil$DiffResult: java.util.List mSnakes
androidx.recyclerview.widget.FastScroller: boolean isVisible()
androidx.recyclerview.widget.AsyncDifferConfig
androidx.recyclerview.widget.RecyclerView$ViewHolder: RecyclerView$ViewHolder(android.view.View)
androidx.recyclerview.widget.RecyclerView: void onRestoreInstanceState(android.os.Parcelable)
com.atakmap.android.harrissaspr.driver.UsbSerialProber: com.atakmap.android.harrissaspr.driver.ProbeTable mProbeTable
androidx.recyclerview.widget.FastScroller: void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener
androidx.annotation.RequiresPermission$Read: androidx.annotation.RequiresPermission value()
com.atakmap.android.harrissaspr.plugin.R$array: int air_mil_list
androidx.recyclerview.widget.OrientationHelper: int getDecoratedEnd(android.view.View)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition
com.atakmap.android.harrissaspr.converters.SprSAparser: byte[] reverse(byte[],int,int)
androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.atakmap.android.harrissaspr.plugin.R$style: R$style()
androidx.recyclerview.widget.AsyncDifferConfig: AsyncDifferConfig(java.util.concurrent.Executor,java.util.concurrent.Executor,androidx.recyclerview.widget.DiffUtil$ItemCallback)
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedFling(float,float,boolean)
androidx.recyclerview.widget.ViewBoundsCheck: boolean isViewWithinBoundFlags(android.view.View,int)
androidx.recyclerview.widget.RecyclerView: boolean mFirstLayoutComplete
androidx.recyclerview.widget.RecyclerView: int mEatenAccessibilityChangeFlags
androidx.recyclerview.widget.DiffUtil$Callback: java.lang.Object getChangePayload(int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int mSpanCount
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation: void cancel()
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int getDx()
androidx.recyclerview.widget.SnapHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: boolean boundsMatch()
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$8: com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver this$0
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
com.atakmap.android.harrissaspr.plugin.R$drawable: int ic_menu_plus
androidx.recyclerview.widget.ViewInfoStore: androidx.recyclerview.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long)
androidx.annotation.RequiresFeature
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: void closeInt()
androidx.recyclerview.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanIndexCache
com.atakmap.android.harrissaspr.plugin.PluginNativeLoader: void loadLibrary(java.lang.String)
androidx.recyclerview.widget.DiffUtil$DiffResult: DiffUtil$DiffResult(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper
androidx.recyclerview.widget.DefaultItemAnimator: void resetAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: void onReceive(android.content.Context,android.content.Intent)
com.atakmap.android.harrissaspr.plugin.R$string: int selfCombatID
androidx.recyclerview.widget.DefaultItemAnimator$7: android.view.ViewPropertyAnimator val$oldViewAnim
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: void writeToParcel(android.os.Parcel,int)
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.ItemTouchHelper: void releaseVelocityTracker()
com.atakmap.android.harrissaspr.plugin.R$drawable: int share
androidx.recyclerview.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean areAllStartsEqual()
androidx.recyclerview.widget.RecyclerView: android.graphics.Rect getItemDecorInsetsForChild(android.view.View)
androidx.recyclerview.R$attr: int fastScrollHorizontalThumbDrawable
androidx.recyclerview.widget.SortedList: SortedList(java.lang.Class,androidx.recyclerview.widget.SortedList$Callback)
androidx.recyclerview.widget.ThreadUtil$MainThreadCallback: void removeTile(int,int)
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_armor_track
androidx.recyclerview.widget.RecyclerView: void access$000(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: RecyclerView$ItemAnimator()
androidx.recyclerview.widget.RecyclerView$5: androidx.recyclerview.widget.RecyclerView this$0
androidx.recyclerview.R$styleable: R$styleable()
com.atakmap.android.harrissaspr.plugin.R$drawable: int cs_mp
androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildClosestToEnd()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean)
androidx.recyclerview.widget.DefaultItemAnimator$1: DefaultItemAnimator$1(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void detach()
androidx.recyclerview.widget.MessageThreadUtil$MessageQueue: androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem next()
androidx.recyclerview.widget.GapWorker: java.util.ArrayList mRecyclerViews
androidx.recyclerview.widget.TileList$Tile: java.lang.Object[] mItems
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int)
androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollExtent()
androidx.recyclerview.widget.FastScroller$AnimatorListener: void onAnimationCancel(android.animation.Animator)
com.atakmap.android.harrissaspr.plugin.R$array: int gnd_weap_list
androidx.recyclerview.widget.OrientationHelper: int getEndPadding()
com.atakmap.android.harrissaspr.plugin.R$drawable: int weapon_mortar
androidx.recyclerview.widget.RecyclerView$5: int getChildCount()
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onChildAttachedToWindow(android.view.View)
androidx.annotation.IntRange: long from()
androidx.recyclerview.widget.GridLayoutManager: void setUsingSpansToEstimateScrollbarDimensions(boolean)
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getSpanIndex(int,int)
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: int getReadTimeout()
androidx.recyclerview.widget.AsyncListDiffer$1$1: int getNewListSize()
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: int FLAG_PRE
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$11
androidx.recyclerview.widget.FastScroller$1: androidx.recyclerview.widget.FastScroller this$0
androidx.recyclerview.widget.RecyclerView: boolean DISPATCH_TEMP_DETACH
androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean isRunning()
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation: android.animation.ValueAnimator mValueAnimator
androidx.recyclerview.widget.RecyclerView$ViewFlinger
androidx.recyclerview.R$attr: int fastScrollEnabled
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: void assignPositionFromScrapList(android.view.View)
androidx.annotation.ColorInt
com.atakmap.android.harrissaspr.plugin.R$string: int HHMP_GPS_DISABLED
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: java.util.List mFullSpanItems
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup: int getSpanSize(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void resolveShouldLayoutReverse()
com.atakmap.android.harrissaspr.plugin.PluginLifecycle
androidx.recyclerview.widget.AsyncListDiffer$1: int val$runGeneration
androidx.recyclerview.widget.RecyclerView$LayoutManager$2: int getParentStart()
androidx.recyclerview.widget.MessageThreadUtil$2: androidx.recyclerview.widget.ThreadUtil$BackgroundCallback val$callback
androidx.recyclerview.widget.DividerItemDecoration: void drawHorizontal(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$ViewCacheExtension mViewCacheExtension
com.atakmap.android.harrissaspr.plugin.R$string: int MAP_ALIAS
androidx.recyclerview.widget.LinearLayoutManager: void scrollToPosition(int)
androidx.recyclerview.widget.RecyclerView$Recycler: void recycleAndClearCachedViews()
androidx.recyclerview.widget.RecyclerView: void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration)
androidx.annotation.InspectableProperty: boolean hasAttributeId()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int[] getChildRectangleOnScreenScrollAmount(android.view.View,android.graphics.Rect)
androidx.recyclerview.widget.GridLayoutManager: void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean)
com.atakmap.android.harrissaspr.SprSerialService: android.hardware.usb.UsbDeviceConnection access$102(com.atakmap.android.harrissaspr.SprSerialService,android.hardware.usb.UsbDeviceConnection)
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo mAnchorInfo
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$4: com.atakmap.android.harrissaspr.driver.UsbSerialProber val$prober
com.atakmap.android.harrissaspr.SprSerialService: int READ_WAIT_MILLIS
com.atakmap.android.harrissaspr.plugin.R$id: int tbHHMP
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.AdapterListUpdateCallback: AdapterListUpdateCallback(androidx.recyclerview.widget.RecyclerView$Adapter)
com.atakmap.android.harrissaspr.SprSerialService: android.hardware.usb.UsbDeviceConnection access$100(com.atakmap.android.harrissaspr.SprSerialService)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: int invalidateFullSpansAfter(int)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: GridLayoutManager$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
androidx.recyclerview.widget.SimpleItemAnimator: boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: RecyclerView$SmoothScroller()
com.atakmap.android.harrissaspr.SprSerialService
androidx.recyclerview.widget.StaggeredGridLayoutManager: void updateRemainingSpans(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span,int,int)
androidx.recyclerview.widget.BatchingListUpdateCallback: void onInserted(int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void setMaxRecycledViews(int,int)
androidx.recyclerview.widget.LinearLayoutManager: void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int)
androidx.recyclerview.widget.RecyclerView$Recycler: int DEFAULT_CACHE_SIZE
androidx.recyclerview.widget.TileList$Tile: boolean containsPosition(int)
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: android.util.SparseArray mScrap
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: int mOffset
com.atakmap.android.harrissaspr.SprSerialService: int onStartCommand(android.content.Intent,int,int)
androidx.annotation.NonNull
com.atakmap.android.harrissaspr.plugin.R$drawable: int fixed_utility
androidx.recyclerview.widget.LayoutState: int mItemDirection
androidx.recyclerview.widget.MessageThreadUtil$MessageQueue: MessageThreadUtil$MessageQueue()
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$6$2
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation: androidx.recyclerview.widget.RecyclerView$ViewHolder mViewHolder
androidx.recyclerview.widget.StaggeredGridLayoutManager: void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean)
androidx.recyclerview.widget.FastScroller$2: void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: java.lang.Boolean access$002(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver,java.lang.Boolean)
com.atakmap.android.harrissaspr.plugin.PluginLifecycle: void onConfigurationChanged(android.content.res.Configuration)
androidx.recyclerview.widget.ViewInfoStore: androidx.collection.LongSparseArray mOldChangedHolders
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(int,int)
com.atakmap.android.harrissaspr.plugin.R$drawable: int weapon_flame
androidx.recyclerview.widget.FastScroller: int ANIMATION_STATE_FADING_OUT
androidx.recyclerview.widget.DefaultItemAnimator$7: androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo val$changeInfo
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1: void onAnimationUpdate(android.animation.ValueAnimator)
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: void openInterface()
androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners
androidx.recyclerview.widget.LinearSmoothScroller: android.util.DisplayMetrics mDisplayMetrics
androidx.recyclerview.widget.ItemTouchHelper$1: ItemTouchHelper$1(androidx.recyclerview.widget.ItemTouchHelper)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingRight()
androidx.recyclerview.widget.MessageThreadUtil$1$1
androidx.recyclerview.widget.AsyncListDiffer
com.atakmap.android.harrissaspr.plugin.R$drawable: int new_dark_button_disabled
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean shouldMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams)
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mCoordinate
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
androidx.recyclerview.widget.SortedList$BatchedCallback: void onRemoved(int,int)
com.atakmap.android.harrissaspr.plugin.R$style: int AppBaseTheme
com.atakmap.android.harrissaspr.plugin.R$id: int btnSave
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
androidx.recyclerview.widget.LinearSnapHelper: androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()
com.atakmap.android.harrissaspr.plugin.R$id: int swBFTHHMP
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int ITEM_DIRECTION_HEAD
androidx.recyclerview.widget.RecyclerView$ViewHolder: void unScrap()
androidx.recyclerview.widget.AsyncDifferConfig$Builder: androidx.recyclerview.widget.AsyncDifferConfig build()
androidx.recyclerview.widget.AsyncListDiffer$1$2: androidx.recyclerview.widget.AsyncListDiffer$1 this$1
androidx.recyclerview.widget.AsyncListUtil$2: void log(java.lang.String,java.lang.Object[])
com.atakmap.android.harrissaspr.plugin.R$layout: int main_layout
androidx.recyclerview.widget.RecyclerView$ViewHolder: int mIsRecyclableCount
com.atakmap.android.harrissaspr.util.MonotonicClock
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$9: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int mDuration
androidx.recyclerview.widget.RecyclerView: boolean mHasFixedSize
androidx.recyclerview.widget.AsyncListDiffer$1$2: AsyncListDiffer$1$2(androidx.recyclerview.widget.AsyncListDiffer$1,androidx.recyclerview.widget.DiffUtil$DiffResult)
androidx.recyclerview.widget.RecyclerView: boolean hasPendingAdapterUpdates()
com.atakmap.android.harrissaspr.plugin.R$id: int tblLayout_spr
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ViewBoundsCheck mHorizontalBoundCheck
androidx.recyclerview.widget.RecyclerView: boolean onGenericMotionEvent(android.view.MotionEvent)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void offsetChildrenHorizontal(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: void offsetForRemoval(int,int)
androidx.recyclerview.widget.RecyclerView: long NO_ID
androidx.annotation.UiThread
androidx.recyclerview.widget.RecyclerView$LayoutParams: androidx.recyclerview.widget.RecyclerView$ViewHolder mViewHolder
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_aa_armored_tracked
androidx.recyclerview.widget.SnapHelper
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mScrollingOffset
androidx.recyclerview.widget.RecyclerView: void dispatchOnScrolled(int,int)
androidx.recyclerview.widget.ChildHelper$Bucket: long mData
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean mReverseLayout
com.atakmap.android.harrissaspr.plugin.R$drawable: int weapon_nbc
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback: int getSwipeDirs(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.LinearLayoutManager: android.graphics.PointF computeScrollVectorForPosition(int)
androidx.recyclerview.widget.GapWorker: java.lang.ThreadLocal sGapWorker
androidx.recyclerview.widget.AsyncListUtil: AsyncListUtil(java.lang.Class,int,androidx.recyclerview.widget.AsyncListUtil$DataCallback,androidx.recyclerview.widget.AsyncListUtil$ViewCallback)
com.atakmap.android.harrissaspr.driver.UsbSerialDriver: android.hardware.usb.UsbDevice getDevice()
com.atakmap.android.harrissaspr.SprSerialService: java.lang.String TAG
androidx.recyclerview.widget.FastScroller: int DRAG_X
androidx.recyclerview.R$styleable: int RecyclerView_stackFromEnd
androidx.recyclerview.widget.ChildHelper$Callback: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.recyclerview.widget.GridLayoutManager: void calculateItemBorders(int)
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void onItemRangeInserted(int,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()
com.atakmap.android.harrissaspr.plugin.R$drawable: int comabat_recon_mountain
com.atakmap.android.harrissaspr.converters.HarrisSAparser: java.lang.Boolean GeneralPass()
androidx.recyclerview.widget.LinearLayoutManager: boolean resolveIsInfinite()
androidx.recyclerview.widget.ItemTouchHelper: float mInitialTouchY
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: java.util.Map mOriginalItemDelegates
androidx.recyclerview.widget.SortedList: java.lang.Object[] mData
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void setDx(int)
androidx.recyclerview.widget.ChildHelper$Bucket: int BITS_PER_WORD
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: int mWriteTimeout
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: StaggeredGridLayoutManager$LayoutParams(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int calculateScrollDirectionForPosition(int)
androidx.recyclerview.widget.ItemTouchHelper$Callback: void onChildDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void setAddDuration(long)
androidx.recyclerview.widget.ListAdapter$1: ListAdapter$1(androidx.recyclerview.widget.ListAdapter)
androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mInsetsDirty
androidx.recyclerview.widget.GapWorker$1: int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task)
androidx.recyclerview.widget.AdapterHelper: boolean onItemRangeMoved(int,int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int findFirstVisibleItemPositionInt()
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener: void onAnimationsFinished()
androidx.annotation.InspectableProperty$FlagEntry: java.lang.String name()
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType RESOURCE_ID
androidx.recyclerview.widget.DividerItemDecoration: java.lang.String TAG
androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)
com.atakmap.android.harrissaspr.plugin.R$drawable: int sea_destroyer
com.atakmap.android.harrissaspr.plugin.PluginNativeLoader: java.lang.String ndl
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean mInChangeScrap
androidx.recyclerview.widget.GapWorker: void prefetch(long)
androidx.recyclerview.widget.RecyclerView: void removeOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener)
androidx.recyclerview.widget.GapWorker: void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.recyclerview.widget.ChildHelper: void unhide(android.view.View)
androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags
androidx.recyclerview.widget.AsyncDifferConfig$Builder: AsyncDifferConfig$Builder(androidx.recyclerview.widget.DiffUtil$ItemCallback)
androidx.recyclerview.widget.FastScroller$AnimatorUpdater
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: StaggeredGridLayoutManager$Span(androidx.recyclerview.widget.StaggeredGridLayoutManager,int)
androidx.recyclerview.widget.OrientationHelper$1: int getEnd()
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver: CdcAcmSerialDriver(android.hardware.usb.UsbDevice)
androidx.recyclerview.widget.SortedListAdapterCallback: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter
androidx.recyclerview.widget.PagerSnapHelper: PagerSnapHelper()
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: java.lang.Object mWriteBufferLock
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo
androidx.recyclerview.widget.AsyncListUtil: boolean mAllowScrollHints
androidx.recyclerview.widget.ItemTouchUIUtilImpl: ItemTouchUIUtilImpl()
androidx.recyclerview.widget.RecyclerView: void addFocusables(java.util.ArrayList,int,int)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.GapWorker$Task
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: java.lang.String UDP_STRING
androidx.recyclerview.widget.DefaultItemAnimator: android.animation.TimeInterpolator sDefaultInterpolator
androidx.recyclerview.widget.DefaultItemAnimator$4: void onAnimationStart(android.animation.Animator)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.ItemTouchUIUtilImpl: float findMaxElevation(androidx.recyclerview.widget.RecyclerView,android.view.View)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: android.view.View access$500(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver)
androidx.recyclerview.widget.DividerItemDecoration: void drawVertical(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int[] mPrefetchDistances
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_single_rocket_self
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1: androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int)
androidx.recyclerview.widget.RecyclerView: android.view.animation.Interpolator sQuinticInterpolator
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void clear()
androidx.recyclerview.widget.MessageThreadUtil$2: void updateRange(int,int,int,int,int)
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable
androidx.recyclerview.widget.AsyncListUtil$ViewCallback: int HINT_SCROLL_ASC
androidx.recyclerview.widget.DiffUtil
androidx.recyclerview.widget.RecyclerView: void pullGlows(float,float,float,float)
androidx.recyclerview.widget.AdapterHelper$Callback: void offsetPositionsForRemovingLaidOutOrNewView(int,int)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$2: android.content.Context val$context
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$3: android.widget.EditText val$HHMP_GPS_ID
androidx.recyclerview.widget.ItemTouchHelper$Callback: int DEFAULT_SWIPE_ANIMATION_DURATION
com.atakmap.android.harrissaspr.plugin.R$drawable
androidx.recyclerview.widget.DiffUtil$Snake: int y
com.atakmap.android.harrissaspr.plugin.R$drawable: int fixed_tanker
androidx.recyclerview.widget.RecyclerView: int mMaxFlingVelocity
com.atakmap.android.harrissaspr.converters.SprSAparser: java.lang.Double Latitude()
androidx.recyclerview.widget.BatchingListUpdateCallback: androidx.recyclerview.widget.ListUpdateCallback mWrapped
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onScrollStateChanged(int)
androidx.recyclerview.widget.AsyncListDiffer$1$1: boolean areItemsTheSame(int,int)
androidx.recyclerview.widget.SortedList: void replaceAllInternal(java.lang.Object[])
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: android.hardware.usb.UsbDevice getDevice()
androidx.recyclerview.widget.RecyclerView$Recycler: void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
androidx.recyclerview.widget.OrientationHelper$1: int getEndPadding()
androidx.recyclerview.widget.RecyclerView: java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE
androidx.recyclerview.widget.TileList
androidx.recyclerview.widget.DiffUtil$Callback: int getOldListSize()
com.atakmap.android.harrissaspr.plugin.R$drawable: int cs_civ_law_enforcement
androidx.recyclerview.widget.MessageThreadUtil$1: void updateItemCount(int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: int mPosition
androidx.recyclerview.widget.ItemTouchUIUtil
androidx.recyclerview.widget.DividerItemDecoration: int mOrientation
androidx.recyclerview.widget.DefaultItemAnimator$1: androidx.recyclerview.widget.DefaultItemAnimator this$0
androidx.recyclerview.widget.DefaultItemAnimator$7
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem
com.atakmap.android.harrissaspr.HhmpUdpService: java.net.DatagramSocket ds
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.ItemTouchHelper$Callback: int getMaxDragScroll(androidx.recyclerview.widget.RecyclerView)
com.atakmap.android.harrissaspr.plugin.R$id: int swBFTSPR
androidx.recyclerview.widget.ViewBoundsCheck: int FLAG_CVS_LT_PVE
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemRangeRemoved(int,int)
androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: AsyncListDiffer$MainThreadExecutor()
androidx.recyclerview.widget.RecyclerView: boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC
androidx.recyclerview.widget.OrientationHelper$2: int getDecoratedMeasurementInOther(android.view.View)
androidx.recyclerview.widget.RecyclerView$ViewHolder: int FLAG_REMOVED
androidx.recyclerview.widget.DefaultItemAnimator: void animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.atakmap.android.harrissaspr.IconsAdapter: java.lang.Object getItem(int)
androidx.recyclerview.widget.SimpleItemAnimator: SimpleItemAnimator()
androidx.recyclerview.widget.AdapterHelper: void postponeAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem: int arg4
androidx.recyclerview.widget.GapWorker: boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent)
androidx.recyclerview.widget.BatchingListUpdateCallback: int mLastEventPosition
com.atakmap.android.harrissaspr.driver.UsbSerialPort$ControlLine: com.atakmap.android.harrissaspr.driver.UsbSerialPort$ControlLine RTS
androidx.recyclerview.widget.ItemTouchHelper: int START
androidx.recyclerview.widget.LinearSmoothScroller: float mMillisPerPixel
androidx.recyclerview.widget.FastScroller: android.graphics.drawable.Drawable mHorizontalTrackDrawable
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int)
com.atakmap.android.harrissaspr.plugin.PluginTemplateTool: void onDeactivate(transapps.maps.plugin.tool.Tool$ToolCallback)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecyclerListener mRecyclerListener
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isUpdated()
com.atakmap.android.harrissaspr.driver.UsbSerialPort: int PARITY_ODD
androidx.recyclerview.widget.StaggeredGridLayoutManager$1: void run()
androidx.recyclerview.widget.DiffUtil$1: DiffUtil$1()
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: java.lang.Boolean access$402(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver,java.lang.Boolean)
androidx.recyclerview.widget.AsyncListUtil$ViewCallback: int HINT_SCROLL_DESC
androidx.recyclerview.widget.DiffUtil$DiffResult: int[] mNewItemStatuses
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int mCachedStart
androidx.recyclerview.widget.RecyclerView$ViewHolder: int getLayoutPosition()
androidx.recyclerview.widget.SnapHelper$2
androidx.recyclerview.widget.ItemTouchHelper$Callback: void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float)
androidx.recyclerview.widget.MessageThreadUtil$2: void sendMessage(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean mSmoothScrollbarEnabled
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getWidthMode()
androidx.recyclerview.widget.RecyclerView$Recycler: void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.atakmap.android.harrissaspr.SprSerialService$1: com.atakmap.android.harrissaspr.SprSerialService this$0
androidx.recyclerview.widget.AdapterHelper: boolean onItemRangeRemoved(int,int)
com.atakmap.android.harrissaspr.plugin.R$drawable: int comabat_recon
androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: void setWriteTimeout(int)
androidx.recyclerview.widget.RecyclerView: void onSizeChanged(int,int,int,int)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$4: com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver this$0
androidx.recyclerview.widget.MessageThreadUtil$1: android.os.Handler mMainThreadHandler
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback: int getMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void instantScrollToPosition(int)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean isPendingInitialRun()
androidx.recyclerview.widget.LayoutState: int LAYOUT_END
androidx.recyclerview.widget.LinearSmoothScroller: int SNAP_TO_END
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: android.view.View nextViewFromScrapList()
androidx.recyclerview.widget.PagerSnapHelper
com.atakmap.android.harrissaspr.driver.UsbSerialProber: com.atakmap.android.harrissaspr.driver.ProbeTable getDefaultProbeTable()
com.atakmap.android.harrissaspr.HhmpUdpService: boolean access$100(com.atakmap.android.harrissaspr.HhmpUdpService)
androidx.recyclerview.widget.SnapHelper$1: void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.recyclerview.widget.ViewInfoStore: void addToPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo: int fromY
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: StaggeredGridLayoutManager$SavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState)
androidx.recyclerview.widget.DefaultItemAnimator$6: int val$deltaY
androidx.recyclerview.widget.ItemTouchHelper: void addChildDrawingOrderCallback()
androidx.recyclerview.widget.GapWorker$1
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: int describeContents()
androidx.recyclerview.widget.LinearSnapHelper
androidx.recyclerview.widget.RecyclerView: void clearOnScrollListeners()
androidx.recyclerview.widget.ChildHelper$Callback: void removeViewAt(int)
com.atakmap.android.harrissaspr.SprSerialService: com.atakmap.android.harrissaspr.driver.UsbSerialPort access$200(com.atakmap.android.harrissaspr.SprSerialService)
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: void assignCoordinateFromPadding(int)
androidx.recyclerview.widget.FastScroller: void setState(int)
androidx.recyclerview.widget.DiffUtil$DiffResult: boolean findMatchingItem(int,int,int,boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View)
androidx.recyclerview.widget.ChildHelper: int getChildCount()
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension
androidx.recyclerview.widget.RecyclerView$LayoutParams: RecyclerView$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_SETTLING
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: java.lang.Boolean hhmpSw
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: java.nio.ByteBuffer mReadBuffer
com.atakmap.android.harrissaspr.plugin.R$drawable: int weapon_rocket_launcher_multiple
androidx.recyclerview.widget.RecyclerView$OnFlingListener: RecyclerView$OnFlingListener()
androidx.recyclerview.widget.RecyclerView$ItemAnimator: int FLAG_CHANGED
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener
com.atakmap.android.harrissaspr.driver.UsbSerialPort: boolean getDTR()
androidx.recyclerview.widget.PagerSnapHelper: androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.atakmap.android.harrissaspr.plugin.PluginLifecycle: void onCreate(android.app.Activity,transapps.mapi.MapView)
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation: void onAnimationEnd(android.animation.Animator)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$11: com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver this$0
com.atakmap.android.harrissaspr.plugin.PluginLifecycle: com.atakmap.android.maps.MapView mapView
androidx.recyclerview.widget.DefaultItemAnimator$6: android.view.ViewPropertyAnimator val$animation
androidx.recyclerview.widget.RecyclerView: void cancelScroll()
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView$State: int mRemainingScrollHorizontal
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getSpanSize(int)
androidx.recyclerview.widget.RecyclerView: boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.LinearLayoutManager$SavedState: int describeContents()
androidx.recyclerview.widget.MessageThreadUtil$2: MessageThreadUtil$2(androidx.recyclerview.widget.MessageThreadUtil,androidx.recyclerview.widget.ThreadUtil$BackgroundCallback)
androidx.recyclerview.widget.DefaultItemAnimator$2
androidx.recyclerview.widget.GapWorker
androidx.recyclerview.widget.OrientationHelper$1: int getMode()
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: java.lang.Object mWriteBufferLock
androidx.recyclerview.widget.RecyclerView: int mScrollPointerId
androidx.recyclerview.widget.RecyclerView: boolean findInterceptingOnItemTouchListener(android.view.MotionEvent)
com.atakmap.android.harrissaspr.driver.UsbSerialPort: int DATABITS_5
androidx.recyclerview.widget.LinearSmoothScroller: float MILLISECONDS_PER_INCH
androidx.recyclerview.widget.FastScroller: int[] mVerticalRange
androidx.recyclerview.widget.AdapterHelper$Callback: void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
androidx.recyclerview.widget.RecyclerView$State: int mDeletedInvisibleItemCountSincePreviousLayout
androidx.annotation.Dimension: int SP
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation: void onAnimationRepeat(android.animation.Animator)
androidx.recyclerview.widget.FastScroller: void drawHorizontalScrollbar(android.graphics.Canvas)
androidx.recyclerview.widget.AsyncListDiffer: androidx.recyclerview.widget.AsyncDifferConfig mConfig
com.atakmap.android.harrissaspr.plugin.R$drawable: int rotor_attack
androidx.recyclerview.R
androidx.recyclerview.widget.RecyclerView$Recycler: java.util.List getScrapList()
androidx.recyclerview.widget.RecyclerView$State: int mLayoutStep
androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: StaggeredGridLayoutManager$LazySpanLookup()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setMeasuredDimension(int,int)
androidx.recyclerview.widget.MessageThreadUtil$2: java.lang.Runnable mBackgroundRunnable
androidx.recyclerview.widget.RecyclerView$LayoutManager$1
androidx.recyclerview.R$dimen
androidx.recyclerview.widget.RecyclerView$ViewHolder: void setIsRecyclable(boolean)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$6$1
androidx.recyclerview.widget.ItemTouchHelper: float mMaxSwipeVelocity
androidx.recyclerview.widget.LinearSmoothScroller: int clampApplyScroll(int,int)
androidx.recyclerview.widget.RecyclerView$RecyclerListener: void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.RecyclerView$Recycler: android.view.View getScrapViewAt(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean mLastLayoutRTL
androidx.recyclerview.widget.RecyclerView: int MAX_SCROLL_DURATION
androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener: boolean onDown(android.view.MotionEvent)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: StaggeredGridLayoutManager$SavedState(android.os.Parcel)
androidx.recyclerview.widget.SortedList: boolean remove(java.lang.Object,boolean)
androidx.recyclerview.widget.SimpleItemAnimator: void onMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.GridLayoutManager: int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: int[] mGapPerSpan
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: RecyclerView$RecyclerViewDataObserver(androidx.recyclerview.widget.RecyclerView)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$6$1: void onNothingSelected(android.widget.AdapterView)
androidx.recyclerview.widget.ItemTouchHelper$Callback: int getBoundingBoxMargin()
androidx.recyclerview.widget.RecyclerView: boolean mAdapterUpdateDuringMeasure
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation: void onAnimationCancel(android.animation.Animator)
androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List mUnmodifiedPayloads
androidx.recyclerview.widget.RecyclerView$Recycler: void setViewCacheSize(int)
androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean)
androidx.recyclerview.widget.TileList: TileList(int)
androidx.recyclerview.widget.FastScroller$2
com.atakmap.android.harrissaspr.plugin.R$drawable: int weapon_rifle
androidx.recyclerview.widget.RecyclerView: void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.RecyclerView$SavedState$1: RecyclerView$SavedState$1()
androidx.annotation.StyleableRes
com.atakmap.android.harrissaspr.converters.HarrisSAparser: java.lang.String SA_end()
androidx.recyclerview.widget.GapWorker$Task: void clear()
androidx.recyclerview.widget.RecyclerView: void removeItemDecorationAt(int)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$12: void onClick(android.view.View)
com.atakmap.android.harrissaspr.plugin.R$dimen: int item_touch_helper_swipe_escape_max_velocity
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
com.atakmap.android.harrissaspr.plugin.R$array: int sof_list
androidx.recyclerview.widget.LinearLayoutManager: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.recyclerview.widget.RecyclerView$ViewHolder: int FLAG_ADAPTER_POSITION_UNKNOWN
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getFirstChildPosition()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isMeasurementUpToDate(int,int,int)
androidx.recyclerview.widget.RecyclerView: void startInterceptRequestLayout()
com.atakmap.android.harrissaspr.converters.HarrisSAparser: java.lang.String SA_header()
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: androidx.recyclerview.widget.RecyclerView this$0
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: int GET_LINE_CODING
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1: androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel)
androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker
androidx.recyclerview.widget.RecyclerView$LayoutManager: int mHeightMode
androidx.recyclerview.widget.LinearSmoothScroller: int calculateDyToMakeVisible(android.view.View,int)
androidx.recyclerview.widget.RecyclerView: void releaseGlows()
androidx.recyclerview.widget.SortedList$BatchedCallback: void onInserted(int,int)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$8: android.content.Intent val$startSprServiceIntent
androidx.recyclerview.widget.FastScroller: void onRequestDisallowInterceptTouchEvent(boolean)
androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long)
com.atakmap.android.harrissaspr.converters.HarrisSAparser: void init_sa(java.lang.String)
com.atakmap.android.harrissaspr.driver.UsbSerialPort: void setBreak(boolean)
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mFocusable
androidx.recyclerview.widget.ItemTouchHelper$Callback: androidx.recyclerview.widget.ItemTouchUIUtil getDefaultUIUtil()
com.atakmap.android.harrissaspr.HarrisSaSprMapComponent: com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver ddr
androidx.recyclerview.widget.SortedList$Callback: java.lang.Object getChangePayload(java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.DiffUtil$DiffResult: void findAddition(int,int,int)
androidx.recyclerview.widget.ItemTouchHelper: float mDy
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$10: HarrisSaSprDropDownReceiver$10(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver,android.widget.TableLayout,android.widget.TableRow)
com.atakmap.android.harrissaspr.plugin.R$drawable: int cs_com_ops
androidx.recyclerview.widget.SortedList: void replaceAll(java.lang.Object[])
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void setInterpolator(android.view.animation.Interpolator)
androidx.recyclerview.widget.ItemTouchHelper: boolean hitTest(android.view.View,float,float,float,float)
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation: float mTargetY
androidx.recyclerview.widget.RecyclerView$ViewHolder: void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.SortedList: int add(java.lang.Object)
androidx.recyclerview.widget.ViewBoundsCheck: int LT
androidx.recyclerview.widget.GridLayoutManager: int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.OrientationHelper: int getEndAfterPadding()
androidx.recyclerview.widget.AsyncListDiffer: java.util.List mListeners
androidx.recyclerview.widget.RecyclerView$1: void run()
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean hasAnyOfTheFlags(int)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: int getChildPosition(android.view.View)
com.atakmap.android.harrissaspr.plugin.PluginTemplateTool: PluginTemplateTool(android.content.Context)
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: void onChanged()
androidx.recyclerview.widget.LinearLayoutManager: int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getItemCount()
com.atakmap.android.harrissaspr.util.SerialInputOutputManager$State: com.atakmap.android.harrissaspr.util.SerialInputOutputManager$State[] values()
com.atakmap.android.harrissaspr.plugin.R$drawable: int vehicle_tank
androidx.recyclerview.widget.PagerSnapHelper: android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.recyclerview.widget.ChildHelper: java.lang.String toString()
com.atakmap.android.harrissaspr.HhmpUdpService$1: void run()
androidx.recyclerview.widget.LinearLayoutManager: int mOrientation
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$4: void onCheckedChanged(android.widget.CompoundButton,boolean)
androidx.recyclerview.widget.RecyclerView: boolean access$200(androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean)
androidx.recyclerview.widget.OrientationHelper$2: int getEndAfterPadding()
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1: java.lang.Object[] newArray(int)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: int FLAG_REMOVED
androidx.recyclerview.widget.ItemTouchHelper$Callback: void onSelectedChanged(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
androidx.recyclerview.widget.LinearLayoutManager: boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
androidx.recyclerview.widget.SnapHelper$2: float calculateSpeedPerPixel(android.util.DisplayMetrics)
androidx.recyclerview.widget.ItemTouchHelper$Callback: android.view.animation.Interpolator sDragViewScrollCapInterpolator
androidx.recyclerview.widget.ItemTouchHelper: int ACTION_STATE_DRAG
androidx.recyclerview.widget.DiffUtil: java.util.Comparator SNAKE_COMPARATOR
com.atakmap.android.harrissaspr.plugin.R$attr: R$attr()
androidx.recyclerview.widget.RecyclerView: void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.atakmap.android.harrissaspr.plugin.R$drawable: int rotor_medevac
androidx.recyclerview.widget.AdapterHelper: int POSITION_TYPE_INVISIBLE
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
androidx.recyclerview.widget.AdapterHelper: boolean hasUpdates()
androidx.recyclerview.widget.OrientationHelper$2: int getModeInOther()
com.atakmap.android.harrissaspr.plugin.R$drawable: int vehicle_armor_css
androidx.recyclerview.widget.RecyclerView: void onPointerUp(android.view.MotionEvent)
androidx.recyclerview.widget.DiffUtil$DiffResult: void dispatchUpdatesTo(androidx.recyclerview.widget.ListUpdateCallback)
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: int DEFAULT_WRITE_BUFFER_SIZE
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: int mRvEnd
androidx.recyclerview.widget.PagerSnapHelper: androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.atakmap.android.harrissaspr.driver.UsbSerialPort: void setParameters(int,int,int,int)
androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void dispatchAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation: void setDuration(long)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$11: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)
androidx.recyclerview.widget.FastScroller: int[] getHorizontalRange()
androidx.recyclerview.widget.AsyncListDiffer$1
androidx.recyclerview.widget.SortedList$Callback: int compare(java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void assignCoordinateFromPadding()
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: int sendAcmControlMessage(int,int,byte[])
androidx.recyclerview.widget.RecyclerView$Adapter: void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setMeasureSpecs(int,int)
androidx.recyclerview.widget.AsyncListUtil$1: boolean isRequestedGeneration(int)
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation: void setFraction(float)
androidx.recyclerview.widget.ViewInfoStore: androidx.collection.SimpleArrayMap mLayoutHolderMap
androidx.recyclerview.widget.RecyclerView$ViewHolder: int PENDING_ACCESSIBILITY_STATE_NOT_SET
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$11: android.content.Context val$context
androidx.recyclerview.widget.RecyclerView$Adapter: void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
androidx.recyclerview.widget.RecyclerView$LayoutParams: int getViewAdapterPosition()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mPrefetchMaxObservedInInitialPrefetch
androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollRange()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isAutoMeasureEnabled()
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: boolean mChanged
androidx.recyclerview.widget.RecyclerView$ViewHolder: void createPayloadsIfNeeded()
androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowedHolder
androidx.recyclerview.widget.ChildHelper$Bucket: java.lang.String toString()
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: java.lang.String getSerial()
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getItemViewType(android.view.View)
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: void notifyItemRangeChanged(int,int,java.lang.Object)
com.atakmap.android.harrissaspr.plugin.R$string: int SPR_GPS_DISABLED
androidx.recyclerview.widget.SortedList: void addAll(java.lang.Object[])
androidx.annotation.IntRange: long to()
androidx.recyclerview.widget.DiffUtil$DiffResult: int FLAG_MOVED_CHANGED
com.atakmap.android.harrissaspr.driver.UsbSerialDriver: java.util.List getPorts()
androidx.recyclerview.widget.AdapterListUpdateCallback: void onInserted(int,int)
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: boolean mCacheSpanIndices
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int findFirstPartiallyVisibleItemPosition()
androidx.recyclerview.widget.AsyncListUtil$DataCallback: int refreshData()
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope TESTS
androidx.recyclerview.widget.StaggeredGridLayoutManager: int mPendingScrollPositionOffset
androidx.recyclerview.widget.OrientationHelper: int getStartAfterPadding()
androidx.recyclerview.widget.RecyclerView: void absorbGlows(int,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setItemPrefetchEnabled(boolean)
androidx.recyclerview.widget.AsyncListUtil: boolean DEBUG
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean mShouldReverseLayout
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_SCROLL_TAG
androidx.recyclerview.widget.DefaultItemAnimator
androidx.recyclerview.widget.RecyclerView$Adapter: void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: int mGapDir
androidx.recyclerview.widget.RecyclerView$SavedState$1: androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed
androidx.recyclerview.widget.RecyclerView$LayoutManager$2: RecyclerView$LayoutManager$2(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.recyclerview.widget.ItemTouchHelper: androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)
androidx.recyclerview.widget.RecyclerView$5: void onEnteredHiddenState(android.view.View)
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: java.lang.Object mReadBufferLock
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: RecyclerView$AdapterDataObserver()
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags
androidx.recyclerview.widget.RecyclerView$SavedState: void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState)
androidx.recyclerview.widget.RecyclerView$Recycler: void offsetPositionRecordsForMove(int,int)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: void onDropDownSizeChanged(double,double)
androidx.recyclerview.widget.GridLayoutManager: void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findReferenceChildClosestToEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.RecyclerView$LayoutManager$2
com.atakmap.android.harrissaspr.plugin.R$drawable: int comabat_missile_ss
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: boolean getDTR()
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: int FLAG_APPEAR
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: long mBindRunningAverageNs
androidx.recyclerview.widget.FastScroller: android.graphics.drawable.Drawable getHorizontalThumbDrawable()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: void setDtrRts()
com.atakmap.android.harrissaspr.plugin.R$id: int icon
androidx.annotation.FloatRange: double from()
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.LinearSnapHelper: float INVALID_DISTANCE
androidx.recyclerview.widget.RecyclerView: void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect)
androidx.recyclerview.widget.OpReorderer: void swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp)
androidx.recyclerview.widget.ChildHelper: androidx.recyclerview.widget.ChildHelper$Bucket mBucket
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: int SET_LINE_CODING
androidx.recyclerview.widget.RecyclerView: boolean isNestedScrollingEnabled()
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: RecyclerView$RecycledViewPool$ScrapData()
androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int)
androidx.recyclerview.widget.RecyclerView: void saveFocusInfo()
com.atakmap.android.harrissaspr.SprSerialService: void onCreate()
androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow
androidx.recyclerview.widget.RecyclerView: int mInitialTouchX
androidx.recyclerview.widget.ChildHelper
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean supportsPredictiveItemAnimations()
androidx.recyclerview.widget.RecyclerView: void offsetChildrenHorizontal(int)
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void runIfNecessary(androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation: int mActionState
androidx.recyclerview.widget.RecyclerView: void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean)
androidx.recyclerview.widget.RecyclerView: int VERTICAL
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: androidx.recyclerview.widget.StaggeredGridLayoutManager this$0
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: int FLAG_POST
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean canScrollHorizontally()
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean isLayoutRTL()
androidx.recyclerview.widget.FastScroller$AnimatorUpdater: androidx.recyclerview.widget.FastScroller this$0
androidx.recyclerview.widget.DefaultItemAnimator: boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$12: com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver this$0
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$3: com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver this$0
androidx.recyclerview.widget.OrientationHelper$1: int getDecoratedEnd(android.view.View)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.recyclerview.widget.DefaultItemAnimator$1: java.util.ArrayList val$moves
androidx.recyclerview.widget.LinearLayoutManager: int findLastVisibleItemPosition()
androidx.recyclerview.widget.ItemTouchHelper$Callback: boolean hasDragFlag(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.LinearLayoutManager: void scrollToPositionWithOffset(int,int)
androidx.recyclerview.widget.ViewInfoStore: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.DefaultItemAnimator: void endAnimations()
com.atakmap.android.harrissaspr.LocateMarker: void placeSprSelf(com.atakmap.android.maps.MapView,byte[])
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean wasReturnedFromScrap()
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: int getWriteTimeout()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int HORIZONTAL
androidx.recyclerview.widget.GridLayoutManager: void setMeasuredDimension(android.graphics.Rect,int,int)
com.atakmap.android.harrissaspr.plugin.R$drawable: int weapon_lmg
com.atakmap.android.harrissaspr.plugin.R$drawable: int sof_naval
androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)
com.atakmap.android.harrissaspr.plugin.R$drawable: int weapon_anti_tank_gun
androidx.recyclerview.widget.AsyncListUtil$1: void addTile(int,androidx.recyclerview.widget.TileList$Tile)
com.atakmap.android.harrissaspr.driver.UsbSerialPort: int DATABITS_6
androidx.recyclerview.widget.RecyclerView$State: int mFocusedSubChildId
com.atakmap.android.harrissaspr.IconsAdapter: java.lang.String[] units
androidx.recyclerview.widget.RecyclerView$ItemAnimator: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$10: android.widget.TableLayout val$t1
androidx.recyclerview.widget.RecyclerView$LayoutManager: void detachAndScrapViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.annotation.TransitionRes
com.atakmap.android.harrissaspr.plugin.R$attr: int recyclerViewStyle
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: boolean mLayoutFromEnd
androidx.annotation.InspectableProperty$ValueType: InspectableProperty$ValueType(java.lang.String,int)
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanIndex(int,int)
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType INFERRED
androidx.recyclerview.widget.ItemTouchHelper: void stopGestureDetection()
com.atakmap.android.harrissaspr.converters.HarrisSAparser: java.lang.String RMCstring
androidx.recyclerview.widget.StaggeredGridLayoutManager: int GAP_HANDLING_MOVE_ITEMS_BETWEEN_SPANS
androidx.recyclerview.widget.MessageThreadUtil: androidx.recyclerview.widget.ThreadUtil$MainThreadCallback getMainThreadProxy(androidx.recyclerview.widget.ThreadUtil$MainThreadCallback)
androidx.recyclerview.widget.MessageThreadUtil$2$1: void run()
androidx.annotation.PluralsRes
com.atakmap.android.harrissaspr.driver.UsbId: int RNDIS
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onScrollStateChanged(int)
androidx.recyclerview.widget.FastScroller: int ANIMATION_STATE_FADING_IN
androidx.annotation.RestrictTo
androidx.recyclerview.widget.RecyclerView$State
androidx.recyclerview.widget.TileList$Tile: int mItemCount
androidx.annotation.Px
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: int mControlIndex
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort
androidx.recyclerview.widget.DefaultItemAnimator: boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.ItemTouchHelper: int ANIMATION_TYPE_DRAG
androidx.recyclerview.widget.BatchingListUpdateCallback: java.lang.Object mLastEventPayload
androidx.recyclerview.widget.LinearLayoutManager
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void stop()
androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener: void doNotReactToLongPress()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter)
androidx.annotation.RequiresPermission
com.atakmap.android.harrissaspr.plugin.R$styleable: int RecyclerView_android_orientation
androidx.recyclerview.widget.DiffUtil$Snake: int size
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: android.view.View templateView
androidx.recyclerview.widget.OrientationHelper: int HORIZONTAL
androidx.recyclerview.widget.RecyclerView: void requestChildFocus(android.view.View,android.view.View)
androidx.recyclerview.widget.LinearLayoutManager: void setSmoothScrollbarEnabled(boolean)
androidx.recyclerview.widget.AsyncListUtil$DataCallback
androidx.recyclerview.widget.SortedList$BatchedCallback: void onMoved(int,int)
androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout
androidx.recyclerview.widget.GridLayoutManager: int getSpanCount()
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: void setSpanIndexCacheEnabled(boolean)
androidx.recyclerview.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanSizeCache
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl
androidx.recyclerview.widget.GridLayoutManager: void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int)
androidx.recyclerview.widget.ItemTouchHelper: android.graphics.Rect mTmpRect
androidx.recyclerview.widget.ChildHelper$Callback: int getChildCount()
com.atakmap.android.harrissaspr.plugin.R$styleable: int RecyclerView_fastScrollVerticalThumbDrawable
androidx.recyclerview.widget.ListAdapter: void onCurrentListChanged(java.util.List,java.util.List)
androidx.recyclerview.widget.RecyclerView$State: boolean didStructureChange()
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
androidx.recyclerview.widget.FastScroller: android.graphics.drawable.Drawable mVerticalTrackDrawable
androidx.recyclerview.widget.RecyclerView$LayoutManager: void ignoreView(android.view.View)
androidx.recyclerview.widget.RecyclerView$ViewHolder: int mOldPosition
com.atakmap.android.harrissaspr.plugin.R$style: int ATAKEditText
androidx.recyclerview.widget.AsyncDifferConfig: androidx.recyclerview.widget.DiffUtil$ItemCallback getDiffCallback()
androidx.recyclerview.widget.ThreadUtil: androidx.recyclerview.widget.ThreadUtil$BackgroundCallback getBackgroundProxy(androidx.recyclerview.widget.ThreadUtil$BackgroundCallback)
androidx.recyclerview.widget.RecyclerView: boolean isPreferredNextFocus(android.view.View,android.view.View,int)
androidx.recyclerview.widget.ViewInfoStore$ProcessCallback: void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.recyclerview.widget.RecyclerView: int getScrollState()
androidx.recyclerview.widget.SortedList$Callback: void onChanged(int,int,java.lang.Object)
androidx.recyclerview.widget.SortedList: void addAll(java.util.Collection)
androidx.recyclerview.widget.BatchingListUpdateCallback: int mLastEventCount
androidx.annotation.StringDef: java.lang.String[] value()
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isAttachedToTransitionOverlay()
androidx.recyclerview.widget.ViewBoundsCheck: int FLAG_CVS_LT_PVS
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: int getSpan(int)
androidx.recyclerview.widget.GridLayoutManager: int DEFAULT_SPAN_COUNT
androidx.recyclerview.widget.DiffUtil$1: int compare(androidx.recyclerview.widget.DiffUtil$Snake,androidx.recyclerview.widget.DiffUtil$Snake)
androidx.recyclerview.widget.FastScroller: int ANIMATION_STATE_IN
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onStart()
com.atakmap.android.harrissaspr.IconsAdapter
androidx.recyclerview.widget.ItemTouchHelper$Callback: void onChildDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: GridLayoutManager$LayoutParams(int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: void setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span)
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: java.util.EnumSet getSupportedControlLines()
androidx.recyclerview.widget.LinearLayoutManager: boolean getStackFromEnd()
androidx.recyclerview.widget.LinearLayoutManager: int findFirstVisibleItemPosition()
androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding
androidx.recyclerview.widget.DiffUtil$DiffResult: void dispatchRemovals(java.util.List,androidx.recyclerview.widget.ListUpdateCallback,int,int,int)
com.atakmap.android.harrissaspr.plugin.R$drawable: int fixed_trainer
androidx.recyclerview.widget.RecyclerView$Recycler: java.util.ArrayList mAttachedScrap
androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener
com.atakmap.android.harrissaspr.plugin.R$styleable: R$styleable()
androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List getUnmodifiedPayloads()
androidx.recyclerview.widget.RecyclerView$Recycler: void quickRecycleScrapView(android.view.View)
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: void drainCache()
com.atakmap.android.harrissaspr.HarrisSaSprMapComponent: HarrisSaSprMapComponent()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: void offsetFullSpansForAddition(int,int)
androidx.recyclerview.widget.LinearLayoutManager: void onRestoreInstanceState(android.os.Parcelable)
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: java.lang.String TAG
androidx.recyclerview.widget.GridLayoutManager$LayoutParams
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void onItemRangeChanged(int,int,java.lang.Object)
com.atakmap.android.harrissaspr.plugin.R$string: int app_name
androidx.recyclerview.widget.StaggeredGridLayoutManager$1
androidx.recyclerview.widget.RecyclerView$ViewHolder: void saveOldPosition()
androidx.recyclerview.widget.LinearLayoutManager: void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
androidx.recyclerview.widget.RecyclerView: void onDetachedFromWindow()
androidx.recyclerview.widget.BatchingListUpdateCallback: int mLastEventType
com.atakmap.android.harrissaspr.driver.UsbSerialPort$ControlLine: com.atakmap.android.harrissaspr.driver.UsbSerialPort$ControlLine CTS
androidx.recyclerview.widget.OrientationHelper: int getTotalSpace()
com.atakmap.android.harrissaspr.plugin.R$drawable: int fixed_jammer
com.atakmap.android.harrissaspr.plugin.R$string: int enableBFT
androidx.recyclerview.widget.AsyncListUtil$1: void removeTile(int,int)
androidx.recyclerview.widget.AsyncListDiffer$1: void run()
androidx.recyclerview.widget.RecyclerView$Adapter: void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
androidx.recyclerview.widget.LinearLayoutManager: void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int)
androidx.recyclerview.widget.AsyncListUtil$2: void recycleTile(androidx.recyclerview.widget.TileList$Tile)
com.atakmap.android.harrissaspr.plugin.PluginTemplateTool: java.lang.String getShortDescription()
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int INVALID_LINE
androidx.recyclerview.widget.RecyclerView: void ensureTopGlow()
androidx.recyclerview.widget.RecyclerView$3: float getInterpolation(float)
androidx.recyclerview.widget.LinearLayoutManager: boolean getReverseLayout()
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: void run()
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: java.lang.Boolean sprGps
androidx.recyclerview.widget.ViewBoundsCheck: ViewBoundsCheck(androidx.recyclerview.widget.ViewBoundsCheck$Callback)
androidx.recyclerview.widget.AsyncDifferConfig$Builder: java.util.concurrent.Executor sDiffExecutor
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: int[] mData
androidx.recyclerview.widget.ItemTouchHelper: java.util.List mDistances
com.atakmap.android.harrissaspr.plugin.R$array: int gnd_unt_cbt_list
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: boolean willBindInTime(int,long,long)
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver: android.hardware.usb.UsbDevice getDevice()
androidx.recyclerview.widget.SortedList$BatchedCallback: androidx.recyclerview.widget.BatchingListUpdateCallback mBatchingListUpdateCallback
com.atakmap.android.harrissaspr.plugin.R$drawable: int vehicle_apc_recovery
androidx.recyclerview.widget.GridLayoutManager: int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int)
androidx.annotation.VisibleForTesting: int otherwise()
androidx.recyclerview.widget.BatchingListUpdateCallback
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ViewBoundsCheck mVerticalBoundCheck
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanGroupIndexCache()
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: androidx.recyclerview.widget.RecyclerView mRecyclerView
androidx.annotation.InterpolatorRes
com.atakmap.android.harrissaspr.plugin.R$drawable: int rotor_transport
androidx.recyclerview.widget.LinearLayoutManager: boolean mReverseLayout
androidx.recyclerview.widget.RecyclerView$ViewHolder: int FLAG_NOT_RECYCLABLE
androidx.annotation.MainThread
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.SimpleItemAnimator: void onChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
com.atakmap.android.harrissaspr.plugin.R$id: int tblLayout_hhmp
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet,int)
androidx.recyclerview.widget.DiffUtil$Callback: boolean areItemsTheSame(int,int)
androidx.recyclerview.widget.RecyclerView$SmoothScroller
androidx.recyclerview.widget.ListAdapter$1
com.atakmap.android.harrissaspr.plugin.R$array: int sub_sfc_list
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: int hhmp_count
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: int sizeForPosition(int)
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
androidx.recyclerview.widget.DefaultItemAnimator: boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: int forceInvalidateAfter(int)
androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean isViewInvalid()
androidx.recyclerview.widget.ItemTouchHelper: void checkSelectForSwipe(int,android.view.MotionEvent,int)
com.atakmap.android.harrissaspr.driver.UsbId: UsbId()
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$10: android.widget.TableRow val$tr_head
com.atakmap.android.harrissaspr.IconsAdapter: int getCount()
androidx.recyclerview.widget.FastScroller: void cancelHide()
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_aa_armored_wheeled
androidx.recyclerview.widget.DividerItemDecoration: int[] ATTRS
androidx.recyclerview.widget.RecyclerView$ViewHolder: void clearOldPosition()
androidx.recyclerview.widget.ItemTouchHelper: ItemTouchHelper(androidx.recyclerview.widget.ItemTouchHelper$Callback)
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: int DIRECTION_RIGHT
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[])
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: boolean getCD()
com.atakmap.android.harrissaspr.plugin.R$drawable: int sea_antisurface
androidx.recyclerview.widget.GridLayoutManager: void setSpanCount(int)
androidx.recyclerview.widget.ItemTouchHelper$2
androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int)
androidx.recyclerview.widget.GapWorker: void run()
androidx.recyclerview.widget.FastScroller: void verticalScrollTo(float)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: java.lang.String access$800(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver)
androidx.annotation.CheckResult
androidx.recyclerview.widget.RecyclerView$ViewHolder: int getItemViewType()
androidx.recyclerview.widget.ChildHelper$Bucket: long LAST_BIT
androidx.recyclerview.widget.SnapHelper: android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.recyclerview.widget.SimpleItemAnimator: void setSupportsChangeAnimations(boolean)
androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.RecyclerView: void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
androidx.recyclerview.widget.AsyncListUtil$2: void requestTiles(int,int,int,boolean)
androidx.recyclerview.widget.RecyclerView$OnItemTouchListener: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
androidx.recyclerview.widget.AsyncListDiffer$1$1: androidx.recyclerview.widget.AsyncListDiffer$1 this$1
com.atakmap.android.harrissaspr.plugin.BuildConfig
androidx.recyclerview.widget.OrientationHelper$1: int getEndAfterPadding()
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_inf_naval
com.atakmap.android.harrissaspr.plugin.R$array: R$array()
androidx.recyclerview.widget.RecyclerView$Recycler: void markKnownViewsInvalid()
com.atakmap.android.harrissaspr.converters.HarrisSAparser: java.lang.Double Latitude()
androidx.recyclerview.widget.LinearLayoutManager$SavedState: int mAnchorOffset
androidx.recyclerview.widget.AdapterHelper: void dispatchFirstPassAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp,int)
androidx.recyclerview.widget.RecyclerView: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.atakmap.android.harrissaspr.driver.UsbSerialPort$ControlLine: com.atakmap.android.harrissaspr.driver.UsbSerialPort$ControlLine[] values()
androidx.recyclerview.widget.ItemTouchHelper: androidx.recyclerview.widget.ItemTouchHelper$Callback mCallback
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int)
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: ViewInfoStore$InfoRecord()
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$5: HarrisSaSprDropDownReceiver$5(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver,com.atakmap.android.harrissaspr.driver.UsbSerialProber,android.hardware.usb.UsbManager,android.widget.EditText,android.widget.Switch,android.content.Context)
com.atakmap.android.harrissaspr.plugin.R$attr: int fastScrollHorizontalThumbDrawable
androidx.recyclerview.widget.DiffUtil$DiffResult: int mOldListSize
androidx.recyclerview.widget.ItemTouchHelper: java.lang.String TAG
androidx.recyclerview.widget.DefaultItemAnimator: boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List)
androidx.recyclerview.widget.RecyclerView$OnItemTouchListener: void onRequestDisallowInterceptTouchEvent(boolean)
androidx.recyclerview.widget.DividerItemDecoration: void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: void testConnection()
androidx.recyclerview.widget.FastScroller: android.graphics.drawable.Drawable getVerticalThumbDrawable()
androidx.recyclerview.widget.RecyclerView$State: boolean mStructureChanged
androidx.recyclerview.widget.LayoutState: int mCurrentPosition
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$4: android.widget.Switch val$sprGpsSwitch
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void endAnimations()
androidx.recyclerview.widget.SimpleItemAnimator: boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
androidx.recyclerview.widget.LinearLayoutManager: void setReverseLayout(boolean)
androidx.recyclerview.widget.ItemTouchHelper: int ACTION_MODE_DRAG_MASK
com.atakmap.android.harrissaspr.converters.HarrisSAparser: java.lang.String SAend
androidx.recyclerview.widget.ViewBoundsCheck$Callback: int getChildEnd(android.view.View)
androidx.recyclerview.widget.GridLayoutManager: void guessMeasurement(float,int)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$8: void onReceive(android.content.Context,android.content.Intent)
androidx.recyclerview.widget.AsyncListUtil: int mDisplayedGeneration
com.atakmap.android.harrissaspr.plugin.R$id: int edttxtSelfCombatIDSPR
androidx.recyclerview.widget.SimpleItemAnimator: boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory mEdgeEffectFactory
androidx.recyclerview.widget.AdapterHelper$UpdateOp: int ADD
androidx.recyclerview.widget.ListAdapter$1: void onCurrentListChanged(java.util.List,java.util.List)
androidx.recyclerview.widget.GridLayoutManager: int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.annotation.Dimension: int DP
com.atakmap.android.harrissaspr.plugin.R$string: int btnRemove
com.atakmap.android.harrissaspr.plugin.R$drawable: int comabat_recon_air_assault
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: CommonUsbSerialPort(android.hardware.usb.UsbDevice,int)
androidx.recyclerview.widget.LinearSmoothScroller: int calculateDxToMakeVisible(android.view.View,int)
androidx.recyclerview.R$styleable: int RecyclerView_fastScrollVerticalTrackDrawable
androidx.recyclerview.widget.GridLayoutManager: boolean DEBUG
androidx.recyclerview.widget.LinearLayoutManager: void resolveShouldLayoutReverse()
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean areAllEndsEqual()
androidx.recyclerview.widget.MessageThreadUtil$1: java.lang.Runnable mMainThreadRunnable
com.atakmap.android.harrissaspr.plugin.R$drawable: int rotor_jammer
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: java.lang.String toString()
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: android.view.animation.Interpolator mInterpolator
com.atakmap.android.harrissaspr.plugin.R$string: int radioAlias
androidx.recyclerview.widget.DividerItemDecoration
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setGapStrategy(int)
androidx.recyclerview.widget.RecyclerView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.recyclerview.widget.AsyncListDiffer: androidx.recyclerview.widget.ListUpdateCallback mUpdateCallback
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$6$1: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreScroll(int,int,int[],int[])
com.atakmap.android.harrissaspr.plugin.R$styleable
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo
androidx.recyclerview.widget.RecyclerView$6: void offsetPositionsForAdd(int,int)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$3: void onCheckedChanged(android.widget.CompoundButton,boolean)
androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean isItemChanged()
com.atakmap.android.harrissaspr.plugin.BuildConfig: boolean DEBUG
androidx.recyclerview.R$dimen: R$dimen()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1: androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel)
androidx.recyclerview.widget.OrientationHelper
androidx.recyclerview.widget.DividerItemDecoration: android.graphics.drawable.Drawable getDrawable()
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$4
com.atakmap.android.harrissaspr.plugin.R$drawable: int vehicle_boat
com.atakmap.android.harrissaspr.plugin.R$drawable: int weapon_automatic
androidx.recyclerview.widget.LayoutState: int mStartLine
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mPosition
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.recyclerview.widget.RecyclerView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$1: HarrisSaSprDropDownReceiver$1(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver)
androidx.recyclerview.widget.ItemTouchHelper$Callback: float getMoveThreshold(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.GridLayoutManager: android.view.View[] mSet
androidx.recyclerview.widget.AsyncListUtil$1
androidx.recyclerview.widget.SortedList: int mSize
androidx.annotation.Dimension: int unit()
com.atakmap.android.harrissaspr.plugin.R$drawable: int fixed_c3i
androidx.recyclerview.widget.FastScroller$AnimatorListener: androidx.recyclerview.widget.FastScroller this$0
androidx.recyclerview.widget.OpReorderer$Callback
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator
androidx.recyclerview.widget.RecyclerView$LayoutManager: int mWidthMode
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: java.lang.Boolean hhmp_spr
com.atakmap.android.harrissaspr.plugin.R$drawable: int rotor_csar
androidx.recyclerview.widget.LinearLayoutManager: boolean canScrollHorizontally()
com.atakmap.android.harrissaspr.driver.UsbSerialPort$Parity
androidx.recyclerview.widget.AsyncListUtil$2: android.util.SparseBooleanArray mLoadedTiles
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: GridLayoutManager$SpanSizeLookup()
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem: java.lang.Object data
androidx.recyclerview.widget.DefaultItemAnimator: void animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.atakmap.android.harrissaspr.plugin.R$styleable: int RecyclerView_fastScrollHorizontalThumbDrawable
com.atakmap.android.harrissaspr.plugin.BuildConfig: java.lang.String ATAK_PACKAGE_NAME
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: void resetFlags()
androidx.recyclerview.widget.OrientationHelper: OrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper$1)
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: com.atakmap.android.harrissaspr.util.SerialInputOutputManager$State mState
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver: void triggerUpdateProcessor()
com.atakmap.android.harrissaspr.plugin.R$string: int SPR_GPS_ENABLED
androidx.recyclerview.widget.GapWorker: GapWorker()
androidx.recyclerview.widget.ViewBoundsCheck: int GT
androidx.recyclerview.widget.FastScroller: int mState
androidx.recyclerview.widget.StaggeredGridLayoutManager: java.lang.Runnable mCheckForGapsRunnable
androidx.recyclerview.widget.AsyncListDiffer: java.util.concurrent.Executor mMainThreadExecutor
androidx.recyclerview.widget.LinearLayoutManager: int getOrientation()
androidx.recyclerview.widget.LinearLayoutManager: int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: void onDropDownClose()
androidx.recyclerview.widget.RecyclerView$ViewFlinger: void internalPostOnAnimation()
androidx.recyclerview.widget.RecyclerView: void recoverFocusFromState()
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void setLine(int)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnItemTouchListener mInterceptingOnItemTouchListener
androidx.recyclerview.widget.DiffUtil$DiffResult: int FLAG_IGNORE
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$11: android.widget.Spinner val$spnUnit
androidx.recyclerview.widget.RecyclerView: boolean mPreserveFocusAfterLayout
androidx.recyclerview.widget.RecyclerView: boolean removeAnimatingView(android.view.View)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int getSpanSize()
androidx.recyclerview.widget.RecyclerView$ItemAnimator: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mListener
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
androidx.recyclerview.widget.LinearSmoothScroller: void updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int findFirstReferenceChildPosition(int)
androidx.recyclerview.widget.GridLayoutManager: int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View findContainingItemView(android.view.View)
androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners
androidx.recyclerview.widget.AsyncListUtil$ViewCallback: void extendRangeInto(int[],int[],int)
com.atakmap.android.harrissaspr.plugin.R$drawable: int fixed_medevac
androidx.recyclerview.widget.DefaultItemAnimator$6: void onAnimationCancel(android.animation.Animator)
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope GROUP_ID
androidx.recyclerview.widget.SimpleItemAnimator: boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.recyclerview.widget.TileList: androidx.recyclerview.widget.TileList$Tile getAtIndex(int)
androidx.recyclerview.widget.MessageThreadUtil: androidx.recyclerview.widget.ThreadUtil$BackgroundCallback getBackgroundProxy(androidx.recyclerview.widget.ThreadUtil$BackgroundCallback)
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: RecyclerView$EdgeEffectFactory()
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation: boolean mOverridden
androidx.recyclerview.widget.RecyclerView$LayoutManager: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: int mMaxScrap
androidx.recyclerview.widget.RecyclerView$LayoutManager: void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.recyclerview.widget.AdapterHelper$UpdateOp: AdapterHelper$UpdateOp(int,int,int,java.lang.Object)
androidx.recyclerview.widget.RecyclerView$OnScrollListener: void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int)
androidx.recyclerview.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean mRecycle
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.recyclerview.widget.RecyclerView$Adapter: int getItemViewType(int)
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int GAP_HANDLING_NONE
com.atakmap.android.harrissaspr.plugin.R$drawable: int weapon
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$6$1: HarrisSaSprDropDownReceiver$6$1(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$6,android.widget.Spinner)
androidx.annotation.FloatRange: double to()
com.atakmap.android.harrissaspr.SprSerialService: void onDestroy()
androidx.recyclerview.widget.AsyncListUtil$2: androidx.recyclerview.widget.AsyncListUtil this$0
androidx.recyclerview.widget.SortedListAdapterCallback: void onInserted(int,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getRightDecorationWidth(android.view.View)
androidx.recyclerview.widget.OrientationHelper: int getTransformedStartWithDecoration(android.view.View)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedTop(android.view.View)
androidx.recyclerview.widget.GridLayoutManager: int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.ChildHelper: void removeView(android.view.View)
androidx.recyclerview.widget.AdapterHelper: boolean DEBUG
androidx.recyclerview.widget.RecyclerView: void assertNotInLayoutOrScroll(java.lang.String)
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo: int toX
androidx.recyclerview.widget.GapWorker$Task: boolean immediate
androidx.recyclerview.widget.GridLayoutManager: void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,boolean)
androidx.recyclerview.widget.DefaultItemAnimator: boolean DEBUG
androidx.recyclerview.widget.RecyclerView$Recycler: void clear()
androidx.recyclerview.widget.ViewInfoStore$ProcessCallback: void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean canScrollVertically()
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_armor_track_amphibious
com.atakmap.android.harrissaspr.driver.UsbSerialPort: int STOPBITS_1
androidx.recyclerview.widget.RecyclerView: void access$100(androidx.recyclerview.widget.RecyclerView,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.recyclerview.widget.OrientationHelper$2: int getEnd()
androidx.recyclerview.widget.DefaultItemAnimator$4: void onAnimationEnd(android.animation.Animator)
androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)
com.atakmap.android.harrissaspr.driver.UsbSerialPort: java.lang.String getSerial()
androidx.recyclerview.widget.ItemTouchUIUtilImpl
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$8: android.widget.TableLayout val$tblLayoutSPR
androidx.recyclerview.widget.RecyclerView$ViewHolder: void clearPayload()
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemRangeChanged(int,int,java.lang.Object)
androidx.recyclerview.widget.DiffUtil$DiffResult: int FLAG_CHANGED
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: int USB_RECIP_INTERFACE
androidx.recyclerview.widget.BatchingListUpdateCallback: int TYPE_NONE
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback: int getDragDirs(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAllViews()
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: int mAttachCount
com.atakmap.android.harrissaspr.converters.HarrisSAparser: java.lang.String Callsign()
com.atakmap.android.harrissaspr.plugin.R$drawable: int rotor_sof
androidx.recyclerview.widget.RecyclerView: boolean dispatchToOnItemTouchListeners(android.view.MotionEvent)
com.atakmap.android.harrissaspr.plugin.R$id
androidx.recyclerview.widget.AsyncListUtil$ViewCallback
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: RecyclerView$AdapterDataObservable()
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.recyclerview.widget.DefaultItemAnimator: void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.RecyclerView$State: void put(int,java.lang.Object)
com.atakmap.android.harrissaspr.HarrisSaSprMapComponent: java.lang.String TAG
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context)
com.atakmap.android.harrissaspr.driver.UsbSerialPort: int PARITY_SPACE
androidx.recyclerview.widget.RecyclerView$Recycler: void clearOldPositions()
androidx.recyclerview.R$styleable: int RecyclerView_fastScrollVerticalThumbDrawable
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_armor_wheeled_recovery
androidx.recyclerview.widget.RecyclerView$2
com.atakmap.android.harrissaspr.driver.UsbSerialPort: java.util.EnumSet getSupportedControlLines()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int INVALID_OFFSET
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$11: java.lang.String[] val$spr_fields
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: int share_img
com.atakmap.android.harrissaspr.util.SerialInputOutputManager$Listener
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int findFirstCompletelyVisibleItemPosition()
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup
androidx.recyclerview.widget.GridLayoutManager: void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
androidx.recyclerview.widget.AsyncListDiffer: void addListListener(androidx.recyclerview.widget.AsyncListDiffer$ListListener)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: GridLayoutManager$LayoutParams(android.view.ViewGroup$LayoutParams)
com.atakmap.android.harrissaspr.plugin.PluginTemplateTool: java.lang.String getDescription()
androidx.recyclerview.widget.RecyclerView$ViewHolder: int FLAG_MOVED
com.atakmap.android.harrissaspr.driver.UsbSerialPort: int STOPBITS_2
androidx.recyclerview.widget.AdapterHelper$Callback: void offsetPositionsForMove(int,int)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.atakmap.android.harrissaspr.plugin.R$drawable: int sea_amphibious
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: StaggeredGridLayoutManager$LayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
androidx.recyclerview.widget.RecyclerView: void postAnimationRunner()
androidx.recyclerview.widget.ViewBoundsCheck: int CVE_PVE_POS
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: android.content.BroadcastReceiver br
androidx.recyclerview.widget.OrientationHelper$1: void offsetChildren(int)
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mIgnoreConsumed
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: void purgeHwBuffers(boolean,boolean)
androidx.recyclerview.widget.LinearSnapHelper: androidx.recyclerview.widget.OrientationHelper mHorizontalHelper
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getMaxEnd(int)
androidx.recyclerview.widget.TileList: int mTileSize
androidx.recyclerview.widget.DiffUtil$PostponedUpdate: DiffUtil$PostponedUpdate(int,int,boolean)
androidx.recyclerview.widget.SortedList: int findIndexOf(java.lang.Object,java.lang.Object[],int,int,int)
androidx.recyclerview.widget.FastScroller: int mAnimationState
androidx.recyclerview.widget.DefaultItemAnimator$2: DefaultItemAnimator$2(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList)
com.atakmap.android.harrissaspr.driver.UsbSerialPort: int read(byte[],int)
androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)
com.atakmap.android.harrissaspr.plugin.R$drawable: int sea_line
androidx.recyclerview.widget.RecyclerView$Recycler: androidx.recyclerview.widget.RecyclerView this$0
androidx.recyclerview.widget.RecyclerView: void defaultOnMeasure(int,int)
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: boolean isSpanIndexCacheEnabled()
androidx.recyclerview.widget.FastScroller$AnimatorListener
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: android.hardware.usb.UsbDevice mDevice
androidx.recyclerview.widget.RecyclerView: void onDraw(android.graphics.Canvas)
androidx.recyclerview.widget.RecyclerView: void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: void notifyItemRangeInserted(int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean mLaidOutInvalidFullSpan
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: android.view.View nextViewInLimitedList(android.view.View)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isSmoothScrolling()
androidx.recyclerview.widget.AdapterHelper: boolean mDisableRecycler
androidx.recyclerview.widget.RecyclerView$LayoutParams: RecyclerView$LayoutParams(int,int)
androidx.recyclerview.R$dimen: int item_touch_helper_swipe_escape_velocity
androidx.recyclerview.widget.TileList$Tile: java.lang.Object getByPosition(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: int mSpanOffsetsSize
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int getDeletedSize()
androidx.recyclerview.widget.ViewBoundsCheck: int FLAG_CVE_EQ_PVE
androidx.recyclerview.widget.OrientationHelper$1: int getModeInOther()
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: boolean stackFromEnd
androidx.recyclerview.widget.RecyclerView: boolean VERBOSE_TRACING
androidx.recyclerview.widget.LinearLayoutManager: int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.RecyclerView: java.lang.String TAG
androidx.recyclerview.widget.FastScroller$AnimatorUpdater: void onAnimationUpdate(android.animation.ValueAnimator)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int mFullSizeSpec
androidx.recyclerview.widget.SortedList$BatchedCallback
com.atakmap.android.harrissaspr.plugin.PluginLifecycle: void onResume()
com.atakmap.android.harrissaspr.converters.SprSAparser: java.lang.Boolean Alert(byte[])
com.atakmap.android.harrissaspr.plugin.R$drawable: int cs_ew
androidx.recyclerview.widget.RecyclerView: void scrollToPosition(int)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: int access$708(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: int access$608(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver)
androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: void onDropDownSelectionRemoved()
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: androidx.recyclerview.widget.ViewInfoStore$InfoRecord obtain()
androidx.recyclerview.widget.RecyclerView$LayoutManager
androidx.recyclerview.widget.ChildHelper: androidx.recyclerview.widget.ChildHelper$Callback mCallback
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: boolean isFullSpan()
androidx.recyclerview.widget.SnapHelper: SnapHelper()
androidx.recyclerview.widget.ItemTouchHelper$Callback$1: float getInterpolation(float)
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo: int toY
androidx.annotation.StringRes
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingLeft()
com.atakmap.android.harrissaspr.plugin.R$drawable: R$drawable()
com.atakmap.android.harrissaspr.plugin.R$id: int tabHost
androidx.recyclerview.widget.RecyclerView$6: void offsetPositionsForMove(int,int)
androidx.recyclerview.widget.RecyclerView$5
androidx.recyclerview.widget.RecyclerView$LayoutManager: void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.graphics.Rect mTmpRect
com.atakmap.android.harrissaspr.plugin.PluginNativeLoader: PluginNativeLoader()
com.atakmap.android.harrissaspr.plugin.R$drawable: int c2_hq
androidx.recyclerview.widget.LinearLayoutManager: int convertFocusDirectionToLayoutDirection(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean performAccessibilityActionForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,int,android.os.Bundle)
androidx.recyclerview.widget.AdapterHelper$UpdateOp: int cmd
androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets
androidx.annotation.InspectableProperty$ValueType
com.atakmap.android.harrissaspr.SprSerialService: android.hardware.usb.UsbDeviceConnection connection
com.atakmap.android.harrissaspr.plugin.R$drawable: int rotor
com.atakmap.android.harrissaspr.driver.ProbeTable
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$5: void onCheckedChanged(android.widget.CompoundButton,boolean)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: int[] iconsVEHICLE
androidx.recyclerview.widget.RecyclerView$LayoutManager$1: int getChildStart(android.view.View)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void updateMeasureSpecs(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int mDeletedSize
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: boolean getRTS()
androidx.recyclerview.widget.GapWorker$Task: int distanceToItem
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl: boolean lastPrefetchIncludedPosition(int)
androidx.recyclerview.widget.AdapterHelper
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: void openInt(android.hardware.usb.UsbDeviceConnection)
com.atakmap.android.harrissaspr.HhmpUdpService: HhmpUdpService()
androidx.recyclerview.widget.SimpleItemAnimator: java.lang.String TAG
com.atakmap.android.harrissaspr.plugin.R$drawable: int sea_passenger
androidx.recyclerview.widget.RecyclerView$Recycler: java.util.List mUnmodifiableAttachedScrap
androidx.recyclerview.widget.LinearLayoutManager: void setRecycleChildrenOnDetach(boolean)
androidx.recyclerview.widget.DefaultItemAnimator: boolean endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.atakmap.android.harrissaspr.plugin.R$style: int ATAKSpinnerItem
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$8: android.widget.Switch val$sprSwitch
androidx.recyclerview.widget.RecyclerView$LayoutManager: void assertInLayoutOrScroll(java.lang.String)
androidx.recyclerview.widget.RecyclerView$Recycler: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isLayoutHierarchical(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mValid
androidx.recyclerview.widget.SortedList: int indexOf(java.lang.Object)
androidx.recyclerview.widget.AsyncListUtil: androidx.recyclerview.widget.ThreadUtil$BackgroundCallback mBackgroundCallback
androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$5: android.widget.EditText val$SPR_GPS_ID
androidx.recyclerview.widget.ViewBoundsCheck: int FLAG_CVS_EQ_PVS
androidx.recyclerview.widget.RecyclerView$ViewFlinger: int computeScrollDuration(int,int,int,int)
com.atakmap.android.harrissaspr.plugin.R$drawable: int sof_ssnr
androidx.recyclerview.widget.ViewBoundsCheck$Callback: int getParentStart()
com.atakmap.android.harrissaspr.plugin.R$drawable: int weapon_direct_fire
androidx.recyclerview.widget.RecyclerView$SmoothScroller: android.view.View findViewByPosition(int)
androidx.annotation.VisibleForTesting: int NONE
androidx.recyclerview.widget.ItemTouchHelper: int ACTION_MODE_SWIPE_MASK
androidx.recyclerview.widget.DiffUtil$Range: int oldListEnd
com.atakmap.android.harrissaspr.plugin.BuildConfig: java.lang.String VERSION_NAME
androidx.recyclerview.widget.RecyclerView$LayoutManager: void stopIgnoringView(android.view.View)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void fixEndGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.recyclerview.widget.RecyclerView: boolean mItemsAddedOrRemoved
androidx.recyclerview.widget.RecyclerView: void onScrolled(int,int)
androidx.recyclerview.widget.ItemTouchHelper: boolean scrollIfNecessary()
androidx.recyclerview.widget.OrientationHelper$1: int getTotalSpace()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem: int arg2
com.atakmap.android.harrissaspr.LocateMarker: void placeHhmpMarker(java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
androidx.recyclerview.widget.SortedList$Callback: void onChanged(int,int)
androidx.recyclerview.widget.FastScroller: void horizontalScrollTo(float)
androidx.recyclerview.widget.RecyclerView: android.view.View findChildViewUnder(float,float)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: java.lang.String SHOW_PLUGIN
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context)
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
androidx.recyclerview.widget.RecyclerView: void access$300(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: androidx.recyclerview.widget.OrientationHelper mOrientationHelper
androidx.recyclerview.widget.MessageThreadUtil$2: int LOAD_TILE
androidx.annotation.CheckResult: java.lang.String suggest()
androidx.recyclerview.R$attr: int fastScrollHorizontalTrackDrawable
androidx.recyclerview.widget.FastScroller: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.ViewBoundsCheck$Callback
androidx.recyclerview.widget.ItemTouchHelper$Callback: ItemTouchHelper$Callback()
com.atakmap.android.harrissaspr.converters.MILSTDconverter: MILSTDconverter()
androidx.recyclerview.widget.SimpleItemAnimator: boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.DefaultItemAnimator: java.util.ArrayList mPendingRemovals
androidx.recyclerview.widget.SnapHelper$2: SnapHelper$2(androidx.recyclerview.widget.SnapHelper,android.content.Context)
androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)
androidx.annotation.AnyThread
androidx.recyclerview.widget.GridLayoutManager: boolean mUsingSpansToEstimateScrollBarDimensions
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getChildCount()
androidx.recyclerview.widget.ItemTouchUIUtilImpl: void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean)
com.atakmap.android.harrissaspr.driver.CdcAcmSerialDriver$CdcAcmSerialPort: void setBreak(boolean)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void invalidateCache()
com.atakmap.android.harrissaspr.plugin.R$drawable: int combat_inf_mechanized
com.atakmap.android.harrissaspr.plugin.R$drawable: int cs_nuclear
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$7: HarrisSaSprDropDownReceiver$7(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver,android.widget.TableLayout,android.widget.TableLayout,android.content.Context)
androidx.recyclerview.widget.AdapterHelper: boolean onItemRangeChanged(int,int,java.lang.Object)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$3
androidx.recyclerview.widget.ItemTouchHelper: void removeChildDrawingOrderCallbackIfNecessary(android.view.View)
androidx.recyclerview.widget.DefaultItemAnimator$2: java.util.ArrayList val$changes
androidx.recyclerview.widget.AsyncListDiffer: java.util.List getCurrentList()
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: void setParameters(int,int,int,int)
androidx.recyclerview.widget.AdapterHelper$UpdateOp: int UPDATE
androidx.recyclerview.widget.RecyclerView$3
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: java.lang.String toString()
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanIndex
com.atakmap.android.harrissaspr.plugin.R$drawable: int sea_minelayer
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.recyclerview.widget.RecyclerView$6
com.atakmap.android.harrissaspr.plugin.R$string: int versionName
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_CREATE_VIEW_TAG
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl: void addPosition(int,int)
androidx.recyclerview.widget.GridLayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.atakmap.android.harrissaspr.plugin.R$dimen: int fastscroll_default_thickness
androidx.recyclerview.widget.FastScroller: int mHorizontalThumbHeight
androidx.recyclerview.widget.AdapterHelper$Callback: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int)
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: com.atakmap.android.harrissaspr.driver.UsbSerialPort mSerialPort
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$7: android.widget.TableLayout val$tblLayoutHHMP
androidx.recyclerview.widget.RecyclerView: java.lang.Runnable mUpdateChildViewsRunnable
androidx.recyclerview.widget.ItemTouchHelper: void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.ItemTouchHelper$1
androidx.annotation.AnimRes
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow
androidx.recyclerview.widget.AsyncListUtil: java.lang.Class mTClass
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityNodeInfoForItem(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int[] findFirstVisibleItemPositions(int[])
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: int getRecycledViewCount(int)
androidx.recyclerview.widget.FastScroller: androidx.recyclerview.widget.RecyclerView mRecyclerView
androidx.recyclerview.widget.TileList: androidx.recyclerview.widget.TileList$Tile mLastAccessedTile
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo
androidx.recyclerview.widget.SortedList$BatchedCallback: void onChanged(int,int,java.lang.Object)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean)
com.atakmap.android.harrissaspr.plugin.R$string: int CHOOSE_MARKER
com.atakmap.android.harrissaspr.plugin.R$drawable: int fixed_recon
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void normalize(android.graphics.PointF)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.ChildHelper: int getOffset(int)
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1: androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation this$0
androidx.recyclerview.widget.FastScroller$1
androidx.recyclerview.widget.ItemTouchHelper: java.lang.Runnable mScrollRunnable
androidx.recyclerview.widget.ItemTouchHelper$Callback: boolean onMove(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.RecyclerView: void ensureLeftGlow()
androidx.recyclerview.widget.SortedList: java.lang.Class mTClass
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedScroll(int,int,int,int,int[])
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int LAYOUT_END
androidx.annotation.RequiresPermission$Write
com.atakmap.android.harrissaspr.driver.UsbSerialPort: int STOPBITS_1_5
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: void setListener(com.atakmap.android.harrissaspr.util.SerialInputOutputManager$Listener)
androidx.recyclerview.widget.ItemTouchHelper: android.view.View mOverdrawChild
androidx.recyclerview.widget.ScrollbarHelper
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver: int[] iconsDOMAIN
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$7: com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver this$0
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ViewBoundsCheck$Callback mHorizontalBoundCheckCallback
androidx.recyclerview.widget.LayoutState: int mAvailable
androidx.recyclerview.widget.StaggeredGridLayoutManager: void handleUpdate(int,int,int)
androidx.recyclerview.widget.ChildHelper$Callback: int indexOfChild(android.view.View)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setSpanCount(int)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$1
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$6: com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver this$0
androidx.recyclerview.widget.ScrollbarHelper: int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
com.atakmap.android.harrissaspr.driver.CommonUsbSerialPort: boolean getDSR()
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$6$2: android.widget.TableLayout val$t1
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: void setSpanGroupIndexCacheEnabled(boolean)
com.atakmap.android.harrissaspr.plugin.R$drawable: int cs_chemical
androidx.recyclerview.widget.GridLayoutManager: int mSpanCount
androidx.recyclerview.widget.RecyclerView: boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
com.atakmap.android.harrissaspr.plugin.R$drawable: int fixed_attack
androidx.recyclerview.widget.DefaultItemAnimator: void endChangeAnimation(java.util.List,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.ViewInfoStore: boolean isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.FastScroller: int HIDE_DELAY_AFTER_DRAGGING_MS
com.atakmap.android.harrissaspr.converters.HarrisSAparser: java.lang.Boolean CHKSUMM_pass()
androidx.recyclerview.widget.LinearLayoutManager: void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)
androidx.recyclerview.widget.MessageThreadUtil$2: int UPDATE_RANGE
androidx.recyclerview.R$styleable
androidx.recyclerview.widget.DividerItemDecoration: android.graphics.Rect mBounds
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$5: com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver this$0
com.atakmap.android.harrissaspr.SprSerialService: int WRITE_WAIT_MILLIS
androidx.recyclerview.widget.AsyncListUtil: int getItemCount()
androidx.recyclerview.widget.SimpleItemAnimator
androidx.recyclerview.widget.AsyncListUtil: androidx.recyclerview.widget.AsyncListUtil$DataCallback mDataCallback
com.atakmap.android.harrissaspr.plugin.R$drawable: int btn_gray
androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState
com.atakmap.android.harrissaspr.driver.ProbeTable: java.lang.Class findDriver(int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void calculateCachedStart()
androidx.recyclerview.widget.LinearSmoothScroller: android.view.animation.LinearInterpolator mLinearInterpolator
androidx.recyclerview.widget.RecyclerView$SmoothScroller: int mTargetPosition
androidx.recyclerview.widget.ItemTouchHelper$Callback: float getSwipeEscapeVelocity(float)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getBottomDecorationHeight(android.view.View)
androidx.recyclerview.widget.GapWorker$1: int compare(java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View findFirstVisibleItemClosestToStart(boolean)
androidx.recyclerview.widget.AdapterHelper: androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object)
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int getDy()
androidx.recyclerview.widget.RecyclerView$4: void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setMeasurementCacheEnabled(boolean)
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int top
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: boolean mInvalidateOffsets
androidx.recyclerview.widget.GapWorker: androidx.recyclerview.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(androidx.recyclerview.widget.RecyclerView,int,long)
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.os.Parcelable onSaveInstanceState()
androidx.annotation.WorkerThread
androidx.recyclerview.widget.DefaultItemAnimator$2: void run()
androidx.recyclerview.widget.FastScroller: int STATE_HIDDEN
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onAnimation(int,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean supportsPredictiveItemAnimations()
com.atakmap.android.harrissaspr.plugin.R$id: int swGPSHHMP
com.atakmap.android.harrissaspr.SprSerialService: void SPRengine()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void measureChild(android.view.View,int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
androidx.recyclerview.widget.LinearLayoutManager: int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.StaggeredGridLayoutManager: java.lang.String TAG
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldBeKeptAsChild()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1: java.lang.Object[] newArray(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View findFirstVisibleItemClosestToEnd(boolean)
com.atakmap.android.harrissaspr.HhmpUdpService: java.lang.String TAG
androidx.recyclerview.widget.FastScroller: int mVerticalThumbCenterY
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$1: void onTabChanged(java.lang.String)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$6: HarrisSaSprDropDownReceiver$6(com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver,android.content.Context)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedRight(android.view.View)
androidx.recyclerview.widget.SortedList: int MIN_CAPACITY
androidx.recyclerview.widget.RecyclerView$Adapter: RecyclerView$Adapter()
androidx.recyclerview.widget.FastScroller: void resetHideDelay(int)
androidx.recyclerview.widget.ItemTouchHelper: void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.recyclerview.widget.DiffUtil$ItemCallback: java.lang.Object getChangePayload(java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.PagerSnapHelper: int distanceToCenter(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View,androidx.recyclerview.widget.OrientationHelper)
com.atakmap.android.harrissaspr.plugin.R$attr: int fastScrollVerticalTrackDrawable
androidx.recyclerview.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)
androidx.recyclerview.widget.AsyncListUtil$1: androidx.recyclerview.widget.AsyncListUtil this$0
com.atakmap.android.harrissaspr.HhmpUdpService$1: com.atakmap.android.harrissaspr.HhmpUdpService this$0
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void setTargetPosition(int)
androidx.recyclerview.widget.SortedList: androidx.recyclerview.widget.SortedList$BatchedCallback mBatchedCallback
androidx.recyclerview.widget.RecyclerView$2: RecyclerView$2(androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.DividerItemDecoration: void setOrientation(int)
androidx.recyclerview.widget.SnapHelper: void setupCallbacks()
com.atakmap.android.harrissaspr.plugin.R$drawable: int sof_boat
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: int orientation
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData
com.atakmap.android.harrissaspr.plugin.R$drawable: int sof
androidx.recyclerview.widget.FastScroller: androidx.recyclerview.widget.RecyclerView$OnScrollListener mOnScrollListener
androidx.recyclerview.widget.GridLayoutManager: void ensureViewSet()
androidx.recyclerview.widget.LinearSnapHelper: androidx.recyclerview.widget.OrientationHelper mVerticalHelper
com.atakmap.android.harrissaspr.driver.UsbSerialPort$ControlLine: com.atakmap.android.harrissaspr.driver.UsbSerialPort$ControlLine[] $VALUES
androidx.recyclerview.widget.RecyclerView$ItemDecoration
androidx.recyclerview.widget.SimpleItemAnimator: void onAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int)
androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider: android.graphics.PointF computeScrollVectorForPosition(int)
androidx.recyclerview.widget.AdapterListUpdateCallback: void onRemoved(int,int)
androidx.recyclerview.widget.DiffUtil$DiffResult: androidx.recyclerview.widget.DiffUtil$Callback mCallback
com.atakmap.android.harrissaspr.plugin.R$drawable: int vehicle_ambulance
androidx.recyclerview.widget.AsyncListUtil: int mTileSize
androidx.recyclerview.widget.GapWorker$Task: GapWorker$Task()
com.atakmap.android.harrissaspr.converters.HarrisSAparser: java.lang.String CotDateTime()
com.atakmap.android.harrissaspr.SprSerialService: com.atakmap.android.harrissaspr.driver.UsbSerialPort access$202(com.atakmap.android.harrissaspr.SprSerialService,com.atakmap.android.harrissaspr.driver.UsbSerialPort)
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener
androidx.recyclerview.widget.BatchingListUpdateCallback: int TYPE_REMOVE
androidx.recyclerview.widget.FastScroller: int mHorizontalThumbWidth
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$10: void onClick(android.view.View)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void addDisappearingView(android.view.View,int)
com.atakmap.android.harrissaspr.plugin.R$layout: int spinner_item
androidx.recyclerview.widget.GapWorker$Task: int viewVelocity
androidx.recyclerview.widget.RecyclerView$LayoutManager: void addDisappearingView(android.view.View)
com.atakmap.android.harrissaspr.HarrisSaSprDropDownReceiver$9: android.content.Context val$context
androidx.recyclerview.widget.MessageThreadUtil$2
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType INT_ENUM
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl: void clearPrefetchPositions()
com.atakmap.android.harrissaspr.IconsAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void factorInBindTime(int,long)
androidx.recyclerview.widget.SortedList: void addAll(java.lang.Object[],boolean)
androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener: void onRequestDisallowInterceptTouchEvent(boolean)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: void saveOriginalDelegate(android.view.View)
androidx.recyclerview.widget.FastScroller: void requestRedraw()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void attachView(android.view.View,int)
com.atakmap.android.harrissaspr.util.SerialInputOutputManager: int BUFSIZ
androidx.recyclerview.widget.AsyncListUtil$2: boolean isTileLoaded(int)
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
